"use strict";function alertSuccess(message){Messenger().post({message:message,type:"success",showCloseButton:!0,hideAfter:5})}function alertError(message){Messenger().post({message:message,type:"error",showCloseButton:!0})}function preventDefault($event){$event.preventDefault(),$event.stopPropagation()}var app=angular.module("stickable",["ui.router","ngResource","ngSanitize","LocalStorageModule","angularModalService","ngAnimate","angularMoment","ngCkeditor","markdown","masonry"]);app.config(function($httpProvider,$locationProvider,$stateProvider,$urlRouterProvider,localStorageServiceProvider){$locationProvider.html5Mode(!0),localStorageServiceProvider.setPrefix("stickable").setStorageType("localStorage").setStorageCookie(0,"/"),$stateProvider.state("home",{url:"/",templateUrl:"views/pages/home.html",controller:"HomeController"}).state("help",{url:"/help",templateUrl:"views/pages/help.html"}).state("browse",{url:"/browse",templateUrl:"views/pages/browse.html",controller:"BrowseController"}).state("bot",{url:"/bot",templateUrl:"views/pages/bot.html",controller:"BotController"}).state("signup",{url:"/signup",templateUrl:"views/pages/auth/signup.html",controller:"SignupController"}).state("login",{url:"/login",templateUrl:"views/pages/auth/login.html",controller:"LoginController",params:{loginFormData:null,response:null}}).state("forgot",{url:"/forgot",templateUrl:"views/pages/auth/forgot.html",controller:"ForgotController"}).state("reset",{url:"/reset/{token:string}",templateUrl:"views/pages/auth/reset.html",controller:"ResetController"}).state("settings",{url:"/settings",templateUrl:"views/pages/settings/index.html",controller:"SettingsController"}).state("notifications",{url:"/notifications",templateUrl:"views/pages/notifications/index.html",controller:"NotificationsController"}).state("user",{url:"/user/{username:string}",templateUrl:"views/pages/user/view.html",controller:"UserProfileController"}).state("user-todo",{url:"/user/{username:string}/todo",templateUrl:"views/pages/user/todo.html",controller:"UserToDoController"}).state("user-stickers",{url:"/user/{username:string}/stickers",templateUrl:"views/pages/user/stickers.html",controller:"UserStickersController"}).state("user-submissions",{url:"/user/{username:string}/submissions",templateUrl:"views/pages/user/submissions.html",controller:"UserSubmissionsController"}).state("category",{url:"/category/{slug:string}",templateUrl:"views/pages/category/view.html",controller:"CategoryController"}).state("sticker",{url:"/sticker/{slug:string}",templateUrl:"views/pages/sticker/view.html",controller:"StickerController"}).state("task",{url:"/task/{slug:string}",templateUrl:"views/pages/task/view.html",controller:"TaskController"}).state("post",{url:"/task/{slug:string}/{postSlug:string}",templateUrl:"views/pages/task/view.html",controller:"TaskController"}),$urlRouterProvider.otherwise("/")}),app.run(function($rootScope,$state,AuthService,UserNotificationsResource,NotificationService,moment){FastClick.attach(document.body),moment.locale("en",{relativeTime:{future:"in %s",past:"%s",s:"1s",m:"1m",mm:"%dm",h:"1h",hh:"%dh",d:"1d",dd:"%dd",M:"1mo",MM:"%dmo",y:"1y",yy:"%dy"}}),marked.setOptions({renderer:new marked.Renderer,gfm:!0,tables:!1,breaks:!0,pedantic:!1,sanitize:!0,smartLists:!0,smartypants:!1}),Dropzone.autoDiscover=!1,$rootScope.dropzoneConfig={options:{autoProcessQueue:!1,uploadMultiple:!0,addRemoveLinks:!0,url:"/api/images"},eventHandlers:{sending:function(file,xhr,formData){},success:function(file,response){}}},$rootScope.$state=$state,$rootScope.pageTitle="",AuthService.checkSession(),$rootScope.currentUser=AuthService.getUser(),$rootScope.notificationsPreview=0,$rootScope.notifications=[],$rootScope.$on("login",function(event,args){$rootScope.currentUser=args.user,NotificationService.onLogin(args.user,args.token)}),$rootScope.$on("logout",function(){$rootScope.currentUser=!1}),$rootScope.$on("$stateChangeSuccess",function(ev,to,toParams,from){$("body").removeClass("navbar-visible").attr("data-previous",from.name),document.body.scrollTop=document.documentElement.scrollTop=0})}),$(document).on("click","body:not(.navbar-visible) .navbar-toggle",function(e){console.log(e),e.preventDefault(),$("body").addClass("navbar-visible")}),$(document).on("click","body.navbar-visible .navbar-toggle",function(e){e.preventDefault(),$("body").removeClass("navbar-visible")}),$(document).on("click","body.navbar-visible",function(e){$(e.target).closest("#top-bar-nav").length>0||$(e.target).closest("button").hasClass("navbar-toggle")||$(e.target).hasClass("navbar-toggle")||(e.preventDefault(),$("body").removeClass("navbar-visible"))}),angular.module("stickable").run(["$templateCache",function($templateCache){$templateCache.put("views/directives/notifications.html",'<ul class="dropdown-menu notifications-dropdown notification-list">\n    <li ng-if="notifications.length < 1" class="no-notifications">\n        No unread notifications\n    </li>\n    <li\n            ng-if="notifications.length > 0"\n            ng-repeat="(index, notification) in notifications"\n            ng-class="{\'new-notification\': notification.new}"\n            >\n        <a href="#" ng-click="goTo($event, index)" class="media">\n\n            <span class="media-left">\n                <span>\n                    <img ng-src="{{notification.image}}" />\n                </span>\n            </span>\n\n            <span class="media-body media-middle">\n                <i class="fa" ng-class="\'fa-\'+notification.icon"></i>\n                <span ng-bind-html="notification.text | markdown"></span>\n            </span>\n\n            <span class="media-right media-middle" ng-click="clear($event, index)">\n                <span class="time" am-time-ago="notification.createdAt"></span>\n                <i class="btn-clear fa fa-times-circle-o"></i>\n            </span>\n\n        </a>\n    </li>\n</ul>\n'),$templateCache.put("views/directives/sticker-progress.html",'<span class="progress">\n  <span\n        class="progress-bar progress-bar-success"\n        ng-style="{\'width\': progress.percent+\'%\'}">\n      {{progress.completed}} completed\n  </span>\n  <span\n        class="progress-bar progress-bar-white"\n        ng-style="{\'width\': (100-progress.percent)+\'%\'}">\n      {{progress.remaining}} needed\n  </span>\n</span>\n'),$templateCache.put("views/directives/user-list.html",'\n    <div class="user" ng-repeat="user in data.users" ng-class="{\'liked\': !!user.pivot.liked, \'like-clicked\': !!user.likeClicked}">\n\n        <a href="/user/{{ user.username }}">\n            <span class="pic" ng-style="{\'background-image\':user.image?\'url(\'+user.image.thumbUrl+\')\' : \'\'}">\n                <span>\n                    {{ user.username }}\n                    <small>\n                        <i class="fa fa-clock-o"></i> <span am-time-ago="user.pivot.createdAt"></span>\n                    </small>\n                </span>\n            </span>\n        </a>\n\n        <a class="like-btn like-thumb" ng-click="like($event, user)" href="#">\n            <span><i class="fa fa-thumbs-up"></i> <strong ng-bind="user.pivot.likeCount"></strong></span>\n        </a>\n    </div>\n\n'),$templateCache.put("views/directives/users.html",""),$templateCache.put("views/modals/post-form.html",'<div class="modal">\n\n    <div class="modal-content">\n\n        <div class="modal-header">\n            <button ng-click="close()" class="modal-close-btn">\n                <i class="fa fa-times"></i>\n            </button>\n\n            <h4 class="modal-title">Add A Post</h4>\n        </div>\n\n        <form class="form" ng-submit="submit()">\n\n            <div class="modal-body">\n\n                <div class="form-group">\n\n                    <ul class="tabs tabs-2">\n                        <li ng-class="{\'tab-current\': postType === \'tip\' }">\n                            <a href="#" ng-click="setPostType($event, \'tip\')">\n                                <i class="fa fa-fw fa-info-circle"></i> Tip\n                            </a>\n                        </li>\n                        <li ng-class="{\'tab-current\': postType === \'question\' }">\n                            <a href="#" ng-click="setPostType($event, \'question\')">\n                                <i class="fa fa-fw fa-question-circle"></i> Question\n                            </a>\n                        </li>\n                    </ul>\n\n                </div>\n\n                <div class="form-group">\n                    <label for="post-title">Title</label>\n                    <input type="text"\n                           class="form-control"\n                           ng-model="formData.title"\n                           id="post-title"\n                           placeholder="Give your post a title."/>\n                </div>\n\n                <div class="form-group">\n                    <label for="post-text">Post</label>\n                    <textarea class="form-control" id="post-text" ng-model="formData.text" placeholder="Write your tip, question, or other post here."></textarea>\n                </div>\n\n            </div>\n\n            <div class="modal-footer">\n\n                <button ng-click="close()"\n                        type="button"\n                        class="btn btn-danger btn-labeled pull-left hidden-xs hidden-sm">\n                    <span class="btn-label"><i class="fa fa-trash"></i></span>\n                    Cancel\n                </button>\n\n                <button class="btn btn-primary btn-labeled">\n                    <span class="btn-label"><i class="fa fa-save"></i></span>\n                    Submit\n                </button>\n            </div>\n\n        </form>\n\n    </div>\n\n</div>\n'),$templateCache.put("views/modals/submission-form.html",'<div class="modal submission-form-modal">\n\n    <div class="modal-content">\n\n        <button ng-click="close()" class="modal-close-btn">\n            <i class="fa fa-times"></i>\n        </button>\n\n        <form class="form" ng-submit="submit()">\n\n            <div class="modal-body">\n\n                <div ng-show="stage === 1" class="submission-stage">\n\n                    <h2 class="text-center">{{ task.submission }}</h2>\n\n                    <div ng-include="\'views/partials/submission-forms/\' + task.submissionType.toLowerCase() + \'.html\'"></div>\n\n                </div>\n\n                <div ng-show="stage === 2">\n\n                    <h2 class="text-center">Post Your Submission</h2>\n\n                    <div class="form-group">\n\n                        <ul class="tabs tabs-2">\n                            <li ng-class="{\'tab-current\': formData.private === 0 }">\n                                <a href="#" ng-click="setPrivate($event, 0)">\n                                    <i class="fa fa-fw fa-file-text-o"></i> Post About It\n                                </a>\n                            </li>\n\n                            <li ng-class="{\'tab-current\': formData.private === 1 }">\n                                <a href="#" ng-click="setPrivate($event, 1)">\n                                    <i class="fa fa-fw fa-lock"></i> Keep It Private\n                                </a>\n                            </li>\n                        </ul>\n\n                    </div>\n\n                    <p class="submission-help submission-post-help" ng-show="formData.private === 0">\n                        <i class="fa fa-star"></i> Tell the story of how you completed this task. Did you find it interesting? Can you share some tips to help others?\n                        <br/><i class="fa fa-info-circle"></i> Your photo and story you enter below will appear on the page for the task. Other members can like and comment on your post.\n                    </p>\n\n                    <p class="submission-help" ng-show="formData.private === 1">\n                        <i class="fa fa-info-circle"></i> Your submission will still count towards earning the sticker, but nobody else will see it or be able to like or comment on it.\n                        <br/>\n                        <span class="red">\n                        <i class="fa fa-exclamation-triangle"></i> Stickable works best when you post about the task and share stories and advice for others attempting to complete this. Consider writing a post even if it\'s only a few lines.</span>\n                    </p>\n\n                    <div class="form-group" ng-show="formData.private === 0">\n                        <label for="post-title">Title</label>\n                        <input type="text"\n                               class="form-control"\n                               ng-model="formData.title"\n                               id="post-title"\n                               placeholder="Give your post a title."/>\n                    </div>\n\n                    <div class="form-group" ng-show="formData.private === 0">\n                        <label for="post-text">Content</label>\n                        <textarea class="form-control" id="post-text" ng-model="formData.text" placeholder="Write your tip, question, or other post here."></textarea>\n                    </div>\n\n                </div>\n\n                <div ng-show="stage === 3">\n\n                    <h2 class="text-center">Rate The Task</h2>\n\n                    <p class="submission-help">\n                        <i class="fa fa-info-circle"></i> Providing this feedback helps us suggest tasks you\'ll enjoy that fit your time and budget.</p>\n\n                    <label>How much did it cost?</label>\n                    <ul\n                            class="rating rating-price"\n                            model="formData.cost"\n                            values="[\'Free\', \'< $10\', \'$10 - $50\', \'$50 - $200\', \'> $200\']"></ul>\n\n                    <label>How long did it take?</label>\n                    <ul\n                            class="rating rating-time"\n                            model="formData.time"\n                            values="[\'< 15 mins\', \'< 1 hr\', \'1 - 4 hrs\', \'1 day\', \'> 1 day\']"></ul>\n\n                    <label>How much did you enjoy it?</label>\n                    <ul\n                            class="rating rating-star"\n                            model="formData.rating"\n                            values="[\'Sucked\', \'Meh\', \'Good\', \'Great\', \'Life Changing\']"></ul>\n\n                </div>\n\n            </div>\n\n            <div class="modal-footer">\n\n                <ul class="dots modal-dots">\n                    <li ng-class="{\'active\': stage === 1}"><a href="#" ng-click="toStage(1)"></a></li>\n                    <li ng-class="{\'active\': stage === 2}"><a href="#" ng-click="toStage(2)"></a></li>\n                    <li ng-class="{\'active\': stage === 3}"><a href="#" ng-click="toStage(3)"></a></li>\n                </ul>\n\n                <a class="btn btn-labeled" ng-class="{\'disabled\': !nextEnabled}" ng-click="nextStage()" ng-hide="stage === 3">\n                    <span class="btn-label"><i class="fa fa-arrow-right"></i></span>\n                    Continue\n                </a>\n\n                <button class="btn btn-primary btn-labeled" ng-show="stage === 3">\n                    <span class="btn-label"><i class="fa fa-save"></i></span>\n                    Submit\n                </button>\n            </div>\n\n        </form>\n\n    </div>\n\n</div>\n'),$templateCache.put("views/pages/auth/forgot.html",'<div class="container">\n    <div class="row">\n\n            <div class="panel panel-default">\n                <div class="panel-heading"><h1>Forgotten Details</h1></div>\n                <div class="panel-body">\n\n                    <form class="form-horizontal" role="form" ng-submit="submit()">\n\n                        <div class="form-group" ng-class="{\'has-error\': forgotFormData.errors.email}" ng-if="!success">\n                            <label class="col-md-4 control-label">Enter Your E-Mail Address <i class="fa fa-envelope"></i></label>\n\n                            <div class="col-md-6">\n                                <span ng-if="forgotFormData.errors.email" class="help-block">{{ forgotFormData.errors.email.join(\' \') }}</span>\n                                <input type="email"\n                                       class="form-control"\n                                       name="email"\n                                       required\n                                       ng-model="forgotFormData.email"/>\n                            </div>\n                        </div>\n\n                        <div class="form-group" ng-if="!success">\n                            <div class="col-md-6 col-md-offset-4">\n                                <button type="submit" class="btn btn-primary" ng-class="{\'btn-loading\': forgotFormData.loading}">\n                                    <i class="fa fa-envelope"></i>\n                                    Send Password Reset Link\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class="alert alert-success" ng-if="success">\n                            <i class="fa fa-envelope"></i> Your details have been sent to <strong>{{\n                            forgotFormData.email }}</strong>.\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n\n    </div>\n</div>\n'),$templateCache.put("views/pages/auth/login.html",'<div class="container">\n    <div class="row">\n\n            <div class="panel panel-default">\n                <div class="panel-heading"><h1>Login</h1></div>\n                <div class="panel-body">\n\n                    <form class="form-horizontal" role="form" ng-submit="login()">\n\n                        <div class="form-group" ng-class="{\'has-error\': loginFormData.errors.username}">\n\n                            <label class="col-md-4 control-label">Username <i class="fa fa-user"></i></label>\n\n                            <div class="col-md-8">\n                                <span ng-if="!loginFormData.errors.username" class="help-block">Up to 30 characters and can only contain letters, numbers, hyphens, or underscores.</span>\n                                <span ng-if="loginFormData.errors.username" class="help-block">{{ loginFormData.errors.username.join(\' \') }}</span>\n                                <input type="username"\n                                       class="form-control"\n                                       name="username"\n                                       value=""\n                                       required\n                                       ng-model="loginFormData.username"\n                                        />\n                            </div>\n                        </div>\n\n                        <div class="form-group" ng-class="{\'has-error\': loginFormData.errors.password}">\n                            <label class="col-md-4 control-label">Password <i class="fa fa-key"></i></label>\n\n                            <div class="col-md-8">\n                                <span ng-if="!loginFormData.errors.password" class="help-block">Minimum 5 characters.</span>\n                                <span ng-if="loginFormData.errors.password" class="help-block">{{ loginFormData.errors.password.join(\' \') }}</span>\n                                <input type="password"\n                                       class="form-control"\n                                       name="password"\n                                       required\n                                       ng-model="loginFormData.password"\n                                        />\n                            </div>\n                        </div>\n\n                        <div class="form-group">\n                            <div class="col-md-8 col-md-offset-4">\n                                <button type="submit" class="btn btn-primary btn-labeled" ng-class="{\'btn-loading\': loginFormData.loading}">\n                                    <span class="btn-label"><i class="fa fa-key"></i></span>\n                                    Login\n                                </button>\n\n                                <a href="/forgot" class="btn btn-labeled">\n                                    <span class="btn-label"><i class="fa fa-question"></i></span>\n                                    Forgot Details\n                                </a>\n                            </div>\n                        </div>\n\n                    </form>\n\n                </div>\n            </div>\n\n    </div>\n</div>\n'),$templateCache.put("views/pages/auth/reset.html",'<div class="container">\n    <div class="row">\n\n            <div class="panel panel-default">\n                <div class="panel-heading"><h1>Create A New Password</h1></div>\n                <div class="panel-body">\n\n                    <form class="form-horizontal" role="form" ng-submit="submit()">\n\n                        <input type="hidden" name="token" ng-model="resetFormData.token">\n\n                        <div class="form-group"\n                             ng-class="{\'has-error\': resetFormData.errors.password}"\n                             ng-if="!success">\n                            <label for="password" class="col-md-4 control-label">Password</label>\n\n                            <div class="col-md-6">\n                                <input type="password"\n                                       class="form-control"\n                                       id="password"\n                                       name="password"\n                                       ng-model="resetFormData.password"\n                                       required>\n\n                                <span ng-if="resetFormData.errors.password" class="help-block">{{ resetFormData.errors.password.join(\' \') }}</span>\n                            </div>\n                        </div>\n\n                        <div class="form-group"\n                             ng-class="{\'has-error\': resetFormData.errors.confirmPassword}"\n                             ng-if="!success">\n                            <label for="confim-password" class="col-md-4 control-label">Confirm Password</label>\n\n                            <div class="col-md-6">\n                                <input type="password"\n                                       class="form-control"\n                                       id="confim-password"\n                                       name="confim-password"\n                                       ng-model="resetFormData.confirmPassword"\n                                       required>\n\n                                <span ng-if="resetFormData.errors.confirmPassword" class="help-block">{{ resetFormData.errors.confirmPassword.join(\' \') }}</span>\n                            </div>\n                        </div>\n\n                        <div class="form-group" ng-if="!success">\n                            <div class="col-md-6 col-md-offset-4">\n                                <button type="submit" class="btn btn-primary" ng-class="{\'btn-loading\': forgotFormData.loading}">\n                                    <i class="fa fa-unlock-alt"></i>\n                                    Change Password\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class="alert alert-success" ng-if="success">\n                            <i class="fa fa-check"></i>\n                            Password changed. You can now <a class="btn" href="/login">Login</a> with the new password.\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n\n    </div>\n</div>\n'),$templateCache.put("views/pages/auth/signup.html",'<div class="container">\n    <div class="row">\n\n            <div class="panel panel-default">\n                <div class="panel-heading"><h1>Create An Account</h1></div>\n                <div class="panel-body">\n\n                    <form class="form-horizontal" role="form" ng-submit="signup()">\n\n                        <div class="form-group" ng-class="{\'has-error\': signupFormData.errors.username}">\n                            <label class="col-md-4 control-label">Username <i class="fa fa-user"></i></label>\n\n                            <div class="col-md-8">\n                                <span ng-if="!signupFormData.errors.username" class="help-block">Up to 30 characters and can only contain letters, numbers, hyphens, or underscores.</span>\n                                <span ng-if="signupFormData.errors.username" class="help-block">{{ signupFormData.errors.username.join(\' \') }}</span>\n                                <input type="text"\n                                       class="form-control"\n                                       name="username"\n                                       ng-model="signupFormData.username"\n                                       required\n                                       placeholder="" />\n                            </div>\n                        </div>\n\n                        <div class="form-group" ng-class="{\'has-error\': signupFormData.errors.email}">\n                            <label class="col-md-4 control-label">E-Mail Address <i class="fa fa-envelope"></i></label>\n\n                            <div class="col-md-8">\n                                <span ng-if="signupFormData.errors.email" class="help-block">{{ signupFormData.errors.email.join(\' \') }}</span>\n                                <input type="email"\n                                       class="form-control"\n                                       name="email"\n                                       ng-model="signupFormData.email"\n                                       required\n                                        placeholder=""\n                                        />\n                            </div>\n                        </div>\n\n                        <div class="form-group" ng-class="{\'has-error\': signupFormData.errors.password}">\n                            <label class="col-md-4 control-label">Password <i class="fa fa-key"></i></label>\n\n                            <div class="col-md-8">\n                                <span ng-if="!signupFormData.errors.password" class="help-block">Minimum 5 characters.</span>\n                                <span ng-if="signupFormData.errors.password" class="help-block">{{ signupFormData.errors.password.join(\' \') }}</span>\n                                <input type="password"\n                                       class="form-control"\n                                       name="password"\n                                       ng-model="signupFormData.password"\n                                       required\n                                        placeholder=""\n                                        />\n                            </div>\n                        </div>\n\n                        <div class="form-group">\n                            <div class="col-md-8 col-md-offset-4">\n                                <button type="submit" class="btn btn-primary btn-labeled" ng-class="{\'btn-loading\': signupFormData.loading}">\n                                    <span class="btn-label"><i class="fa fa-user fa-fw"></i></span>\n                                    Signup\n                                </button>\n                            </div>\n                        </div>\n\n                    </form>\n\n                </div>\n            </div>\n\n    </div>\n</div>\n\n'),$templateCache.put("views/pages/bot.html",'<div class="content">\n<div class="container">\n    <h2>Hi, I\'m Stickerbot</h2>\n\n    <p>I\'ll help you find something to do and stickers to work towards from your budget and available time.</p>\n\n    <div class="alert alert-danger">\n        <p>Stickerbot hasn\'t been made yet. But you can find example stickers in the <a href="/category/china">China</a> category.</p>\n    </div>\n\n    <img src="/assets/img/bot.png"/>\n\n    <p>//TODO</p>\n</div>\n</div>\n'),$templateCache.put("views/pages/browse.html",'<div class="container-md">\n<ul class="category-list row">\n    <li class="col-sm-4 col-xs-6" ng-repeat="category in categories">\n        <a href="/category/{{ category.slug }}" ng-style="{\'background-image\':\'url(\'+category.thumbUrl+\')\'}">\n            <span>{{ category.name }}</span>\n        </a>\n    </li>\n</ul>\n</div>\n'),$templateCache.put("views/pages/category/view.html",'<div class="content">\n<div class="container">\n\n    <div class="titlecrumbs">\n        <h2 ng-if="category.parentCategory"><a href="/category/{{ category.parentCategory.slug }}"><i class="fa fa-folder"></i> {{ category.parentCategory.name }}</a></h2>\n        <h1><i class="fa fa-folder-open"></i> {{ category.name }}</h1>\n    </div>\n\n    <div ng-if="hasSubcategories" class="alert alert-info">\n        <p><i class="fa fa-folder-open"></i> These are the subcategories in <strong>{{category.name}}</strong>. Pick one of these more specific subcategories to find stickers.</p>\n    </div>\n\n    <ul ng-if="hasSubcategories" class="category-list row">\n        <li class="col-sm-3 col-xs-6" ng-repeat="subcategory in category.subcategories">\n            <a href="/category/{{ subcategory.slug }}" ng-style="{\'background-image\':\'url(\'+subcategory.thumbUrl+\')\'}">\n                <span>{{ subcategory.name }}</span>\n            </a>\n        </li>\n    </ul>\n\n    <div ng-if="hasStickers" class="alert alert-info">\n        <p><i class="fa fa-trophy"></i> These are <strong>{{category.name}}</strong> stickers. Pick one of them to see how you can earn it.</p>\n    </div>\n\n    <ul ng-if="hasStickers" class="sticker-list row">\n\n        <li class="col-md-3" ng-repeat="sticker in category.stickers">\n            <a href="/sticker/{{ sticker.slug }}">\n                <span class="sticker" img="{{ sticker.design.imageUrl }}"></span>\n\n                <h3>{{ sticker.name }}</h3>\n            </a>\n        </li>\n\n    </ul>\n\n    <div ng-if="category && !hasSubcategories && !hasStickers">\n        <div class="alert alert-danger">\n            <p><i class="fa fa-frown-o"></i> There\'s no stickers or subcategories of <strong>{{category.name}}</strong> yet. Something will be here soon!</p>\n        </div>\n    </div>\n</div>\n</div>\n'),$templateCache.put("views/pages/help.html",'<div class="content">\n<div class="container">\n    <h1>About Stickable</h1>\n\n    <section id="how-it-works">\n        <div class="container">\n\n            <h2>How Stickable Works</h2>\n\n            <div class="row">\n\n                <div class="col-md-3">\n                    <i class="fa fa-5x fa-trophy"></i>\n\n                    <h3>Choose Stickers<span>To Work Towards</span></h3>\n                </div>\n\n                <div class="col-md-3">\n                    <i class="fa fa-5x fa-check-square-o"></i>\n\n                    <h3>Do The Tasks<span>Make Something, Visit Somewhere, Do Something!</span></h3>\n                </div>\n\n                <div class="col-md-3">\n                    <i class="fa fa-5x fa-camera-retro"></i>\n\n                    <h3>Submit Photos<span>Or Other Evidence Of You Doing The Tasks</span></h3>\n                </div>\n\n                <div class="col-md-3">\n                    <i class="fa fa-5x fa-certificate"></i>\n\n                    <h3>Receive Stickers<span>In The Mail</span></h3>\n                </div>\n\n                <div class="col-md-4">\n\n                </div>\n            </div>\n\n        </div>\n    </section>\n\n\n    <h1>Design Elements</h1>\n\n    <hr/>\n\n    <div class="titlecrumbs">\n        <h2><i class="fa fa-circle"></i> H2 Title</h2>\n        <h1><i class="fa fa-circle"></i> H1 Title</h1>\n    </div>\n\n    <div class="titlecrumbs">\n        <h3><i class="fa fa-circle"></i> H3 Title</h3>\n        <h2><i class="fa fa-circle"></i> H2 Title</h2>\n        <h1><i class="fa fa-circle"></i> H1 Title</h1>\n    </div>\n\n\n    <h1>This is an h1 heading</h1>\n\n    <h2>This is an h2 heading</h2>\n\n    <h3>This is an h3 heading</h3>\n    <h4>This is an h4 heading</h4>\n    <h5>This is an h5 heading</h5>\n\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam metus felis, egestas a sem et, lobortis venenatis\n        libero. Nunc vitae justo eget lectus scelerisque faucibus vel ac felis. Sed iaculis leo vitae pulvinar\n        dignissim. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent at\n        enim egestas, convallis erat at, pellentesque arcu. Nunc rutrum sem vitae orci mollis feugiat. Aenean ante\n        ipsum, aliquam vel imperdiet id, pulvinar vel lectus. Sed sagittis elit non ipsum porta, in luctus tellus\n        efficitur. Nunc turpis metus, volutpat sit amet ante eu, sollicitudin vulputate lacus. Duis sit amet sem a nunc\n        euismod posuere at vel justo. Integer condimentum sollicitudin lacus, sed sollicitudin dui efficitur eget.\n        Suspendisse at vehicula risus. Donec nec dui in arcu consequat tincidunt. Nullam gravida eros elit, vitae\n        venenatis risus mattis vel. Donec ut sollicitudin nibh, vel scelerisque sem.</p>\n\n    <h2>Button Examples</h2>\n\n    <p class="text-center">\n        <a href="#" class="btn">Blue buttons go to another page</a>\n        <a href="#" class="btn btn-primary">Purple buttons do an action right now</a>\n\n        <a href="#" class="btn btn-danger">Do something bad</a>\n        <a href="#" class="btn btn-success">Do something good</a>\n        <a href="#" class="btn btn-warning">Do something medium</a>\n    </p>\n\n    <p class="text-center">\n        <a href="#" class="btn btn-blue btn-lg">btn-lg</a>\n        <a href="#" class="btn btn-blue">btn</a>\n        <a href="#" class="btn btn-blue btn-sm">btn-sm</a>\n    </p>\n</div>\n</div>\n'),
$templateCache.put("views/pages/home.html",'<div class="splash home-splash">\n    <div class="container">\n        <div class="row">\n            <div class="col-sm-4">\n                <img src="/assets/img/stickable.svg" alt="Stickable" id="home-splash-logo"/>\n            </div>\n            <div class="col-sm-8 text-shadow">\n                <h2>Discover new hobbies. Get help from our community. Earn real-life stickers to show off your\n                    progress.</h2>\n\n                <div class="row btn-row">\n                    <div class="col-xs-7">\n                        <a class="btn btn-primary" href="/bot"><i class="fa fa-play-circle"></i> Find Something To\n                            Do</a>\n                    </div>\n                    <div class="col-xs-5">\n                        <a class="btn" href="/help"><i class="fa fa-info"></i> Learn More</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="content">\n    <div class="container-lg">\n        <ng-include src="\'views/partials/post-list.html\'" ng-controller="PostsController"></ng-include>\n    </div>\n</div>\n'),$templateCache.put("views/pages/notifications/index.html",'<div class="content">\n    <div class="container">\n\n        <notifications></notifications>\n\n    </div>\n</div>\n'),$templateCache.put("views/pages/settings/index.html",'<div class="content">\n<div class="container">\n    <h1>Settings</h1>\n\n    <form class="form-horizontal" role="form" ng-submit="submit()">\n\n        <div class="form-group" ng-class="{\'has-error\': formData.errors.picture}">\n            <label class="col-md-3 control-label">Picture <i class="fa fa-picture-o"></i></label>\n\n            <div class="col-md-9">\n\n                <a href="{{user.image.url}}" target="_blank"><img ng-src="{{user.image.thumbUrl}}" class="dz-image user-image user-current-image" ng-hide="hasNewImage" /></a>\n\n                <div class="dropzone needsclick" id="settings-image">\n                    <div class="fallback">\n                        <input name="file" type="file" multiple />\n                    </div>\n\n                    <a class="btn btn-labeled dropzone-btn needsclick">\n                        <span class="btn-label"><i class="fa fa-camera"></i></span>\n                        Select A New Picture\n                    </a>\n\n                    <div class="dz-message"></div>\n                </div>\n\n            </div>\n        </div>\n\n        <div class="form-group" ng-class="{\'has-error\': formData.errors.about}">\n            <label class="col-md-3 control-label">About Me <i class="fa fa-file-text"></i></label>\n\n            <div class="col-md-9">\n                <textarea class="form-control" name="about" ng-model="formData.about"></textarea>\n                <span ng-if="formData.errors.about" class="help-block">{{ formData.errors.about.join(\' \') }}</span>\n            </div>\n        </div>\n\n        <div class="form-group">\n            <div class="col-md-9 col-md-offset-3">\n                <button type="submit" class="btn btn-primary btn-labeled">\n                    <span class="btn-label"><i class="fa fa-save"></i></span>\n                    Save Changes\n                </button>\n            </div>\n        </div>\n\n    </form>\n</div>\n</div>\n'),$templateCache.put("views/pages/sticker/view.html",'<div class="content">\n    <div class="splash sticker-splash"\n         ng-style="{ \'background-image\': sticker.bgUrl ? \'url(\' + sticker.bgUrl + \')\' : \'\'}">\n        <div class="container">\n            <div class="row">\n\n                <div class="col-lg-6 text-shadow">\n\n                    <span class="sticker" img="{{ sticker.design.imageUrl }}"></span>\n\n                    <div class="titlecrumbs sticker-title">\n                        <h3><a href="/category/{{ sticker.category.slug }}"><i class="fa fa-folder"></i> {{\n                            sticker.category.name }} Category</a></h3>\n\n                        <h1>{{ sticker.name }}</h1>\n                    </div>\n\n                    <div class="alert alert-success clear text-center" ng-if="sticker.hasCompleted">\n                        <p><i class="fa fa-trophy"></i> Congratulations, you\'ve earnt this sticker!</p>\n                        <p><a class="btn btn-success">See it in your Sticker Book</a></p>\n                    </div>\n\n                    <p class="sticker-desc" ng-bind-html="sticker.description | markdown"></p>\n\n                    <ul class="sticker-info">\n                        <li ng-if="sticker.creator">\n                            <i class="fa fa-user"></i> Sticker designed by\n                            <a href="/user/{{ sticker.creator.url }}">{{ sticker.creator.username }}</a>\n                        </li>\n                    </ul>\n                </div>\n\n                <div class="col-lg-6">\n\n                    <ul class="task-list">\n\n                        <li class="header">\n                            <h3>\n                                Complete {{ (sticker.requiredTasks ? sticker.requiredTasks : \'all\') }}\n                                of these tasks to earn the sticker:</h3>\n                        </li>\n\n                        <li class="ng-hide" ng-show="sticker.isOnToDoList">\n                           <span class="sticker-progress" progress="progress"></span>\n                        </li>\n\n\n                        <li ng-repeat="task in sticker.tasks" class="task" ng-class="{\n                            \'completed\': task.hasCompleted,\n                            }">\n                            <a href="/task/{{ task.slug }}">\n\n                                <span ng-if="progress && progress.pendingIds.indexOf(task.id) !== -1" class="label label-warning">Submitted</span>\n                                <span ng-if="progress && progress.rejectedIds.indexOf(task.id) !== -1" class="label label-danger">Rejected</span>\n                                <span ng-if="task.hasCompleted" class="label label-success">Completed</span>\n\n                                <i class="fa" ng-class="{\'fa-circle\': !task.hasCompleted, \'fa-check-circle\': task.hasCompleted}"></i>{{ task.name }}\n                            </a>\n                        </li>\n\n                        <li class="header" ng-hide="sticker.isOnToDoList">\n                            <h3>Want this sticker?</h3>\n                        </li>\n                        <li ng-hide="sticker.isOnToDoList">\n                            <span>\n                                <a class="btn btn-primary btn-block btn-labeled" ng-click="addToDo()">\n                                    <span class="btn-label"><i class="fa fa-plus-circle"></i></span>\n                                    Add To To-Do List\n                                </a>\n                            </span>\n                        </li>\n\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                    </ul>\n\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n    <div class="container">\n        <div class="row">\n\n            <div class="col-lg-6">\n\n                <h2><i class="fa fa-trophy"></i> Who\'s Got It</h2>\n                <div class="user-list" data="earners" like="likeEarner"></div>\n\n                <h2><i class="fa fa-users"></i> Working On It</h2>\n                <div class="user-list" data="doers" like="likeDoer"></div>\n\n            </div>\n\n            <div class="col-lg-6">\n\n                <h2>More {{ sticker.category.name }} Stickers</h2>\n\n                <ul class="sticker-list small-sticker-list row">\n\n                    <li class="col-xs-4 col-sm-3 col-lg-4"\n                        ng-repeat="catSticker in sticker.category.stickers"\n                        ng-if="catSticker.id != sticker.id">\n                        <a href="/sticker/{{ catSticker.slug }}">\n                            <span class="sticker" img="{{ catSticker.design.imageUrl }}"></span>\n                            <br/>{{ catSticker.name }}\n                        </a>\n                    </li>\n                </ul>\n\n            </div>\n\n        </div>\n    </div>\n</div>\n'),$templateCache.put("views/pages/task/submit.html","@extends('layouts.main')\n\n@section('breadcrumbs')\n{!! Breadcrumbs::render('task', $task) !!}\n@stop\n\n@section('content')\n<div class=\"container\">\n    <h1>{{ $task->name }}</h1>\n\n    <h2>Add Your Submission</h2>\n\n    <p><strong>To complete this task you must:</strong><br/>\n        {{ $task->submission }}\n    </p>\n\n    <form class=\"form-horizontal well\" method=\"post\" action=\"submit\">\n        {!! csrf_field() !!}\n\n        <div class=\"form-group <?=($errors->get('picture') ? 'has-error' : '')?>\">\n"+'            <label class="col-md-4 control-label">Picture <i class="fa fa-picture"></i></label>\n\n            <div class="col-md-8">\n                <input type="hidden"\n                       class="form-control"\n                       name="picture"\n                       value="{{ old(\'picture\') ? old(\'picture\') : \'\' }}"\n                       required/>\n                <?php\n                foreach ($errors->get(\'picture\') as $error) {\n                echo \'<span class="help-block">\' . $error . \'</span>\';\n                }\n                ?>\n                <a href="#" class="btn" id="task-submit-upload-picture-btn"><i class="fa fa-camera"></i> Upload a\n                    picture</a>\n\n                <img src="{{ old(\'picture\') ? old(\'picture\') : \'\' }}" id="task-submit-picture"/>\n\n            </div>\n        </div>\n\n        <div class="form-group">\n            <div class="col-md-8 col-md-offset-4">\n                <button type="submit" class="btn btn-success">Submit</button>\n            </div>\n        </div>\n\n    </form>\n</div>\n@endsection\n'),$templateCache.put("views/pages/task/view.html",'<div class="content">\n    <div class="container task-page" ng-if="task" ng-class="{\'post-page\': !!post}">\n\n\n        <div class="titlecrumbs task-title" ng-if="!post">\n            <h2 class="sticker-name">\n                <a href="/sticker/{{ task.sticker.slug }}">\n                    <span class="sticker sticker-sm" img="{{ task.sticker.design.imageUrl }}"></span>\n                    {{task.sticker.name }} Sticker\n                </a>\n            </h2>\n\n            <h1 class="task-name">\n                <i class="fa fa-check-square"></i> {{ task.name }}\n            </h1>\n        </div>\n\n        <div id="task-btns" ng-if="currentUser">\n            <div class="row">\n                <div class="col-xs-6">\n                    <a ng-click="showPostForm()" class="new-post-btn btn btn-labeled btn-block">\n                        <span class="btn-label"><i class="fa fa-plus-circle"></i></span>\n                        Add A <span class="hidden-xs">Tip / Question</span><span class="visible-xs-inline">Post</span>\n                    </a>\n                </div>\n                <div class="col-xs-6">\n                    <a class="btn btn-danger btn-remove-todo btn-labeled btn-block"\n                       href="#"\n                       ng-click="removeToDo()"\n                       ng-if="isOnToDoList">\n                        <span class="btn-label"><i class="fa fa-minus-circle"></i></span>\n                        Remove <span class="hidden-xs">from </span>To-Do <span class="hidden-xs">List</span>\n                    </a>\n\n                    <a class="btn btn-success btn-add-todo btn-labeled btn-block"\n                       href="#"\n                       ng-click="addToDo()"\n                       ng-if="!isOnToDoList">\n                        <span class="btn-label"><i class="fa fa-plus-circle"></i></span>\n                        Add <span class="hidden-xs">to </span>To-Do <span class="hidden-xs">List</span>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n        <div class="row clear">\n\n            <div class="content-col" ng-class="{\'col-md-6\': !post, \'col-md-8\': !!post}">\n\n                <div class="titlecrumbs post-title" ng-if="post">\n                    <h3 class="sticker-name">\n                        <a href="/sticker/{{ task.sticker.slug }}">\n                            <span class="sticker sticker-sm" img="{{ task.sticker.design.imageUrl }}"></span>\n                            {{task.sticker.name }} Sticker\n                        </a>\n                    </h3>\n\n                    <h2 class="task-name">\n                        <a href="/task/{{task.slug}}" ng-click="goToTask($event, task)">\n                            <i class="fa fa-check-square"></i> {{ task.name }}\n                        </a>\n                    </h2>\n\n                    <h1 class="post-name">\n                        <i class="fa fa-file-text-o"></i> {{ post.title }}\n                    </h1>\n                </div>\n\n                <div ng-if="post" class="clear">\n\n                    <div class="post single-post"\n                         ng-controller="PostsController"\n                         ng-class="{\'liked\': !!post.liked, \'like-clicked\': !!post.likeClicked}">\n\n                        <a class="like-btn" ng-click="likePost($event, post)" href="#">\n                            <span><i class="fa fa-heart-o"></i> {{ post.likeCount }}</span>\n                        </a>\n\n                        <ul class="post-info">\n                            <li>\n                                <a href="/user/{{post.user.username}}">\n                                    <img ng-if="post.user.image" ng-src="{{post.user.image.thumbUrl}}" class="user-image" />\n                                    <i ng-if="!post.user.image" class="fa fa-user"></i> {{post.user.username}}</a>\n                            </li>\n                            <li><a href="/task/{{post.task.slug}}/{{post.slug}}"><i class="fa fa-clock-o"></i> <span\n                                    am-time-ago="post.createdAt"></span></a></li>\n                        </ul>\n\n                        <p ng-bind-html="post.text | markdown"></p>\n\n                    </div>\n\n                    <div\n                        class="single-post-images"\n                        ng-if="post.images"\n                        masonry=\'{\n                            "transitionDuration": 0,\n                            "itemSelector": "div"\n                            }\'>\n                        <div ng-repeat="image in post.images">\n                            <a href="{{image.url}}" target="_blank">\n                                <img ng-src="{{image.url}}" masonry-image />\n                            </a>\n                        </div>\n                    </div>\n\n\n                    <a class="btn btn-block btn-labeled add-comment-btn"\n                       href="#"\n                       ng-click="showCommentForm($event)"\n                       ng-hide="commentFormVisible">\n                        <span class="btn-label"><i class="fa fa-comment"></i></span>\n                        Add A Comment\n                    </a>\n\n                    <h2 class="hidden-sm hidden-xs">Comments</h2>\n\n                    <div class="comments" id="comment-form-container">\n                        <div ng-include="\'views/partials/comment-form.html\'" id="comment-form-include"></div>\n                    </div>\n\n                    <div class="comments" ng-controller="CommentsController">\n                        <div class="comment-include"\n                             ng-repeat="comment in comments.comments"\n                             ng-include="\'views/partials/comment.html\'"></div>\n                    </div>\n\n                </div>\n\n                <div ng-if="!post">\n\n                    <div class="alert alert-info text-center">\n                        <small><i class="fa fa-check-square"></i> To complete this task and earn credit towards the\n                            <strong>{{\n                                task.sticker.name }}</strong> sticker:\n                        </small>\n\n                        <p>{{ task.submission }}</p>\n\n                        <p>\n                            <a class="btn btn-block btn-labeled" ng-click="showSubmissionForm()">\n                                <span class="btn-label"><i class="fa fa-check-circle"></i></span>\n                                I\'ve Done It!\n                            </a>\n                        </p>\n                    </div>\n\n                    <!--<ul id="task-details" class="clearfix">\n                        <li><strong>Cost</strong>\n                            <i class="fa fa-usd"></i><i class="fa fa-usd"></i><i class="fa fa-usd"></i>\n                        </li>\n                        <li><strong>Time</strong> 5 hours</li>\n                        <li><strong>Type</strong> <i class="fa fa-user"></i> Alone <i class="fa fa-users"></i> Group\n                            <i class="fa fa-globe"></i> Travel\n                        </li>\n                    </ul>-->\n\n                    <p>{{ task.description }}</p>\n\n                    <h2><i class="fa fa-users"></i> Working On It</h2>\n                    <div class="user-list" data="doers" like="likeDoer"></div>\n\n                </div>\n\n            </div>\n\n            <div class="posts-col" ng-class="{\'col-md-6\': !post, \'col-md-4\': !!post}">\n                <div class="posts-container">\n\n                    <!--<ul class="tabs tabs-2 post-order-tabs" ng-if="!post">\n                        <li ng-class="{\'tab-current\': postsOrder === \'newest\' }">\n                            <a href="#" ng-click="setPostsOrder(\'newest\')">\n                                <i class="fa fa-fw fa-bars"></i> Recent <strong class="visible-lg-inline">Posts</strong>\n                            </a>\n                        </li>\n                        <li ng-class="{\'tab-current\': postsOrder === \'featured\' }">\n                            <a href="#" ng-click="setPostsOrder(\'featured\')">\n                                <i class="fa fa-fw fa-star"></i> Featured\n                                <strong class="visible-lg-inline">Posts</strong>\n                            </a>\n                        </li>\n                    </ul>-->\n\n                    <div ng-include="\'views/partials/post-list.html\'" ng-controller="PostsController"></div>\n                </div>\n            </div>\n\n\n        </div>\n\n    </div>\n\n</div>\n'),$templateCache.put("views/pages/user/stickers.html",'<div class="container">\n    <h1>{{ user.username }}\'s Stickers</h1>\n\n    <ul>\n        <li ng-repeat="sticker in stickers"><a href="/sticker/{{ sticker.slug }}">{{ sticker.name }}</a></li>\n    </ul>\n\n</div>\n'),$templateCache.put("views/pages/user/submissions.html",'<div class="container">\n    <h1>{{ user.username }}\'s Submissions</h1>\n\n    <ul>\n        <li ng-repeat="submission in submissions">\n            {{ submission | json }}\n        </li>\n    </ul>\n\n</div>\n'),$templateCache.put("views/pages/user/todo.html",'<div class="content">\n<div class="container">\n\n    <h1>{{ user.username }}\'s To Do List</h1>\n\n\n\n    <ul class="task-list">\n        <li ng-repeat="task in tasks">\n            <a href="/task/{{ task.slug }}">\n                <span class="sticker-name">{{ task.sticker.name }}</span>\n                <i class="fa fa-circle"></i>\n                {{ task.name }}\n            </a>\n        </li>\n    </ul>\n\n</div>\n</div>\n'),$templateCache.put("views/pages/user/view.html",'<div class="content">\n<div class="container">\n    <h1><img class="user-image" ng-src="{{user.image.thumbUrl}}" ng-if="user.image" />{{ user.username }}</h1>\n\n    <h2 ng-if="user.profile.about">About {{ user.username }}</h2>\n    <p ng-if="user.profile.about">{{ user.profile.about }}</png-if>\n\n    <h2>Stickers</h2>\n    <span ng-repeat="sticker in stickers.stickers" class="sticker" img="{{ sticker.design.imageUrl }}"></span>\n\n    <h2>To Do</h2>\n    <ul>\n        <li ng-repeat="task in todo"><a href="/task/{{ task.slug }}">{{ task.name }}</a></li>\n    </ul>\n\n    <h2>Posts</h2>\n    <ng-include src="\'views/partials/post-list.html\'" ng-controller="PostsController"></ng-include>\n</div>\n</div>\n'),$templateCache.put("views/partials/comment-form.html",'<form ng-submit="addComment()" class="comment comment-form" ng-if="commentFormVisible">\n    <div class="inner">\n        <textarea id="comment-text" class="form-control" ng-model="commentFormData.comment"></textarea>\n    </div>\n\n    <span class="author">\n        <i class="fa fa-user"></i> {{ currentUser.username }}\n    </span>\n\n    <span class="actions">\n        <a class="btn btn-danger btn-labeled" ng-click="hideCommentForm()">\n            <span class="btn-label"><i class="fa fa-times"></i></span>\n            Cancel\n        </a>\n\n        <button type="submit" class="btn btn-primary btn-labeled">\n            <span class="btn-label"><i class="fa fa-plus-circle"></i></span>\n            Add Comment\n        </button>\n    </span>\n</form>\n'),$templateCache.put("views/partials/comment-list.html",'<div class="comments">\n    <ng-include ng-repeat="comment in comment.replies" src="\'views/partials/comment.html\'"></ng-include>\n\n    <div ng-repeat="comment in comments.comments">\n        <ng-include src="\'views/partials/comment.html\'"></ng-include>\n    </div>\n\n</div>\n'),$templateCache.put("views/partials/comment.html",'<div class="comment" ng-class="{\'liked\': !!comment.liked, \'like-clicked\': !!comment.likeClicked}" data-commentid="{{comment.id}}">\n    <div class="inner">\n        <a class="like-btn" ng-click="likeComment($event, comment)" href="#">\n            <span><i class="fa fa-heart-o"></i> {{ comment.likeCount }}</span>\n        </a>\n\n        <div ng-bind-html="comment.comment | markdown"></div>\n    </div>\n\n    <span class="author">\n        <a href="/user/{{ comment.user.username }}">\n            <img ng-if="comment.user.image" ng-src="{{comment.user.image.thumbUrl}}" class="user-image" />\n            <i ng-if="!comment.user.image" class="fa fa-user"></i> {{ comment.user.username }}\n        </a>\n\n        <!-- TODO: Permalink -->\n        <a href="#"><i class="fa fa-clock-o"></i> <span am-time-ago="comment.createdAt"></span></a>\n    </span>\n\n    <span class="actions">\n\n        <!--{{ comment.replies.length }} loaded / {{ comment.replyCount }} replies-->\n\n        <span ng-switch on="(comment.replyCount > 0 && !comment.replies) || comment.replies.length < comment.replyCount">\n\n            <a ng-switch-when="true" href="#" ng-click="loadCommentReplies($event, comment)">\n                <i class="fa fa-comments"></i> Load {{ comment.replyCount - (comment.replies ? comment.replies.length : 0) }} more replies\n            </a>\n\n            <a ng-switch-default href="#" ng-click="showCommentForm($event, comment)"><i class="fa fa-commenting"></i> Add Reply</a>\n\n        </span>\n\n    </span>\n\n    <div class="comments replies comment-replies-{{comment.depth}}">\n        <div class="comment-include" ng-repeat="comment in comment.replies" ng-include="\'views/partials/comment.html\'"></div>\n    </div>\n</div>\n'),$templateCache.put("views/partials/footer.html",'<footer>\n    <div class="container-fluid">\n        <div class="pull-left">\n            Footer goes here!\n        </div>\n        <div class="pull-right">\n            <a href="#">Link</a> &nbsp; | &nbsp;\n            <a href="#">Link</a>\n        </div>\n    </div>\n</footer>\n'),$templateCache.put("views/partials/header.html",'<header class="navbar" id="top-bar">\n    <div class="container-fluid">\n\n        <div class="navbar-header" ng-class="{\'has-title\':pageTitle}">\n\n            <a href="#" ng-click="back()" class="navbar-back"><i class="fa fa-chevron-left"></i></a>\n\n            <button type="button" class="navbar-toggle">\n                <span class="navbar-toggle-icon">\n                    <span></span>\n                </span>\n            </button>\n\n            <a ui-sref="home" class="navbar-brand"><img src="/assets/img/stickable-white.svg" alt="Stickable" /></a>\n\n            <h1>{{ pageTitle }}</h1>\n        </div>\n\n        <ul ng-if="currentUser" class="nav navbar-nav navbar-right notification-nav" ng-class="{\'has-notification\': notifications.length > 0}">\n            <li>\n                <a ng-click="toggleNotifications($event)" href="#">\n                    <span ng-show="notifications.length > 0" class="notification">{{ notifications.length }}</span>\n                    <i class="fa fa-envelope fa-fw"></i>\n                    <b class="caret visible-lg-inline-block"></b>\n                </a>\n            </li>\n        </ul>\n\n        <st-notifications\n                class="header-notifications"\n                ng-class="{\'notifications-preview\': !notificationsOpen && notificationsPreview}"\n                ng-if="currentUser && (notificationsOpen || notificationsPreview)"\n                notifications="notifications"\n                toggle="toggleNotifications"\n                ></st-notifications>\n\n        <nav role="navigation" id="top-bar-nav">\n\n            <ul class="nav navbar-nav">\n                <li class="hidden-lg hidden-md"><a href="/"><i class="fa fa-home fa-fw"></i> Front Page</a></li>\n                <li><a href="/bot"><i class="fa fa-android fa-fw"></i> Stickerbot</a></li>\n                <li><a href="/browse"><i class="fa fa-folder fa-fw"></i> Browse</a></li>\n                <li><a ui-sref="help"><i class="fa fa-question fa-fw"></i> Help</a></li>\n            </ul>\n\n            <ul class="nav navbar-nav navbar-right nav-logged-in" ng-if="currentUser">\n\n                <li><a href="/user/{{ currentUser.username }}/todo"><i class="fa fa-check-square-o fa-fw"></i> To Do</a></li>\n                <li><a href="/user/{{ currentUser.username }}/submissions"><i class="fa fa-camera-retro fa-fw"></i> Submissions</a></li>\n                <li><a href="/user/{{ currentUser.username }}/stickers"><i class="fa fa-trophy fa-fw"></i> Sticker Book</a>\n                </li>\n\n                <li class="dropdown">\n                    <a class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-user fa-fw"></i> {{\n                        currentUser.username }} <b class="caret"></b></a>\n                    <ul class="dropdown-menu">\n                        <li><a href="/user/{{ currentUser.username }}"><i class="fa fa-user fa-fw"></i> Profile</a></li>\n                        <li class="divider"></li>\n                        <li><a href="/settings"><i class="fa fa-cog fa-fw"></i> Settings</a></li>\n                        <li class="divider"></li>\n                        <li><a href="#" ng-click="logout()"><i class="fa fa-unlock-alt fa-fw"></i> Logout</a></li>\n                    </ul>\n                </li>\n            </ul>\n\n            <form class="navbar-form navbar-right visible-lg" ng-submit="login()" ng-if="currentUser === false">\n\n                <div class="form-group">\n                    <input id="header-username"\n                           type="text"\n                           class="form-control input-sm"\n                           name="username"\n                           placeholder="Username"\n                           ng-model="loginFormData.username"/>\n                </div>\n                <div class="form-group">\n                    <input id="header-password"\n                           type="password"\n                           class="form-control input-sm"\n                           name="password"\n                           placeholder="Password"\n                           ng-model="loginFormData.password"/>\n                </div>\n                <button id="header-login-btn" type="submit" class="btn btn-labeled btn-primary" ng-class="{\'btn-loading\': loginFormData.loading}">\n                    <i class="fa fa-key fa-fw"></i>\n                    Login\n                </button>\n                <a class="btn" href="/signup"><i class="fa fa-user fa-fw"></i> Signup</a>\n            </form>\n            <ul class="nav navbar-nav navbar-right nav-logged-out" ng-if="currentUser === false">\n                <li class="hidden-lg"><a href="/login"><i class="fa fa-key fa-fw"></i> Login</a></li>\n                <li class="hidden-lg"><a href="/signup"><i class="fa fa-user fa-fw"></i> Signup</a></li>\n            </ul>\n\n\n        </nav>\n\n\n\n\n    </div>\n</header>\n'),$templateCache.put("views/partials/post-list.html",'<ul class="posts media-list to-edge">\n\n    <li class="post media"\n        ng-repeat="thisPost in posts.posts"\n        ng-class="{\'with-task\': !!showPostTasks, \'liked\': !!thisPost.liked, \'like-clicked\': !!thisPost.likeClicked}"\n            ng-if="!post || post.id != thisPost.id">\n\n        <span class="media-left media-middle" ng-if="thisPost.image">\n            <a href="/task/{{ (thisPost.task ? thisPost.task.slug : (task ? task.slug : \'\'))}}/{{ thisPost.slug }}"\n               ng-click="goToPost($event, thisPost)">\n                <img class="media-object" ng-src="{{ thisPost.image.thumbUrl }}"/>\n            </a>\n        </span>\n        <span class="media-body media-middle">\n\n            <a class="like-btn" ng-click="likePost($event, thisPost)" href="#">\n                <span><i class="fa fa-heart-o"></i> {{ thisPost.likeCount }}</span>\n            </a>\n\n            <span class="task" ng-if="showPostTasks"><i class="fa fa-check-square-o"></i> {{ thisPost.task.name }}</span>\n\n            <a class="title"\n               href="/task/{{ (thisPost.task ? thisPost.task.slug : (task ? task.slug : \'\'))}}/{{ thisPost.slug }}"\n               ng-click="goToPost($event, thisPost)">{{ thisPost.title }}</a>\n\n            <span class="details">\n\n                <i class="fa"\n'+"                   ng-class=\"{'fa-check-circle': thisPost.type === 'SUBMISSION', 'fa-question-circle' : thisPost.type === 'QUESTION', 'fa-info-circle' : thisPost.type === 'TIP'}\"></i>\n                {{ thisPost.type.capitalizeFirstLetter() }}\n\n                <i class=\"fa fa-user\"></i> {{ thisPost.user.username }}\n                <i class=\"fa fa-comment\"></i> {{ thisPost.commentCount }}\n            </span>\n        </span>\n\n    </li>\n\n</ul>\n"),$templateCache.put("views/partials/submission-forms/image.html",'\n<div class="dropzone needsclick" id="post-file">\n    <div class="fallback">\n        <input name="file" type="file" multiple />\n    </div>\n\n    <a class="btn btn-lg btn-primary btn-labeled dropzone-btn needsclick">\n        <i class="fa fa-camera fa-2x"></i><br/>\n        Select Photos\n    </a>\n\n    <div class="dz-message">\n        <i class="fa fa-info-circle"></i> Select photos for your submission or drag them to this box.\n    </div>\n</div>\n\n<p class="submission-help submission-photo-help"><i class="fa fa-info-circle"></i> You can either show yourself in the photo or your username should be in the photo (on a piece of paper for example, not added with Photoshop). Your photo will only be made public if you choose to do so. Our moderators will check the photo to ensure it meets the requirements of this task.</p>\n'),$templateCache.put("views/partials/submission-forms/text.html",'<textarea placeholder="Write stuff here." ng-model="submissionFormData.text"></textarea>\n')}]),Messenger.options={extraClasses:"messenger-fixed messenger-on-top messenger-on-right",theme:"flat"},app.controller("BotController",function($scope,$rootScope){
$rootScope.pageTitle=""}),app.controller("BrowseController",function($scope,$rootScope,CategoryResource){$rootScope.pageTitle="",$scope.categories=CategoryResource.query()}),app.controller("CategoryController",function($scope,$rootScope,$state,$stateParams,$element,CategoryResource){$rootScope.loading=!0,$scope.category=null,$scope.hasSubcategories=!1,$scope.hasStickers=!1,$rootScope.pageTitle="",CategoryResource.get({slug:$stateParams.slug},function(category){$scope.category=category,$rootScope.pageTitle=category.name,$scope.hasSubcategories=category.subcategories.length>0,$scope.hasStickers=category.stickers.length>0,$element.css("background-image","url("+category.bgUrl+")")})}),app.controller("HomeController",function($scope,$rootScope,CategoryResource,PostResource){$rootScope.pageTitle="",$scope.showPostTasks=!0,$scope.posts=PostResource.query()}),app.controller("NotificationsController",function($scope,$rootScope,UserNotificationsResource){$scope.init=function(){return $rootScope.currentUser?void UserNotificationsResource.query({username:$rootScope.currentUser.username},function(results){$rootScope.notifications=results}):!1},$rootScope.$on("login",function(){$scope.init()}),$scope.init()}),app.controller("SettingsController",function($scope,$rootScope,$state,$stateParams,AuthService,UserResource,$timeout){$scope.hasNewImage=!1;var dropzone;$timeout(function(){dropzone=new Dropzone("#settings-image",{acceptedFiles:"image/*",maxFiles:1,autoProcessQueue:!1,url:"/api/images?sessionToken="+AuthService.getSessionToken(),clickable:".dropzone-btn",thumbnailWidth:100}),dropzone.on("addedfile",function(){null!=dropzone.files[1]&&dropzone.removeFile(dropzone.files[0]),$scope.hasNewImage=dropzone.files.length>0,$scope.$apply()}),dropzone.on("success",function(file){console.log(file);var response=JSON.parse(file.xhr.response);console.log("response"),response&&response.hasOwnProperty("image")&&($scope.formData.imageId=response.image.id),console.log("$scope.formData",$scope.formData),$scope.finishSubmit()}),dropzone.on("error",function(file,errorMessage){alertError("Unable to save avatar. "+errorMessage.message)}),dropzone.on("removedfile",function(){$scope.hasNewImage=dropzone.files.length>0,$scope.formData.imageId=!1;try{$scope.$$phase||$scope.$apply()}catch(e){}})},10),$scope.formData={about:"",imageId:""},$scope.user=null,$scope.init=function(){return $rootScope.currentUser?void UserResource.get({username:$rootScope.currentUser.username},function(user){console.log(user),$scope.user=user,$scope.formData.about=user.profile.about}):!1},$rootScope.$on("login",function(){$scope.init()}),$scope.init(),$scope.submit=function(){$scope.hasNewImage?dropzone.processQueue():$scope.finishSubmit()},$scope.finishSubmit=function(){UserResource.update({username:$rootScope.currentUser.username},$scope.formData,function(response){$scope.user=response.user,$scope.hasNewImage=!1,dropzone.removeAllFiles(),alertSuccess("Changes saved")},function(response){$scope.formData.loading=!1,response.data.messages&&(response.data.messages.hasOwnProperty("picture")||response.data.messages.hasOwnProperty("about"))?$scope.formData.errors=response.data.messages:alertError(response.data.message)})}}),app.controller("StickerController",function($scope,$rootScope,$state,$stateParams,StickerResource,ToDoResource,ProgressService){$rootScope.loading=!0,$scope.sticker=null,$scope.progress=null,StickerResource.get({slug:$stateParams.slug},function(sticker){$rootScope.loading=!1,$scope.sticker=sticker,$scope.progress=ProgressService.getProgress(sticker),$scope.loadDoers(),$scope.earners=StickerResource.getEarners({slug:sticker.slug})}),$scope.loadDoers=function(){StickerResource.getDoers({slug:$scope.sticker.slug},function(result){$scope.doers=result})},$scope.addToDo=function(){console.log("addToDo"),ToDoResource.save({username:$rootScope.currentUser.username},{stickerId:$scope.sticker.id},function(result){alertSuccess("Added to To Do List"),$scope.sticker.isOnToDoList=!0,$scope.loadDoers()},function(result){alertError(result.data.message)})},$scope.removeToDo=function(){ToDoResource["delete"]({username:$rootScope.currentUser.username},{stickerId:$scope.sticker.id},function(result){alertSuccess("Removed from To Do List"),$scope.sticker.isOnToDoList=!1,$scope.loadDoers()},function(result){alertError(result.data.message)})},$scope.likeEarner=function($event,earner){preventDefault($event),earner.likeClicked=!0,earner.pivot.liked=earner.pivot.liked?!1:!0,earner.pivot.liked?(earner.likeCount=earner.pivot.likeCount=parseInt(earner.pivot.likeCount)+1,StickerResource.likeEarner({slug:$scope.sticker.slug,earntId:earner.pivot.id})):(earner.likeCount=earner.pivot.likeCount=parseInt(earner.pivot.likeCount)-1,StickerResource.unlikeEarner({slug:$scope.sticker.slug,earntId:earner.pivot.id})),earner.likeCount=earner.pivot.likeCount},$scope.likeDoer=function($event,doer){preventDefault($event),doer.likeClicked=!0,doer.pivot.liked=doer.pivot.liked?!1:!0,doer.pivot.liked?(doer.pivot.likeCount=parseInt(doer.pivot.likeCount)+1,ToDoResource.likeDoer({toDoId:doer.pivot.id})):(doer.pivot.likeCount=parseInt(doer.pivot.likeCount)-1,ToDoResource.unlikeDoer({toDoId:doer.pivot.id})),doer.likeCount=doer.pivot.likeCount}}),app.controller("TaskController",function($scope,$rootScope,$element,$state,$stateParams,$timeout,ModalService,TaskResource,SubmissionResource,ToDoResource,PostResource,CommentResource){function onTaskLoad(task){$scope.task=task,$scope.isOnToDoList=$scope.task.isOnToDoList,$element.css("background-image","url("+task.bgUrl+")")}$rootScope.pageTitle="",$rootScope.loading=!0,$scope.task=null,$scope.doers=null,$scope.isOnToDoList=!1,$scope.showPostTasks=!1,$scope.postsOrder="featured",$scope.posts=PostResource.getTaskPosts({taskSlug:$stateParams.slug},{type:$scope.postType}),$scope.post=null,$scope.comments=null,$stateParams.postSlug?PostResource.get({postSlug:$stateParams.postSlug},function(response){$rootScope.loading=!1,$scope.post=response.post,onTaskLoad(response.post.task),response.post&&($scope.comments=CommentResource.getPostsComments({postId:response.post.id}))}):TaskResource.get({slug:$stateParams.slug},function(task){$rootScope.loading=!1,onTaskLoad(task),$scope.loadDoers()}),$scope.loadDoers=function(){TaskResource.getDoers({slug:$scope.task.slug},function(result){$scope.doers=result})},$scope.likeDoer=function($event,doer){preventDefault($event),doer.likeClicked=!0,doer.pivot.liked=doer.pivot.liked?!1:!0,doer.pivot.liked?(doer.pivot.likeCount=parseInt(doer.pivot.likeCount)+1,ToDoResource.likeDoer({toDoId:doer.pivot.id})):(doer.pivot.likeCount=parseInt(doer.pivot.likeCount)-1,ToDoResource.unlikeDoer({toDoId:doer.pivot.id})),doer.likeCount=doer.pivot.likeCount},$scope.goToTask=function($event,task){},$scope.setPostsOrder=function(order){$scope.postsOrder=order},$scope.showSubmissionForm=function(){ModalService.showModal({templateUrl:"views/modals/submission-form.html",controller:"SubmissionFormController",inputs:{task:$scope.task}}).then(function(modal){modal.close.then(function(post){post&&$scope.posts.posts.unshift(post)})})},$scope.showPostForm=function(type){ModalService.showModal({templateUrl:"views/modals/post-form.html",controller:"PostFormController",inputs:{task:$scope.task,postType:type}}).then(function(modal){modal.close.then(function(post){post&&$scope.posts.posts.unshift(post)})})},$scope.addToDo=function(){console.log("addToDo"),ToDoResource.save({username:$rootScope.currentUser.username},{taskId:$scope.task.id},function(result){alertSuccess("Added to To Do List"),$scope.isOnToDoList=!0,$scope.loadDoers()},function(result){alertError(result.data.message)})},$scope.removeToDo=function(){ToDoResource["delete"]({username:$rootScope.currentUser.username},{taskId:$scope.task.id},function(result){alertSuccess("Removed from To Do List"),$scope.isOnToDoList=!1,$scope.loadDoers()},function(result){alertError(result.data.message)})},$scope.submissionFormData={loading:!1,text:"",image:""},$scope.addSubmission=function(){$scope.submissionFormData.loading=!0,SubmissionResource.save({taskId:$scope.task.id,text:$scope.submissionFormData.text,image:$scope.submissionFormData.image},function(response){},function(response){alertError(response.data.message)})},$scope.commentFormVisible=!1,$scope.showCommentForm=function($event,replyToComment){preventDefault($event),$scope.commentFormVisible=!0,replyToComment?($scope.commentFormData.replyTo=replyToComment,$(".comment[data-commentid="+replyToComment.id+"] > .replies").prepend($("#comment-form-include"))):($scope.commentFormData.replyTo=null,$("#comment-form-container").prepend($("#comment-form-include")))},$scope.hideCommentForm=function(clear){clear&&($scope.commentFormData.comment=""),$scope.commentFormVisible=!1,$("#comment-form-container").prepend($("#comment-form-include"))},$scope.loadCommentReplies=function($event,comment){preventDefault($event),CommentResource.getCommentReplies({commentId:comment.id},function(response){comment.replies=response.comments},function(response){alertError(response.data.message)})},$scope.commentFormData={loading:!1,replyTo:null,comment:""},$scope.addComment=function(){$scope.commentFormData.loading=!0,$scope.commentFormData.replyTo?CommentResource.saveReply({commentId:$scope.commentFormData.replyTo.id,comment:$scope.commentFormData.comment},function(response){$scope.commentFormData.replyTo.replies||($scope.commentFormData.replyTo.replies=[]),$scope.commentFormData.replyTo.replies.unshift(response.comment),$scope.commentFormData.replyTo.replyCount+=1,$scope.hideCommentForm(!0)},function(response){alertError(response.data.message)}):CommentResource.save({postId:$scope.post.id,comment:$scope.commentFormData.comment},function(response){$scope.comments.comments.unshift(response.comment),$scope.hideCommentForm(!0)},function(response){alertError(response.data.message)})}}),app.controller("ForgotController",function($scope,$state,$stateParams,UserResource){$scope.forgotFormData={loading:!1,email:"",errors:{}},$scope.success=!1,$scope.submit=function(){return $scope.forgotFormData.loading=!0,UserResource.forgot({},{email:$scope.forgotFormData.email},function(response){$scope.forgotFormData.loading=!1,$scope.success=!0},function(response){$scope.forgotFormData.loading=!1,response.data.messages&&response.data.messages.hasOwnProperty("email")?$scope.forgotFormData.errors=response.data.messages:alertError(response.data.message)}),!1}}),app.controller("LoginController",function($scope,$state,$stateParams,AuthService){$scope.loginFormData={loading:!1,username:"",password:"",errors:{}},$scope.login=function(){return $scope.loginFormData.loading=!0,AuthService.login($scope.loginFormData.username,$scope.loginFormData.password).then(function(response){$scope.loginFormData.loading=!1,$state.go("home")},function(response){$scope.loginFormData.loading=!1,$scope.sortLoginErrors(response)}),!1},$scope.sortLoginErrors=function(response){response.messages&&(response.messages.hasOwnProperty("username")||response.messages.hasOwnProperty("password"))?$scope.loginFormData.errors=response.messages:$scope.loginFormData.errors={general:response.message}},$stateParams.loginFormData&&($scope.loginFormData=$stateParams.loginFormData),$stateParams.response&&$scope.sortLoginErrors($stateParams.response)}),app.controller("ResetController",function($scope,$state,$stateParams,UserResource){$scope.resetFormData={loading:!1,token:$stateParams.token,password:"",confirmPassword:"",errors:{}},$scope.success=!1,$scope.submit=function(){return $scope.resetFormData.password!=$scope.resetFormData.confirmPassword?($scope.resetFormData.errors={confirmPassword:["Passwords do not match."]},!1):($scope.resetFormData.loading=!0,UserResource.reset({},{token:$scope.resetFormData.token,password:$scope.resetFormData.password},function(response){$scope.resetFormData.loading=!1,$scope.success=!0},function(response){$scope.resetFormData.loading=!1,response.data.messages&&response.data.messages.hasOwnProperty("password")?$scope.resetFormData.errors=response.data.messages:alertError(response.data.message)}),!1)}}),app.controller("SignupController",function($scope,$state,AuthService,UserResource){$scope.signupFormData={loading:!1,username:"",password:"",email:"",errors:{}},$scope.signup=function(){return $scope.signupFormData.loading?!1:($scope.signupFormData.errors={},$scope.signupFormData.loading=!0,void UserResource.save({username:$scope.signupFormData.username,password:$scope.signupFormData.password,email:$scope.signupFormData.email},function(response){AuthService.login($scope.signupFormData.username,$scope.signupFormData.password).then(function(response){$scope.signupFormData.loading=!1,$state.go("home")},function(response){$scope.signupFormData.loading=!1,$scope.signupFormData.errors={general:response.message}})},function(response){$scope.signupFormData.loading=!1,response=response.data,response.messages&&(response.messages.hasOwnProperty("username")||response.messages.hasOwnProperty("password")||response.messages.hasOwnProperty("email"))?$scope.signupFormData.errors=response.messages:$scope.signupFormData.errors={general:response.message}}))}}),app.controller("PostFormController",function($scope,PostResource,task,postType,close){$scope.task=task,$scope.postType=postType?postType:"tip",$scope.close=close,$scope.formData={title:"",text:""},$scope.setPostType=function($event,postType){preventDefault($event),$scope.postType=postType===$scope.postType?"":postType},$scope.submit=function(){PostResource.saveTaskPost({taskSlug:$scope.task.slug},{title:$scope.formData.title,text:$scope.formData.text,type:$scope.postType},function(response){console.log(response),alertSuccess("Post saved"),close(response.post)},function(response){alertError(response.data.message)})}}),app.controller("SubmissionFormController",function($scope,SubmissionResource,task,close,$timeout,AuthService){function getImageIds(){for(var ids=[],files=dropzone.getFilesWithStatus("success"),i=0;i<files.length;i++){var file=files[i],response=JSON.parse(file.xhr.response);response&&response.hasOwnProperty("image")&&ids.push(response.image.id)}return ids}$scope.task=task,$scope.close=close,$scope.stage=1,$scope.nextEnabled=!1,$scope.formData={imageIds:[],title:"",text:"","private":0,cost:2,time:3,rating:5};var dropzone;$timeout(function(){dropzone=new Dropzone("#post-file",{acceptedFiles:"image/*",addRemoveLinks:!0,url:"/api/images?sessionToken="+AuthService.getSessionToken(),clickable:".dropzone-btn",thumbnailWidth:96}),dropzone.on("sending",function(){$scope.nextEnabled=!1,$scope.$apply()}),dropzone.on("complete",function(){console.log("getFilesWithStatus",dropzone.getFilesWithStatus("success")),$scope.nextEnabled=dropzone.getFilesWithStatus("success").length>0,$scope.$apply()}),dropzone.on("removedfile",function(){$scope.nextEnabled=dropzone.getFilesWithStatus("success").length>0,$scope.$apply()})},10),$scope.toStage=function(stage){$scope.stage=stage},$scope.nextStage=function(){switch($scope.stage){case 1:dropzone.processQueue(),$scope.formData.imageIds=getImageIds();break;case 2:}$scope.stage++},$scope.setPrivate=function($event,val){preventDefault($event),$scope.formData["private"]=val},$scope.submit=function(){SubmissionResource.save({taskSlug:$scope.task.slug},$scope.formData,function(response){console.log(response),alertSuccess("Submission saved"),close(response.post)},function(response){alertError(response.data.message)})}}),app.controller("CommentFormController",function($scope,$rootScope,$state,$stateParams,CommentResource){console.log("commentformcontroller",$scope),$scope.task=$scope.$parent.task}),app.controller("CommentsController",function($scope,$state,CommentResource){$scope.likeComment=function($event,comment){preventDefault($event),comment.liked=comment.liked?!1:!0,comment.likeClicked=!0,comment.liked?(CommentResource.likeComment({commentId:comment.id}),comment.likeCount=parseInt(comment.likeCount)+1):(CommentResource.unlikeComment({commentId:comment.id}),comment.likeCount=parseInt(comment.likeCount)-1)}}),app.controller("HeaderController",function($scope,$state,ModalService,AuthService){$scope.loginFormData={loading:!1,username:"",password:"",errors:{}},$scope.login=function(){return $scope.loginFormData.loading=!0,console.log($scope),AuthService.login($scope.loginFormData.username,$scope.loginFormData.password).then(function(response){$scope.loginFormData.loading=!1},function(response){$scope.loginFormData.loading=!1,console.log("passing to login",{loginFormData:$scope.loginFormData,response:response}),$state.go("login",{loginFormData:$scope.loginFormData,response:response})}),!1},$scope.logout=function(){AuthService.logout()},$scope.back=function(){window.history.go(-1)},$scope.notificationsOpen=!1,$scope.toggleNotifications=function($event){preventDefault($event),$scope.notificationsOpen=!$scope.notificationsOpen,console.log($scope.notificationsOpen)}}),app.controller("PostsController",function($scope,$state,PostResource){console.log("PostsController",$scope),$scope.likePost=function($event,post){preventDefault($event),post.liked=post.liked?!1:!0,post.likeClicked=!0,post.liked?(PostResource.likePost({id:post.id}),post.likeCount=parseInt(post.likeCount)+1):(PostResource.unlikePost({id:post.id}),post.likeCount=parseInt(post.likeCount)-1)},$scope.goToPost=function($event,post){}}),app.controller("UserProfileController",function($scope,$rootScope,$state,$stateParams,AuthService,UserResource,ToDoResource){$rootScope.loading=!0,$rootScope.pageTitle=$stateParams.username,$scope.username=$stateParams.username,$scope.user=null,$scope.stickers=null,$scope.todo=null,$scope.posts=null,UserResource.get({username:$scope.username},function(user){$scope.user=user,$scope.stickers=UserResource.getStickers({username:$scope.username}),$scope.posts=UserResource.getPosts({username:$scope.username}),ToDoResource.query({username:$scope.username},function(result){$scope.todo=result.tasks})})}),app.controller("UserStickersController",function($scope,$rootScope,$state,$stateParams,UserResource){$rootScope.loading=!0,$rootScope.pageTitle=$stateParams.username,$scope.user=null,$scope.username=$stateParams.username,$scope.stickers=[],UserResource.getStickers({username:$scope.username},function(result){$scope.user=result.user,$scope.stickers=result.stickers})}),app.controller("UserSubmissionsController",function($scope,$rootScope,$state,$stateParams,UserResource){$rootScope.loading=!0,$rootScope.pageTitle=$stateParams.username,$scope.submissions=[],$scope.user=null,$scope.username=$stateParams.username,UserResource.getSubmissions({username:$scope.username},function(result){$scope.user=result.user,$scope.submissions=result.submissions})}),app.controller("UserToDoController",function($scope,$rootScope,$state,$stateParams,UserResource,ToDoResource){$rootScope.loading=!0,$rootScope.pageTitle=$stateParams.username,$scope.tasks=[],$scope.user=null,$scope.username=$stateParams.username,ToDoResource.query({username:$scope.username},function(result){$scope.user=result.user,$scope.tasks=result.tasks})}),app.directive("avatar",function(){return{scope:{user:"="},template:function($scope){return'<img ng-if="user && user.image" class="user-image" ng-src="{{user.image.thumbUrl}}" /><span ng-if="!user || !user.image" class="user-image default-user-image"></span>'}}}),function(angular,factory){return"function"==typeof define&&define.amd?void define(["angular","ckeditor"],function(angular){return factory(angular)}):factory(angular)}(angular||null,function(angular){var $defer,app=angular.module("ngCkeditor",[]),loaded=!1;return app.run(["$q","$timeout",function($q,$timeout){function checkLoaded(){if("loaded"==CKEDITOR.status){for(var localPlugins=["uploadimage","uploadwidget","widget","filetools","notificationaggregator","lineutils","notification"],i=0;i<localPlugins.length;i++)CKEDITOR.plugins.addExternal(localPlugins[i],"/assets/bower_components/ckeditor/plugins/"+localPlugins[i]+"/");CKEDITOR.plugins.addExternal("markdown","/assets/bower_components/ckeditor-markdown-plugin/markdown/"),CKEDITOR.plugins.addExternal("imagebutton","/assets/bower_components/ckeditor-image-button/"),loaded=!0,$defer.resolve()}else checkLoaded()}if($defer=$q.defer(),angular.isUndefined(CKEDITOR))throw new Error("CKEDITOR not found");CKEDITOR.disableAutoInline=!0,CKEDITOR.on("loaded",checkLoaded),CKEDITOR.on("dialogDefinition",function(e){var dd=e.data.definition;if("link"===e.data.name){dd.minHeight=30,dd.removeContents("advanced"),dd.removeContents("target"),dd.removeContents("upload");for(var tabInfo=dd.getContents("info");tabInfo.elements.length>0;)tabInfo.remove(tabInfo.elements[0].id);tabInfo.add({type:"text",id:"urlNew",label:"URL",setup:function(data){var value="";data.url?(data.url.protocol&&(value+=data.url.protocol),data.url.url&&(value+=data.url.url)):data.email&&data.email.address&&(value="mailto:"+data.email.address),this.setValue(value)},commit:function(data){data.url={protocol:"",url:this.getValue()}}})}}),$timeout(checkLoaded,100)}]),app.directive("ckeditor",["$timeout","$q",function($timeout,$q){return{restrict:"AC",require:["ngModel","^?form"],scope:!1,link:function(scope,element,attrs,ctrls){var ngModel=ctrls[0],form=ctrls[1]||null,EMPTY_HTML="<p></p>",isTextarea="textarea"==element[0].tagName.toLowerCase(),data=[],isReady=!1;isTextarea||element.attr("contenteditable",!0);var onLoad=function(){var options={contentsCss:["https://fonts.googleapis.com/css?family=Roboto+Slab|Roboto:300|Rancho","/assets/build/"+assetVersion+"/css/stickable.min.css"],extraPlugins:"uploadimage,markdown,imagebutton",disableObjectResizing:!0,linkShowAdvancedTab:!1,linkShowTargetTab:!1,selectMultiple:!0,imageUploadUrl:"/api/images",removePlugins:"elementspath,magicline,contextmenu,liststyle,tabletools",resize_enabled:!1,height:300,width:"100%",toolbar:[{items:["Bold","Italic","Strike","Underline"]},{items:["BulletedList","NumberedList"]},{items:["Link","Image","imagebutton"]},{items:["Markdown"]}],disableNativeSpellChecker:!1,uiColor:"#FAFAFA"};attrs.ckeditor&&(options=angular.extend(options,scope[attrs.ckeditor]));var instance=isTextarea?CKEDITOR.replace(element[0],options):CKEDITOR.inline(element[0],options),configLoaderDef=$q.defer();element.bind("$destroy",function(){console.log("destroy"),instance.removeAllListeners(),CKEDITOR.remove(instance)});var setModelData=function(setPristine){var data=instance.getData();data=data?toMarkdown(data):null,$timeout(function(){(setPristine!==!0||data!=ngModel.$viewValue)&&ngModel.$setViewValue(data),setPristine===!0&&form&&form.$setPristine()},0)},onUpdateModelData=function(setPristine){if(data.length){var item=data.pop()||EMPTY_HTML;isReady=!1,instance.setData(item,function(){setModelData(setPristine),isReady=!0})}};instance.on("change",setModelData),instance.on("blur",setModelData),instance.on("instanceReady",function(){scope.$broadcast("ckeditor.ready"),scope.$apply(function(){onUpdateModelData(!0)}),instance.document.on("keyup",setModelData)}),instance.on("customConfigLoaded",function(){configLoaderDef.resolve()}),ngModel.$render=function(){data.push(ngModel.$viewValue),isReady&&onUpdateModelData()}};"loaded"==CKEDITOR.status&&(loaded=!0),loaded?onLoad():$defer.promise.then(onLoad)}}}]),app}),app.directive("dropzone",function(){return function(scope,element,attrs){var config,dropzone;config=scope[attrs.dropzone],dropzone=new Dropzone(element[0],config.options),angular.forEach(config.eventHandlers,function(handler,event){dropzone.on(event,handler)})}}),function(){angular.module("masonry",["ng"]).directive("masonry",function($timeout){return{restrict:"AC",link:function(scope,elem,attrs){var container=elem[0],options=angular.extend({itemSelector:".item"},angular.fromJson(attrs.masonry)),masonry=scope.masonry=new Masonry(container,options),debounceTimeout=0;scope.update=function(){debounceTimeout&&$timeout.cancel(debounceTimeout),debounceTimeout=$timeout(function(){debounceTimeout=0,masonry.reloadItems(),masonry.layout(),elem.find("*[masonry-image]").css("visibility","visible")},120)},scope.removeBrick=function(){$timeout(function(){masonry.reloadItems(),masonry.layout()},500)},scope.appendBricks=function(ele){masonry.appended(ele)},scope.$on("masonry.layout",function(){masonry.layout()}),scope.update()}}}).directive("masonryImage",function(){return{restrict:"AC",link:function(scope,elem){elem.css("visibility","hidden");var master=elem.closest("*[masonry]").scope(),update=master.update,removeBrick=master.removeBrick,appendBricks=master.appendBricks;update&&(imagesLoaded(elem.get(0),update),elem.ready(update)),appendBricks&&imagesLoaded(elem.get(0),appendBricks(elem)),scope.$on("$destroy",function(){removeBrick&&removeBrick()})}}})}(),app.directive("stNotifications",function(){return{templateUrl:"views/directives/notifications.html",scope:{notifications:"=",toggle:"="},controller:function($scope,$rootScope,$state,UserNotificationsResource){$scope.clear=function($event,index){preventDefault($event);var notification=$scope.notifications[index];console.log("clear",index,notification),$scope.notifications.splice(index,1),UserNotificationsResource["delete"]({username:$rootScope.currentUser.username,id:notification.id})},$scope.goTo=function($event,index){preventDefault($event);var notification=$scope.notifications[index];switch($scope.clear($event,index),$scope.toggle($event),notification.destination.type){case"comment":$state.go("post",{slug:notification.destination.task.slug,postSlug:notification.destination.post.slug,commentId:notification.commentId});break;case"post":$state.go("post",{slug:notification.destination.task.slug,postSlug:notification.destination.post.slug});break;case"task":$state.go("task",{slug:notification.destination.task.slug});break;case"sticker":$state.go("sticker",{slug:notification.destination.sticker.slug})}}}}}),app.directive("rating",function(){return{restrict:"C",controller:function($scope){$scope.setValue=function(val){$scope.model=val}},scope:{model:"@",values:"="},template:function(){for(var t="",i=5;i>0;i--)t+="<li ng-class=\"{'active': model === "+i+'}" ng-click="setValue('+i+')">{{ values['+(i-1)+"] }}</li>";return console.log(t),t}}}),app.directive("stickerProgress",function(){return{restrict:"C",scope:{progress:"="},templateUrl:"views/directives/sticker-progress.html"}}),app.directive("sticker",function(){return{restrict:"C",link:function($scope,element){$scope.$watch("img",function(newValue,oldValue){newValue&&(console.log("img",newValue),Sticker.init(element[0]),element.find(".sticker-img").css("background-image","url("+$scope.img+")"))})},scope:{img:"@"}}}),app.directive("userList",function(){return{restrict:"C",scope:{data:"=",like:"="},templateUrl:"views/directives/user-list.html"}}),angular.module("markdown",[]).filter("markdown",function(){return function(text){return marked(text||"")}}),app.filter("plural",function(){return function(word,count){return 1===count?word:word+"s"}}),Array.prototype.shuffle=function(){var j,temp,i=this.length;if(0===i)return this;for(;--i;)j=Math.floor(Math.random()*(i+1)),temp=this[i],this[i]=this[j],this[j]=temp;return this},String.prototype.capitalizeFirstLetter=function(){return this.charAt(0).toUpperCase()+this.slice(1).toLowerCase()},app.factory("CategoryResource",function($resource,AuthService){return $resource(apiUrl+"categories/:slug",{slug:"@slug",sessionToken:function(){return AuthService.getSessionToken()||null}},{get:{cache:!0,transformResponse:function(data){return data=angular.fromJson(data),data.category}},query:{cache:!0,isArray:!0,transformResponse:function(data){return data=angular.fromJson(data),data.categories}}})}),app.factory("CommentResource",function($resource,AuthService){return $resource(apiUrl+"comments/:commentId",{commentId:"@commentId",postId:"@postId",sessionToken:function(){return AuthService.getSessionToken()||null}},{save:{method:"POST",url:apiUrl+"posts/:postId/comments"},saveReply:{method:"POST",url:apiUrl+"comments/:commentId/replies"},getPostsComments:{method:"GET",url:apiUrl+"posts/:postId/comments"},getCommentReplies:{method:"GET",url:apiUrl+"comments/:commentId/replies"},getLikes:{url:apiUrl+"comments/:commentId/likes",method:"GET"},likeComment:{url:apiUrl+"comments/:commentId/likes",method:"POST"},unlikeComment:{url:apiUrl+"comments/:commentId/likes",method:"DELETE"}})}),app.factory("PostResource",function($resource,AuthService){return $resource(apiUrl+"posts/:id",{id:"@id",postSlug:"@postSlug",taskSlug:"@taskSlug",sessionToken:function(){return AuthService.getSessionToken()||null}},{query:{},getTaskPosts:{method:"GET",url:apiUrl+"tasks/:taskSlug/posts"},saveTaskPost:{method:"POST",url:apiUrl+"tasks/:taskSlug/posts"},get:{url:apiUrl+"posts/:postSlug",cache:!0},likePost:{url:apiUrl+"posts/:id/likes",method:"POST"},unlikePost:{url:apiUrl+"posts/:id/likes",method:"DELETE"}})}),app.factory("SessionResource",function($resource){return $resource(apiUrl+"sessions",{sessionToken:"@sessionToken"},{get:{transformResponse:function(data){return data=angular.fromJson(data),data.session}}})}),app.factory("StickerResource",function($resource,AuthService){return $resource(apiUrl+"stickers/:slug",{slug:"@slug",earntId:"@earntId",sessionToken:function(){return AuthService.getSessionToken()||null}},{get:{transformResponse:function(data){return data=angular.fromJson(data),data.sticker}},getDoers:{method:"GET",url:apiUrl+"stickers/:slug/doers"},getEarners:{method:"GET",url:apiUrl+"stickers/:slug/earners"},likeEarner:{method:"POST",url:apiUrl+"stickers/:slug/earners/:earntId/likes"},unlikeEarner:{method:"DELETE",url:apiUrl+"stickers/:slug/earners/:earntId/likes"}})}),app.factory("SubmissionResource",function($resource,AuthService){return $resource(apiUrl+"submissions/:submissionId",{submissionId:"@submissionId",taskSlug:"@taskSlug",sessionToken:function(){return AuthService.getSessionToken()||null}},{save:{method:"POST",url:apiUrl+"tasks/:taskSlug/submissions"}})}),app.factory("TaskResource",function($resource,AuthService){return $resource(apiUrl+"tasks/:slug",{slug:"@slug",sessionToken:function(){return AuthService.getSessionToken()||null}},{get:{cache:!0,transformResponse:function(data){return data=angular.fromJson(data),data.task}},getDoers:{method:"GET",url:apiUrl+"tasks/:slug/doers"}})}),app.factory("ToDoResource",function($resource,AuthService){return $resource(apiUrl+"users/:username/todo",{username:"@username",slug:"@slug",taskId:"@taskId",toDoId:"@toDoId",sessionToken:function(){return AuthService.getSessionToken()||null}},{query:{method:"GET"},"delete":{method:"DELETE",url:apiUrl+"users/:username/todo/:taskId"},getLikes:{method:"GET",url:apiUrl+"todo/:toDoId/likes"},likeDoer:{method:"POST",url:apiUrl+"todo/:toDoId/likes"},unlikeDoer:{method:"DELETE",url:apiUrl+"todo/:toDoId/likes"}})}),app.factory("UserNotificationsResource",function($resource,AuthService){return $resource(apiUrl+"users/:username/notifications/:id",{username:"@username",sessionToken:function(){return AuthService.getSessionToken()||null}},{query:{method:"GET",isArray:!0,transformResponse:function(data){var data=angular.fromJson(data);return data.notifications}}})}),app.factory("UserResource",function($resource,AuthService){return $resource(apiUrl+"users",{username:"@username",sessionToken:function(){return AuthService.getSessionToken()||null}},{get:{url:apiUrl+"users/:username",cache:!0,transformResponse:function(data){var data=angular.fromJson(data);return data.user}},update:{method:"PUT",url:apiUrl+"users/:username"},save:{method:"POST"},forgot:{method:"POST",url:apiUrl+"users/forgot"},reset:{method:"POST",url:apiUrl+"users/reset"},getStickers:{method:"GET",url:apiUrl+"users/:username/stickers"},getPosts:{method:"GET",url:apiUrl+"users/:username/posts"},getSubmissions:{method:"GET",url:apiUrl+"users/:username/submissions"}})}),app.service("AuthService",function(localStorageService,SessionResource,$q,$rootScope){var session=null,sessionToken=null;return{checkSession:function(){var self=this;(sessionToken=localStorageService.get("sessionToken"))?SessionResource.get({
sessionToken:sessionToken},function(session){self.onLogin(session,sessionToken)},function(response){400===response.status?self.onLogout():alertError("There was an error logging in to Stickable. Please refresh to try again.")}):self.onLogout()},login:function(username,password){var self=this;return $q(function(resolve,reject){SessionResource.save({username:username,password:password},function(response){self.onLogin(response.session,response.sessionToken),resolve(response.session.user)},function(response){reject(response.data)})})},onLogin:function(newSession,newSessionToken){session=newSession,sessionToken=newSessionToken,localStorageService.set("sessionToken",newSessionToken),console.log("onLogin",newSession),$rootScope.$broadcast("login",{user:newSession.user,token:newSessionToken})},logout:function(){var self=this;SessionResource["delete"]({sessionToken:sessionToken}),self.onLogout()},onLogout:function(){session=!1,sessionToken=!1,localStorageService.remove("sessionToken"),$rootScope.$broadcast("logout")},getSessionToken:function(){return sessionToken},getUser:function(){return null===session?null:session&&session.user?session.user:!1}}}),app.service("NotificationService",function($rootScope,$timeout,AuthService,UserNotificationsResource){console.log("NotificationService");var socket=null,connected=!1;return{getNotifications:function(user){$rootScope.notifications=UserNotificationsResource.query({username:user.username})},onLogin:function(user){this.getNotifications(user),this.initSocket()},initSocket:function(){var self=this;return null!==socket?(connected&&self.setUser(),socket):(socket=io(socketUrl),socket.on("connect",function(){connected=!0,self.setUser()}),socket.on("new-notification",function(message){self.addNewNotification(message.notification)}),socket)},setUser:function(){socket.emit("set-user",{token:AuthService.getSessionToken()})},addNewNotification:function(notification){notification["new"]=!0,$rootScope.notifications.unshift(notification),$rootScope.notificationsPreview+=1,$rootScope.$digest(),$timeout(function(){notification["new"]=!1,$rootScope.notificationsPreview-=1},3e3)}}}),app.service("ProgressService",function(){return{getProgress:function(sticker){var progress={completed:0,completedIds:[],pending:0,pendingIds:[],rejected:0,rejectedIds:[],remaining:0,percent:0};progress.completed=sticker.progress.completed.length;for(var i=0;i<sticker.progress.completed.length;i++)progress.completedIds.push(sticker.progress.completed[i].id);for(var i=0;i<sticker.progress.pending.length;i++)progress.pendingIds.push(sticker.progress.pending[i].id);for(var i=0;i<sticker.progress.rejected.length;i++)progress.rejectedIds.push(sticker.progress.rejected[i].id);progress.pending=sticker.progress.pending.length,progress.rejected=sticker.progress.rejected.length;var required=sticker.requiredTasks;return required||(required=sticker.tasks.length),progress.remaining=Math.max(0,required-progress.completed),progress.percent=Math.ceil(Math.min(progress.completed,required)/required*100),progress}}});
//# sourceMappingURL=stickable.min.js.map
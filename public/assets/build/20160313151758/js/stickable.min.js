"use strict";function preventDefault($event){$event.preventDefault(),$event.stopPropagation()}function setBg($element,url){setTimeout(function(){url?($element.removeClass("dark-bg"),iOS?$element.css("background-image","url("+url+")"):$.backstretch(url)):$element.addClass("dark-bg")},1)}function clearBg(){$(".splash").backstretch("destroy"),$.backstretch("destroy")}function closeNav(){$("body").removeClass("navbar-visible")}function alertSuccess(message){Messenger().post({message:message,type:"success",showCloseButton:!0,hideAfter:3})}function alertError(message){Messenger().post({message:message,type:"error",showCloseButton:!0,hideAfter:3})}var iOS=/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream,app=angular.module("stickable",["ui.router","ngResource","ngSanitize","LocalStorageModule","angularModalService","ngAnimate","angularMoment","ngCkeditor","markdown","masonry","rt.debounce"]);app.config(function($httpProvider,$locationProvider,$stateProvider,$urlRouterProvider,localStorageServiceProvider){$locationProvider.html5Mode(!0),localStorageServiceProvider.setPrefix("stickable").setStorageType("localStorage").setStorageCookie(0,"/"),$stateProvider.state("home",{url:"/",templateUrl:"views/pages/home.html",controller:"HomeController"}).state("help",{url:"/help",templateUrl:"views/pages/help.html",controller:"HelpController"}).state("design",{url:"/design",templateUrl:"views/pages/design.html"}).state("browse",{url:"/browse",templateUrl:"views/pages/browse.html",controller:"BrowseController"}).state("stickers",{url:"/stickers",templateUrl:"views/pages/stickers.html",controller:"StickersController"}).state("bot",{url:"/bot",templateUrl:"views/pages/bot.html",controller:"BotController"}).state("signup",{url:"/signup",templateUrl:"views/pages/auth/signup.html",controller:"SignupController"}).state("login",{url:"/login",templateUrl:"views/pages/auth/login.html",controller:"LoginController",params:{loginFormData:null,response:null}}).state("forgot",{url:"/forgot",templateUrl:"views/pages/auth/forgot.html",controller:"ForgotController"}).state("reset",{url:"/reset/{token:string}",templateUrl:"views/pages/auth/reset.html",controller:"ResetController"}).state("settings",{url:"/settings",templateUrl:"views/pages/settings/index.html",controller:"SettingsController"}).state("notifications",{url:"/notifications",templateUrl:"views/pages/notifications/index.html",controller:"NotificationsController"}).state("user",{url:"/user/{username:string}",templateUrl:"views/pages/user/view.html",controller:"UserProfileController"}).state("user-planner",{url:"/user/{username:string}/planner",templateUrl:"views/pages/user/planner.html",controller:"UserPlannerController"}).state("user-stickers",{url:"/user/{username:string}/stickers",templateUrl:"views/pages/user/stickers.html",controller:"UserStickersController"}).state("user-submissions",{url:"/user/{username:string}/submissions",templateUrl:"views/pages/user/submissions.html",controller:"UserSubmissionsController"}).state("category",{url:"/category/{slug:string}",templateUrl:"views/pages/category/view.html",controller:"CategoryController"}).state("sticker",{url:"/sticker/{slug:string}",templateUrl:"views/pages/sticker/view.html",controller:"StickerController"}).state("task",{url:"/task/{slug:string}",templateUrl:"views/pages/task/view.html",controller:"TaskController"}).state("post",{url:"/task/{slug:string}/{postSlug:string}",templateUrl:"views/pages/task/view.html",controller:"TaskController"}),$urlRouterProvider.otherwise("/")}),app.run(function($rootScope,$state,AuthService,UserNotificationsResource,NotificationService,moment){$rootScope.iOS=iOS,FastClick.attach(document.body),moment.locale("en",{relativeTime:{future:"in %s",past:"%s",s:"1s",m:"1m",mm:"%dm",h:"1h",hh:"%dh",d:"1d",dd:"%dd",M:"1mo",MM:"%dmo",y:"1y",yy:"%dy"}}),marked.setOptions({renderer:new marked.Renderer,gfm:!0,tables:!1,breaks:!0,pedantic:!1,sanitize:!0,smartLists:!0,smartypants:!1}),Dropzone.autoDiscover=!1,$rootScope.dropzoneConfig={options:{autoProcessQueue:!1,uploadMultiple:!0,addRemoveLinks:!0,url:"/api/images"},eventHandlers:{sending:function(file,xhr,formData){},success:function(file,response){}}},$rootScope.$state=$state,$rootScope.pageTitle="",$rootScope.headerTitle="",AuthService.checkSession(),$rootScope.currentUser=AuthService.getUser(),$rootScope.$on("login",function(event,args){$rootScope.currentUser=args.user,NotificationService.onLogin(args.user,args.token)}),$rootScope.$on("logout",function(){$rootScope.currentUser=!1}),$rootScope.$on("$stateChangeStart",function(ev,to,toParams,from){$rootScope.searchOpen=!1,$rootScope.headerTitle="",$rootScope.pageTitle="",clearBg()}),$rootScope.$on("$stateChangeSuccess",function(ev,to,toParams,from){$("body").removeClass("navbar-visible").attr("data-previous",from.name),document.body.scrollTop=document.documentElement.scrollTop=0}),$rootScope.costs=["Free","< $10","$10 - $50","$50 - $200","> $200"],$rootScope.times=["< 15 mins","< 1 hr","1 - 4 hrs","1 day","> 1 day"],$rootScope.ratings=["Sucked","Meh","Good","Great","Life Changing"],$rootScope.notificationsPreview=0,$rootScope.notificationsOpen=!1,$rootScope.notifications=[],$rootScope.bodyClick=function($event){$rootScope.notificationsOpen=!1}}),$(document).on("click","body:not(.navbar-visible) .navbar-toggle",function(e){e.preventDefault(),$("body").addClass("navbar-visible")}),$(document).on("click","body.navbar-visible .navbar-toggle",function(e){e.preventDefault(),closeNav()}),$(document).on("click","body.navbar-visible",function(e){$(e.target).closest("#sidenav").length>0||$(e.target).closest("button").hasClass("navbar-toggle")||$(e.target).hasClass("navbar-toggle")||(e.preventDefault(),closeNav())}),angular.module("stickable").run(["$templateCache",function($templateCache){$templateCache.put("views/directives/st-notifications.html",'<ul class="dropdown-menu notifications-dropdown notification-list">\n    <li ng-if="notifications.length < 1" class="no-notifications">\n        No unread notifications\n    </li>\n    <li\n            ng-if="notifications.length > 0"\n            ng-repeat="(index, notification) in notifications"\n            ng-class="{\'new-notification\': notification.new}"\n            >\n        <a href="#" ng-click="goTo($event, index)" class="media">\n\n            <span class="media-left" ng-if="notification.image">\n                <span>\n                    <img ng-src="{{notification.image}}" />\n                </span>\n            </span>\n\n            <span class="media-body media-middle">\n                <i class="fa" ng-class="\'fa-\'+notification.icon"></i>\n                <span ng-bind-html="notification.text | markdown"></span>\n            </span>\n\n            <span class="media-right media-middle" ng-click="clear($event, index)">\n                <span class="time" am-time-ago="notification.createdAt"></span>\n                <i class="btn-clear fa fa-times-circle-o"></i>\n            </span>\n\n        </a>\n    </li>\n</ul>\n'),$templateCache.put("views/directives/st-progress.html",'<span class="progress">\n  <span\n        class="progress-bar progress-bar-success"\n        ng-style="{\'width\': progress.percent+\'%\'}">\n      {{progress.completed}} completed\n  </span>\n  <span\n        class="progress-bar progress-bar-white"\n        ng-style="{\'width\': (100-progress.percent)+\'%\'}">\n      {{progress.remaining}} needed\n  </span>\n</span>\n'),$templateCache.put("views/directives/st-tabs.html",'<ul class="tabs tabs-{{ values.length }}">\n\n    <li ng-repeat="value in values" ng-class="{\'tab-current\': model === value.value}">\n        <a href="#" ng-click="onChange($event, value.value)">\n            <i class="fa fa-fw fa-{{ value.icon }}"></i> {{ value.label }}\n        </a>\n    </li>\n\n</ul>\n'),$templateCache.put("views/directives/st-users.html",'<div class="user-list">\n    <div class="user" ng-repeat="user in data.users" ng-class="{\'liked\': !!user.pivot.liked, \'like-clicked\': !!user.likeClicked}">\n\n        <a href="/user/{{ user.username }}">\n            <span class="pic" ng-style="{\'background-image\':user.imageThumbUrl?\'url(\'+user.imageThumbUrl+\')\' : \'\'}">\n                <span>\n                    {{ user.username }}\n                    <small>\n                        <i class="fa fa-clock-o"></i> <span am-time-ago="user.pivot.createdAt"></span>\n                    </small>\n                </span>\n            </span>\n        </a>\n\n        <a class="like-btn like-thumb" ng-click="like($event, user)" href="#">\n            <span><strong ng-bind="user.pivot.likeCount  | suppressZero"></strong> <i class="fa fa-thumbs-up"></i></span>\n        </a>\n    </div>\n</div>\n'),$templateCache.put("views/modals/post-form.html",'<div class="modal">\n\n    <div class="modal-content">\n\n        <button ng-click="close()" class="modal-close-btn">\n            <i class="fa fa-times"></i>\n        </button>\n\n        <form class="form" ng-submit="submit()">\n\n            <div class="modal-body">\n\n                <h2>Add A Post</h2>\n\n                <div class="alert alert-info"><i class="fa fa-info-circle"></i> This is for asking questions or giving tips about the <strong>{{ task.name }}</strong> task. If you want to show that you\'ve completed the task, close this popup and click <em>I\'ve done it</em> instead.</div>\n\n                <!--<div class="form-group">\n\n                    <ul class="tabs tabs-2">\n                        <li ng-class="{\'tab-current\': postType === \'tip\' }">\n                            <a href="#" ng-click="setPostType($event, \'tip\')">\n                                <i class="fa fa-fw fa-info-circle"></i> Tip\n                            </a>\n                        </li>\n                        <li ng-class="{\'tab-current\': postType === \'question\' }">\n                            <a href="#" ng-click="setPostType($event, \'question\')">\n                                <i class="fa fa-fw fa-question-circle"></i> Question\n                            </a>\n                        </li>\n                    </ul>\n\n                </div>-->\n\n                <div class="form-group">\n                    <label for="post-title">Title</label>\n                    <input type="text"\n                           class="form-control"\n                           ng-model="formData.title"\n                           id="post-title"\n                           placeholder="Give your post a title."/>\n                </div>\n\n                <div class="form-group">\n                    <label for="post-text">Post</label>\n                    <textarea class="form-control" id="post-text" ng-model="formData.text" placeholder="Write your tip, question, or other post here."></textarea>\n                </div>\n\n            </div>\n\n            <div class="modal-footer">\n\n                <button ng-click="close()"\n                        type="button"\n                        class="btn btn-danger btn-labeled pull-left hidden-xs hidden-sm">\n                    <span class="btn-label"><i class="fa fa-trash"></i></span>\n                    Cancel\n                </button>\n\n                <button class="btn btn-primary btn-labeled">\n                    <span class="btn-label"><i class="fa fa-save"></i></span>\n                    Submit\n                </button>\n            </div>\n\n        </form>\n\n    </div>\n\n</div>\n'),$templateCache.put("views/modals/sticker-form.html",'<div class="modal sticker-form-modal">\n\n    <div class="modal-content">\n\n        <button ng-click="close()" class="modal-close-btn">\n            <i class="fa fa-times"></i>\n        </button>\n\n        <form class="form" ng-submit="submit()">\n\n            <div class="modal-body">\n\n                <h2 class="text-center">Create A Sticker</h2>\n\n                <div class="alert alert-info">\n                    <p><i class="fa fa-trophy"></i> A <strong>sticker</strong> is the overall goal you want to achieve. On the next page you will be able to add individual <strong>tasks</strong> that are necessary to earn this sticker.</p>\n                </div>\n\n                <div class="form-group"  ng-class="{\'has-error\': errors.name}">\n                    <label for="sticker-name"><i class="fa fa-trophy"></i> Name The Goal</label>\n                    <span ng-if="!errors.name" class="help-block">Keep it simple and specific, like <em>Stop Smoking</em> or <em>Visit Beijing</em>.</span>\n                    <span ng-if="errors.name" class="help-block">{{ errors.name.join(\' \') }}</span>\n                    <input type="text"\n                           class="form-control"\n                           ng-model="formData.name"\n                           id="sticker-name"\n                           placeholder="Give your sticker a name."\n                           required\n                            />\n                </div>\n\n                <div class="form-group"  ng-class="{\'has-error\': errors.categoryId}">\n                    <label for="sticker-category"><i class="fa fa-folder"></i> Category</label>\n                    <span ng-if="errors.categoryId" class="help-block">{{ errors.categoryId.join(\' \') }}</span>\n                    <select\n                           class="form-control"\n                           ng-model="formData.categoryId"\n                           id="sticker-category"\n                           required\n                           >\n                        <option ng-repeat="(id, name) in categories" value="{{id}}" ng-bind-html="name"></option>\n                    </select>\n                </div>\n\n            </div>\n\n            <div class="modal-footer">\n                <button class="btn btn-primary btn-labeled">\n                    <span class="btn-label"><i class="fa fa-save"></i></span>\n                    Submit\n                </button>\n            </div>\n\n        </form>\n\n    </div>\n\n</div>\n'),$templateCache.put("views/modals/submission-form.html",'<div class="modal submission-form-modal modal-paged">\n\n    <div class="modal-content">\n\n        <button ng-click="close()" class="modal-close-btn">\n            <i class="fa fa-times"></i>\n        </button>\n\n        <form class="form" ng-submit="submit()">\n\n            <div class="modal-body">\n\n                <div ng-show="stage === 1" class="submission-stage">\n\n                    <h2>{{ task.submission }}</h2>\n\n                    <div ng-include="\'views/partials/submission-forms/\' + task.submissionType.toLowerCase() + \'.html\'"></div>\n\n                </div>\n\n                <div ng-show="stage === 2" class="submission-stage">\n\n                    <h2>{{ (hasFirstStage ? \'Post Your Submission\' : task.submission) }}</h2>\n\n                    <!--<div class="form-group">\n\n                        <ul class="tabs tabs-2">\n                            <li ng-class="{\'tab-current\': formData.private === 0 }">\n                                <a href="#" ng-click="setPrivate($event, 0)">\n                                    <i class="fa fa-fw fa-file-text-o"></i> Post About It\n                                </a>\n                            </li>\n\n                            <li ng-class="{\'tab-current\': formData.private === 1 }">\n                                <a href="#" ng-click="setPrivate($event, 1)">\n                                    <i class="fa fa-fw fa-lock"></i> Keep It Private\n                                </a>\n                            </li>\n                        </ul>\n\n                    </div>-->\n\n                    <div class="form-group" ng-show="formData.private === 0" ng-class="{\'has-error\': errors.title}">\n                        <label for="post-title">Title</label>\n                        <span ng-if="errors.title" class="help-block">{{ errors.title.join(\' \') }}</span>\n                        <input type="text"\n                               class="form-control"\n                               ng-model="formData.title"\n                               id="post-title"\n                               placeholder="Give your post a title."/>\n                    </div>\n\n                    <div class="form-group" ng-show="formData.private === 0" ng-class="{\'has-error\': errors.text}">\n                        <label for="post-text">Content</label>\n                        <span ng-if="errors.text" class="help-block">{{ errors.text.join(\' \') }}</span>\n                        <textarea class="form-control" id="post-text" ng-model="formData.text" placeholder="Write your post."></textarea>\n                    </div>\n\n                    <p class="modal-help submission-post-help" ng-show="formData.private === 0 && submissionType === \'image\'">\n                        <i class="fa fa-star"></i> Tell the story of how you completed this task. Did you find it interesting? Can you share some tips to help others?\n                        <br/><i class="fa fa-info-circle"></i> Your photo(s) from the previous page and story you enter below will appear on the page for the task. Other members can like and comment on your post.\n                    </p>\n\n                    <p class="modal-help" ng-show="formData.private === 1">\n                        <i class="fa fa-info-circle"></i> Your submission will still count towards earning the sticker, but nobody else will see it or be able to like or comment on it.\n                        <br/>\n                        <span class="red">\n                        <i class="fa fa-exclamation-triangle"></i> Stickable works best when you post about the task and share stories and advice for others attempting to complete this. Consider writing a post even if it\'s only a few lines.</span>\n                    </p>\n\n                </div>\n\n                <div ng-show="stage === 3" class="submission-stage">\n\n                    <h2>Rate The Task</h2>\n\n                    <label>How much did it cost?</label>\n                    <st-rating class="rating-price" model="formData.cost" values="costs"></st-rating>\n\n                    <label>How long did it take?</label>\n                    <st-rating class="rating-time" model="formData.time" values="times"></st-rating>\n\n                    <label>How much did you enjoy it?</label>\n                    <st-rating class="rating-star" model="formData.rating" values="ratings"></st-rating>\n\n                    <p class="modal-help">\n                        <i class="fa fa-info-circle"></i> Providing this feedback helps us suggest tasks you\'ll enjoy that fit your time and budget.\n                    </p>\n\n                </div>\n\n            </div>\n\n            <div class="modal-footer">\n\n                <ul class="dots modal-dots">\n                    <li ng-if="hasFirstStage" ng-class="{\'active\': stage === 1}"><a href="#" ng-click="toStage(1)"></a></li>\n                    <li ng-class="{\'active\': stage === 2}"><a href="#" ng-click="toStage(2)"></a></li>\n                    <li ng-class="{\'active\': stage === 3}"><a href="#" ng-click="toStage(3)"></a></li>\n                </ul>\n\n                <a class="btn btn-labeled btn-block-sm" ng-class="{\'disabled\': !nextEnabled}" ng-click="nextStage()" ng-hide="stage === 3">\n                    <span class="btn-label"><i class="fa fa-arrow-right"></i></span>\n                    Continue\n                </a>\n\n                <button class="btn btn-primary btn-labeled btn-block-sm" ng-show="stage === 3" ng-class="{\'btn-loading\': submitting}">\n                    <span class="btn-label"><i class="fa fa-save"></i></span>\n                    Submit\n                </button>\n            </div>\n\n        </form>\n\n    </div>\n\n</div>\n'),$templateCache.put("views/modals/task-form.html",'<div class="modal task-form-modal">\n\n    <div class="modal-content">\n\n        <button ng-click="close()" class="modal-close-btn">\n            <i class="fa fa-times"></i>\n        </button>\n\n        <form class="form" ng-submit="submit()">\n\n            <div class="modal-body">\n\n                <h2 class="text-center">Create A Task</h2>\n\n                <div class="alert alert-info">\n                    <p><i class="fa fa-check-square-o"></i> A task is one measurable thing out of many that need doing to earn a sticker.</p>\n                </div>\n\n\n                <div class="form-group" ng-class="{\'has-error\': errors.name}">\n                    <label for="task-title"><i class="fa fa-check-square-o"></i> What Needs Doing?</label>\n                    <span ng-if="errors.name" class="help-block">{{ errors.name.join(\' \') }}</span>\n                    <input type="text"\n                           class="form-control"\n                           ng-model="formData.name"\n                           id="task-title"\n                           placeholder="e.g. Visit Place Name, or make A Thing."/>\n                </div>\n\n                <div class="form-group" ng-class="{\'has-error\': errors.submission}">\n                    <label for="task-submission"><i class="fa fa-cloud-upload"></i> How Do You Show You\'ve Done It?</label>\n                    <span ng-if="errors.submission" class="help-block">{{ errors.submission.join(\' \') }}</span>\n\n                    <st-tabs class="clear" model="formData.submissionType" values="submissionTypes"></st-tabs>\n\n                    <textarea\n                            class="form-control"\n                            id="task-submission"\n                            ng-model="formData.submission"\n                            placeholder="e.g. Take a photo at Place Name or of The Thing"\n                            style="min-height:100px">\n\n                    </textarea>\n                </div>\n\n            </div>\n\n            <div class="modal-footer">\n                <button class="btn btn-primary btn-labeled">\n                    <span class="btn-label"><i class="fa fa-save"></i></span>\n                    Submit\n                </button>\n            </div>\n\n        </form>\n\n    </div>\n\n</div>\n'),$templateCache.put("views/pages/auth/forgot.html",'<div class="container">\n    <div class="row">\n\n            <div class="panel panel-default">\n                <div class="panel-heading"><h1>Forgotten Details</h1></div>\n                <div class="panel-body">\n\n                    <form class="form-horizontal" role="form" ng-submit="submit()">\n\n                        <div class="form-group" ng-class="{\'has-error\': forgotFormData.errors.email}" ng-if="!success">\n                            <label class="col-md-4 control-label">Enter Your E-Mail Address <i class="fa fa-envelope"></i></label>\n\n                            <div class="col-md-6">\n                                <span ng-if="forgotFormData.errors.email" class="help-block">{{ forgotFormData.errors.email.join(\' \') }}</span>\n                                <input type="email"\n                                       class="form-control"\n                                       name="email"\n                                       required\n                                       ng-model="forgotFormData.email"/>\n                            </div>\n                        </div>\n\n                        <div class="form-group" ng-if="!success">\n                            <div class="col-md-6 col-md-offset-4">\n                                <button type="submit" class="btn btn-primary" ng-class="{\'btn-loading\': forgotFormData.loading}">\n                                    <i class="fa fa-envelope"></i>\n                                    Send Password Reset Link\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class="alert alert-success" ng-if="success">\n                            <i class="fa fa-envelope"></i> Your details have been sent to <strong>{{\n                            forgotFormData.email }}</strong>.\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n\n    </div>\n</div>\n'),$templateCache.put("views/pages/auth/login.html",'<div class="container">\n    <div class="row">\n\n            <div class="panel panel-default">\n                <div class="panel-heading"><h1>Login</h1></div>\n                <div class="panel-body">\n\n                    <form class="form-horizontal" role="form" ng-submit="login()">\n\n                        <div class="form-group" ng-class="{\'has-error\': loginFormData.errors.username}">\n\n                            <label class="col-md-4 control-label">Username <i class="fa fa-user"></i></label>\n\n                            <div class="col-md-8">\n                                <span ng-if="!loginFormData.errors.username" class="help-block">Up to 30 characters and can only contain letters, numbers, hyphens, or underscores.</span>\n                                <span ng-if="loginFormData.errors.username" class="help-block">{{ loginFormData.errors.username.join(\' \') }}</span>\n                                <input type="username"\n                                       class="form-control"\n                                       name="username"\n                                       value=""\n                                       required\n                                       ng-model="loginFormData.username"\n                                        />\n                            </div>\n                        </div>\n\n                        <div class="form-group" ng-class="{\'has-error\': loginFormData.errors.password}">\n                            <label class="col-md-4 control-label">Password <i class="fa fa-key"></i></label>\n\n                            <div class="col-md-8">\n                                <span ng-if="!loginFormData.errors.password" class="help-block">Minimum 5 characters.</span>\n                                <span ng-if="loginFormData.errors.password" class="help-block">{{ loginFormData.errors.password.join(\' \') }}</span>\n                                <input type="password"\n                                       class="form-control"\n                                       name="password"\n                                       required\n                                       ng-model="loginFormData.password"\n                                        />\n                            </div>\n                        </div>\n\n                        <div class="form-group">\n                            <div class="col-md-8 col-md-offset-4">\n                                <button type="submit" class="btn btn-primary btn-labeled" ng-class="{\'btn-loading\': loginFormData.loading}">\n                                    <span class="btn-label"><i class="fa fa-key fa-fw"></i></span>\n                                    Login\n                                </button>\n\n                                <a href="/forgot" class="btn btn-labeled">\n                                    <span class="btn-label"><i class="fa fa-question fa-fw"></i></span>\n                                    Forgot Details\n                                </a>\n\n                                <a href="/signup" class="btn btn-labeled">\n                                    <span class="btn-label"><i class="fa fa-user fa-fw"></i></span>\n                                    Create Account\n                                </a>\n                            </div>\n                        </div>\n\n                    </form>\n\n                </div>\n            </div>\n\n    </div>\n</div>\n'),$templateCache.put("views/pages/auth/reset.html",'<div class="container">\n    <div class="row">\n\n            <div class="panel panel-default">\n                <div class="panel-heading"><h1>Create A New Password</h1></div>\n                <div class="panel-body">\n\n                    <form class="form-horizontal" role="form" ng-submit="submit()">\n\n                        <input type="hidden" name="token" ng-model="resetFormData.token">\n\n                        <div class="form-group"\n                             ng-class="{\'has-error\': resetFormData.errors.password}"\n                             ng-if="!success">\n                            <label for="password" class="col-md-4 control-label">Password</label>\n\n                            <div class="col-md-6">\n                                <input type="password"\n                                       class="form-control"\n                                       id="password"\n                                       name="password"\n                                       ng-model="resetFormData.password"\n                                       required>\n\n                                <span ng-if="resetFormData.errors.password" class="help-block">{{ resetFormData.errors.password.join(\' \') }}</span>\n                            </div>\n                        </div>\n\n                        <div class="form-group"\n                             ng-class="{\'has-error\': resetFormData.errors.confirmPassword}"\n                             ng-if="!success">\n                            <label for="confim-password" class="col-md-4 control-label">Confirm Password</label>\n\n                            <div class="col-md-6">\n                                <input type="password"\n                                       class="form-control"\n                                       id="confim-password"\n                                       name="confim-password"\n                                       ng-model="resetFormData.confirmPassword"\n                                       required>\n\n                                <span ng-if="resetFormData.errors.confirmPassword" class="help-block">{{ resetFormData.errors.confirmPassword.join(\' \') }}</span>\n                            </div>\n                        </div>\n\n                        <div class="form-group" ng-if="!success">\n                            <div class="col-md-6 col-md-offset-4">\n                                <button type="submit" class="btn btn-primary" ng-class="{\'btn-loading\': forgotFormData.loading}">\n                                    <i class="fa fa-unlock-alt"></i>\n                                    Change Password\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class="alert alert-success" ng-if="success">\n                            <i class="fa fa-check"></i>\n                            Password changed. You can now <a class="btn" href="/login">Login</a> with the new password.\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n\n    </div>\n</div>\n'),$templateCache.put("views/pages/auth/signup.html",'<div class="container">\n    <div class="row">\n\n            <div class="panel panel-default">\n                <div class="panel-heading"><h1>Create An Account</h1></div>\n                <div class="panel-body">\n\n                    <form class="form-horizontal" role="form" ng-submit="signup()">\n\n                        <div class="form-group" ng-class="{\'has-error\': signupFormData.errors.username}">\n                            <label class="col-md-4 control-label">Username <i class="fa fa-user"></i></label>\n\n                            <div class="col-md-8">\n                                <span ng-if="!signupFormData.errors.username" class="help-block">Up to 30 characters and can only contain letters, numbers, hyphens, or underscores.</span>\n                                <span ng-if="signupFormData.errors.username" class="help-block">{{ signupFormData.errors.username.join(\' \') }}</span>\n                                <input type="text"\n                                       class="form-control"\n                                       name="username"\n                                       ng-model="signupFormData.username"\n                                       required\n                                       placeholder="" />\n                            </div>\n                        </div>\n\n                        <div class="form-group" ng-class="{\'has-error\': signupFormData.errors.email}">\n                            <label class="col-md-4 control-label">E-Mail Address <i class="fa fa-envelope"></i></label>\n\n                            <div class="col-md-8">\n                                <span ng-if="signupFormData.errors.email" class="help-block">{{ signupFormData.errors.email.join(\' \') }}</span>\n                                <input type="email"\n                                       class="form-control"\n                                       name="email"\n                                       ng-model="signupFormData.email"\n                                       required\n                                        placeholder=""\n                                        />\n                            </div>\n                        </div>\n\n                        <div class="form-group" ng-class="{\'has-error\': signupFormData.errors.password}">\n                            <label class="col-md-4 control-label">Password <i class="fa fa-key"></i></label>\n\n                            <div class="col-md-8">\n                                <span ng-if="!signupFormData.errors.password" class="help-block">Minimum 5 characters.</span>\n                                <span ng-if="signupFormData.errors.password" class="help-block">{{ signupFormData.errors.password.join(\' \') }}</span>\n                                <input type="password"\n                                       class="form-control"\n                                       name="password"\n                                       ng-model="signupFormData.password"\n                                       required\n                                        placeholder=""\n                                        />\n                            </div>\n                        </div>\n\n                        <div class="form-group">\n                            <div class="col-md-8 col-md-offset-4">\n                                <button type="submit" class="btn btn-primary btn-labeled" ng-class="{\'btn-loading\': signupFormData.loading}">\n                                    <span class="btn-label"><i class="fa fa-user fa-fw"></i></span>\n                                    Signup\n                                </button>\n                            </div>\n                        </div>\n\n                    </form>\n\n                </div>\n            </div>\n\n    </div>\n</div>\n\n'),
$templateCache.put("views/pages/bot.html",'<div class="content dark-page">\n<div class="container">\n\n    <h2>Hi, I\'m Stickerbot</h2>\n\n    <p class="white">I\'ll help you find something to do and stickers to work towards from your budget and available time.</p>\n\n    <div class="row">\n\n        <div class="col-md-8">\n\n            <div class="text-center trans-box results" ng-if="!loading && task">\n\n                <p>Why Don\'t You...</p>\n\n                <a class="task" href="/task/{{ task.slug }}"><h2>{{ task.name }}</h2></a>\n\n                <p>and earn the sticker...</p>\n\n                <a href="/sticker/{{ task.sticker.slug }}">\n                    <st-sticker sticker="task.sticker"></st-sticker> <h2>{{ task.sticker.name }}</h2>\n                </a>\n\n                <p>\n                    <a class="btn btn-danger btn-labeled" ng-click="findTask()">\n                        <span class="btn-label"><i class="fa fa-random"></i></span>\n                        {{ skipMessage }}\n                    </a>\n\n                    &nbsp;\n\n                    <a class="btn btn-success btn-labeled" href="/task/{{task.slug}}">\n                        <span class="btn-label"><i class="fa fa-arrow-right"></i></span>\n                        {{ goMessage }}\n                    </a>\n                </p>\n\n            </div>\n\n            <div class="text-center trans-box" ng-if="loading">\n                <i class="fa fa-spinner fa-spin"></i>\n            </div>\n\n            <div class="text-center trans-box" ng-if="!loading && !task">\n                <p>I couldn\'t find any tasks that meet your criteria. Try being less picky.</p>\n            </div>\n\n            <div class="ratings">\n\n                <h3>How long do you have?</h3>\n                <ul\n                        class="rating rating-time"\n                        model="formData.time"\n                        values="times"></ul>\n\n\n                <h3>How much can you spend?</h3>\n                <ul\n                        class="rating rating-price"\n                        model="formData.cost"\n                        values="costs"></ul>\n\n            </div>\n\n        </div>\n\n        <div class="col-md-4">\n\n            <img src="/assets/img/bot-white.png"/>\n        </div>\n\n\n    </div>\n\n</div>\n</div>\n'),$templateCache.put("views/pages/browse.html",'<div class="container-md">\n    <ul class="category-list row">\n        <li class="col-sm-4 col-xs-6" ng-repeat="category in categories">\n            <a href="/category/{{ category.slug }}" ng-style="{\'background-image\':\'url(\'+category.thumbUrl+\')\'}">\n                <span>{{ category.name }}</span>\n            </a>\n        </li>\n    </ul>\n</div>\n'),$templateCache.put("views/pages/category/view.html",'<div class="content">\n<div class="container">\n\n    <div class="titlecrumbs">\n        <h2 ng-if="category.parentCategory"><a href="/category/{{ category.parentCategory.slug }}"><i class="fa fa-folder"></i> {{ category.parentCategory.name }}</a></h2>\n        <h1><i class="fa fa-folder-open"></i> {{ category.name }}</h1>\n    </div>\n\n    <div ng-if="hasSubcategories" class="alert alert-info">\n        <p><i class="fa fa-folder-open"></i> These are the subcategories in <strong>{{category.name}}</strong>. Pick one of these more specific subcategories to find stickers.</p>\n    </div>\n\n    <ul ng-if="hasSubcategories" class="category-list row">\n        <li class="col-sm-3 col-xs-6" ng-repeat="subcategory in category.subcategories">\n            <a href="/category/{{ subcategory.slug }}" ng-style="{\'background-image\':\'url(\'+subcategory.thumbUrl+\')\'}">\n                <span>{{ subcategory.name }}</span>\n            </a>\n        </li>\n    </ul>\n\n    <div ng-if="hasStickers" class="alert alert-info">\n        <p><i class="fa fa-trophy"></i> These are <strong>{{category.name}}</strong> stickers. Pick one of them to see how you can earn it.</p>\n    </div>\n\n    <ul ng-if="hasStickers" class="sticker-list row">\n\n        <li class="col-md-3" ng-repeat="sticker in category.stickers">\n            <a href="/sticker/{{ sticker.slug }}">\n                <st-sticker sticker="sticker"></st-sticker>\n\n                <h3>{{ sticker.name }}</h3>\n            </a>\n        </li>\n\n    </ul>\n\n    <div ng-if="category && !hasSubcategories && !hasStickers">\n        <div class="alert alert-danger">\n            <p><i class="fa fa-frown-o"></i> There\'s no stickers or subcategories of <strong>{{category.name}}</strong> yet. Something will be here soon!</p>\n        </div>\n    </div>\n</div>\n</div>\n'),$templateCache.put("views/pages/design.html",'<div class="content">\n<div class="container">\n    <h1>Design Elements</h1>\n\n    <hr/>\n\n    <div class="titlecrumbs">\n        <h2><i class="fa fa-circle"></i> H2 Title</h2>\n        <h1><i class="fa fa-circle"></i> H1 Title</h1>\n    </div>\n\n    <div class="titlecrumbs">\n        <h3><i class="fa fa-circle"></i> H3 Title</h3>\n        <h2><i class="fa fa-circle"></i> H2 Title</h2>\n        <h1><i class="fa fa-circle"></i> H1 Title</h1>\n    </div>\n\n\n    <h1>This is an h1 heading</h1>\n\n    <h2>This is an h2 heading</h2>\n\n    <h3>This is an h3 heading</h3>\n    <h4>This is an h4 heading</h4>\n    <h5>This is an h5 heading</h5>\n\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam metus felis, egestas a sem et, lobortis venenatis\n        libero. Nunc vitae justo eget lectus scelerisque faucibus vel ac felis. Sed iaculis leo vitae pulvinar\n        dignissim. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent at\n        enim egestas, convallis erat at, pellentesque arcu. Nunc rutrum sem vitae orci mollis feugiat. Aenean ante\n        ipsum, aliquam vel imperdiet id, pulvinar vel lectus. Sed sagittis elit non ipsum porta, in luctus tellus\n        efficitur. Nunc turpis metus, volutpat sit amet ante eu, sollicitudin vulputate lacus. Duis sit amet sem a nunc\n        euismod posuere at vel justo. Integer condimentum sollicitudin lacus, sed sollicitudin dui efficitur eget.\n        Suspendisse at vehicula risus. Donec nec dui in arcu consequat tincidunt. Nullam gravida eros elit, vitae\n        venenatis risus mattis vel. Donec ut sollicitudin nibh, vel scelerisque sem.</p>\n\n    <h2>Button Examples</h2>\n\n    <p class="text-center">\n        <a href="#" class="btn">Blue buttons go to another page</a>\n        <a href="#" class="btn btn-primary">Purple buttons do an action right now</a>\n    </p>\n\n    <p class="text-center">\n        <a href="#" class="btn btn-danger">Red buttons remove something</a>\n        <a href="#" class="btn btn-success">Red butons add something</a>\n        <a href="#" class="btn btn-warning">Orange buttons do something mediumish</a>\n    </p>\n\n    <p class="text-center">\n        <a href="#" class="btn btn-blue btn-lg">btn-lg</a>\n        <a href="#" class="btn btn-blue">btn</a>\n        <a href="#" class="btn btn-blue btn-sm">btn-sm</a>\n    </p>\n</div>\n</div>\n'),$templateCache.put("views/pages/help.html",'<div class="content dark-page">\n<div class="container">\n    <h1>How Stickable Works</h1>\n\n    <div class="how-it-works">\n\n        <div class="row">\n\n            <div class="col-md-4">\n                <i class="fa fa-5x fa-list-ol"></i>\n                <h3>1. Complete Tasks</h3>\n                <p>Submit photos to show you completed them.</p>\n            </div>\n\n            <div class="col-md-4">\n                <i class="fa fa-5x fa-trophy"></i>\n                <h3>2. Earn Stickers</h3>\n                <p>Once you\'ve done the tasks for a sticker, you\'ve got it!</p>\n            </div>\n\n            <div class="col-md-4">\n                <i class="fa fa-5x fa-certificate"></i>\n                <h3>3. Receive Stickers</h3>\n                <p>Earn 5 stickers and we\'ll send you actual stickers you can stick.</p>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n</div>\n'),$templateCache.put("views/pages/home.html",'<div class="splash home-splash">\n    <div class="container">\n        <div class="row">\n            <div class="col-sm-3">\n                <img src="/assets/img/stickable.svg" alt="Stickable" id="home-splash-logo"/>\n            </div>\n            <div class="col-sm-9 white">\n                <h2>Discover new hobbies. Get help from our community. Earn stickers for achieving your goals.</h2>\n                <a class="btn no-block btn-labeled" href="/help">\n                    <span class="btn-label"><i class="fa fa-fw fa-info"></i></span>\n                    Learn More\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="content">\n\n    <div class="black-bg dark-page">\n        <div class="container home-task-search">\n\n            <div class="text-center">\n                <h2>Start Building Your To Do List</h2>\n\n\n                        <p>Type something you want to achieve.</p>\n\n                        <a ng-if="searchOpen" href="#" ng-click="closeSearch()" class="close-search-btn"><i class="fa fa-times"></i></a>\n\n                        <input\n                                type="text"\n                                class="form-control input-lg"\n                                ng-keyup="search()"\n                                ng-focus="searchFocus($event)"\n                                ng-blur="searchBlur()"\n                                ng-model="searchData.value"\n                                placeholder="I want to..."\n                                />\n\n\n                    <!--<div class="col-md-4 hidden-sm hidden-xs">\n\n                        <p>Can\'t think of something?</p>\n\n                        <a class="btn btn-primary btn-block btn-lg btn-labeled" href="/bot">\n                            <span class="btn-label"><i class="fa fa-fw fa-search"></i></span>\n                            Try The Idea Robot\n                        </a>\n                    </div>-->\n\n            </div>\n        </div>\n    </div>\n\n    <div class="white-bg search-results" ng-show="searchData.value">\n        <div class="container">\n\n            <h2 class="visible-lg visible-md text-center" ng-if="searchData.value">\n                &quot;{{ searchData.value }}&quot; Stickers\n            </h2>\n\n            <div class="text-center search-results-loading" ng-if="searchLoading">\n                <i class="fa fa-spinner fa-spin"></i>\n            </div>\n\n            <div class="text-center search-results-none"\n                 ng-show="searchData.value && !searchLoading && searchResults.length < 1">\n                No existing stickers found\n            </div>\n\n            <ul>\n                <li\n                        ng-repeat="result in searchResults"\n                        class="result"\n                        ng-class="{\'sticker-result\': result.type === \'sticker\', \'task-result\': result.type === \'task\'}"\n                        >\n\n                    <a class="media" ng-href="{{ (result.type === \'task\' ? \'/task/\'+result.task.slug : \'/sticker/\'+result.sticker.slug) }}">\n\n                        <span class="media-left media-middle">\n                            <st-sticker sticker="result.sticker"></st-sticker>\n                        </span>\n\n                        <span class="media-body media-middle result-text">\n\n                            <span ng-if="result.type === \'task\'">\n                                {{ result.task.name }}\n                                <small>A task for the <strong>{{ result.sticker.name }}</strong> sticker</small>\n                            </span>\n\n                            <span ng-if="result.type === \'sticker\'">\n                                {{ result.sticker.name }}\n                            </span>\n\n                            <small class="hidden-xs hidden-sm">\n                                <i class="fa fa-user"></i> <ng-pluralize count="result.people"\n                                when="{\'0\': \'Nobody yet\', \'one\': \'1 person\', \'other\': \'{} people\'}"></ng-pluralize>\n                            </small>\n\n                        </span>\n\n                        <span class="media-right media-middle">\n\n                            <small class="hidden-lg hidden-md">\n                                <i class="fa fa-user"></i> {{ result.people }}\n                            </small>\n\n                            <span class="btn btn-sm todo-btn"\n                               ng-click="toggleToDo($event, result)"\n                               ng-class="{\'btn-success\': result.isOnToDoList, \'btn-primary\': !result.isOnToDoList}"\n                               >\n                                <i class="fa fa-fw" ng-class="{\'fa-check\': result.isOnToDoList, \'fa-plus-circle\': !result.isOnToDoList}"></i>\n                                To Do\n                            </span>\n\n                        </span>\n\n                    </a>\n\n                </li>\n\n                <li class="result" ng-if="searchData.value">\n\n                    <a class="media" href="#" ng-click="newSticker(searchData.value)">\n\n                        <span class="media-left media-middle">\n                            <span class="sticker-create-icon"><i class="fa fa-plus"></i></span>\n                        </span>\n\n                        <span class="media-body media-middle result-text">\n                            Create a new sticker called <strong>{{ searchData.value | titlecase }}</strong>\n                        </span>\n                    </a>\n\n                </li>\n            </ul>\n\n        </div>\n    </div>\n\n    <div class="home-content">\n\n        <div class="white-bg">\n            <div class="container">\n\n                <div class="row">\n\n                    <div class="col-md-8">\n                        <h2>Featured Posts</h2>\n                        <ng-include src="\'views/partials/post-list.html\'"\n                                    ng-controller="PostsController"></ng-include>\n                    </div>\n\n                    <div class="col-md-4">\n                        <h2>Sticker Of The Week</h2>\n                        <a class="featured-sticker" href="/sticker/example-sticker">\n                            <span>\n                                Example Sticker\n                            </span>\n                        </a>\n\n                        <h2>The Latest</h2>\n                        <ul class="latest-actions" ng-controller="EventsController">\n                            <li\n                                    ng-repeat="event in eventLog"\n                                    class="event media"\n                                    ng-class="{\'liked\': !!event.liked, \'like-clicked\': !!event.likeClicked}"\n                                    >\n                                <span class="media-left">\n                                    <img ng-if="event.user.imageThumbUrl" ng-src="{{event.user.imageThumbUrl}}" class="user-image" />\n                                </span>\n\n                                <span class="media-body">\n                                    <ng-include src="\'views/partials/event-text.html\'"></ng-include>\n                                </span>\n\n                                <span class="media-right media-middle">\n\n                                    <a class="like-btn" ng-click="likeEvent($event, event)" href="#" ng-if="event.action === \'like\'">\n                                        <span>{{ event.likeCount | suppressZero }} <i class="fa fa-heart-o"></i></span>\n                                    </a>\n\n                                </span>\n                            </li>\n                        </ul>\n\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n</div>\n'),$templateCache.put("views/pages/notifications/index.html",'<div class="content">\n    <div class="container">\n\n        <notifications></notifications>\n\n    </div>\n</div>\n'),$templateCache.put("views/pages/settings/index.html",'<div class="content">\n<div class="container">\n    <h1>Settings</h1>\n\n    <form class="form-horizontal" role="form" ng-submit="submit()">\n\n        <div class="form-group" ng-class="{\'has-error\': formData.errors.picture}">\n            <label class="col-md-3 control-label">Picture <i class="fa fa-picture-o"></i></label>\n\n            <div class="col-md-9">\n\n                <a href="{{user.imageUrl}}" target="_blank"><img ng-src="{{user.imageThumbUrl}}" class="dz-image user-image user-current-image" ng-hide="hasNewImage" /></a>\n\n                <div class="dropzone needsclick" id="settings-image">\n                    <div class="fallback">\n                        <input name="file" type="file" multiple />\n                    </div>\n\n                    <a class="btn btn-labeled dropzone-btn needsclick">\n                        <span class="btn-label"><i class="fa fa-camera"></i></span>\n                        Select A New Picture\n                    </a>\n\n                    <a class="btn btn-primary btn-labeled" ng-click="generateAvatar($event)" ng-class="{\'btn-loading\': generatingAvatar}">\n                        <span class="btn-label"><i class="fa fa-image"></i></span>\n                        Generate A Random Picture\n                    </a>\n\n                    <div class="dz-message"></div>\n                </div>\n\n            </div>\n        </div>\n\n        <div class="form-group" ng-class="{\'has-error\': formData.errors.about}">\n            <label class="col-md-3 control-label">About Me <i class="fa fa-file-text"></i></label>\n\n            <div class="col-md-9">\n                <textarea class="form-control" name="about" ng-model="formData.about"></textarea>\n                <span ng-if="formData.errors.about" class="help-block">{{ formData.errors.about.join(\' \') }}</span>\n            </div>\n        </div>\n\n        <div class="form-group">\n            <div class="col-md-9 col-md-offset-3">\n                <button type="submit" class="btn btn-primary btn-labeled">\n                    <span class="btn-label"><i class="fa fa-save"></i></span>\n                    Save Changes\n                </button>\n            </div>\n        </div>\n\n    </form>\n</div>\n</div>\n'),$templateCache.put("views/pages/sticker/view.html",'<div class="content">\n    <div class="splash sticker-splash">\n        <div class="container">\n            <div class="row">\n\n                <div class="col-lg-6 text-shadow">\n\n                    <st-sticker sticker="sticker"></st-sticker>\n\n                    <div class="titlecrumbs sticker-title">\n                        <h3><a href="/category/{{ sticker.category.slug }}"><i class="fa fa-folder"></i> {{\n                            sticker.category.name }} Category</a></h3>\n\n                        <h1>{{ sticker.name }}</h1>\n                    </div>\n\n                    <div class="alert alert-success clear text-center" ng-if="sticker.hasCompleted">\n                        <p><i class="fa fa-trophy"></i> Congratulations, you\'ve earnt this sticker!</p>\n\n                        <p><a class="btn btn-success" href="/user/{{currentUser.username}}/stickers">See it in your\n                            Sticker Book</a></p>\n                    </div>\n\n                    <div class="padded-box">\n                        <p class="sticker-desc" ng-bind-html="sticker.description | markdown"></p>\n\n                        <h4 ng-if="sticker.time || sticker.cost || sticker.rating" class="white">Average Task\n                            Ratings</h4>\n                        <ul class="task-ratings white">\n                            <li ng-if="sticker.time"><strong>Time Needed</strong> <i class="fa fa-fw fa-clock-o"\n                                                                                     ng-repeat="n in [] | range:sticker.time"></i>\n                                <small>{{ times[(sticker.time - 1)] }}</small>\n                            </li>\n                            <li ng-if="sticker.cost"><strong>Cost</strong> <i class="fa fa-fw fa-usd"\n                                                                              ng-repeat="n in [] | range:sticker.cost"></i>\n                                <small>{{ costs[(sticker.cost - 1)] }}</small>\n                            </li>\n                            <li ng-if="sticker.rating"><strong>Rating</strong> <i class="fa fa-fw fa-star"\n                                                                                  ng-repeat="n in [] | range:sticker.rating"></i>\n                                <small>{{ ratings[(sticker.rating - 1)] }}</small>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <ul class="sticker-info">\n                        <li ng-if="sticker.creator">\n                            <i class="fa fa-user"></i> Sticker designed by\n                            <a href="/user/{{ sticker.creator.url }}">{{ sticker.creator.username }}</a>\n                        </li>\n                    </ul>\n                </div>\n\n                <div class="col-lg-6">\n\n                    <ul class="task-list">\n\n                        <li class="header">\n                            <h3>\n                                Complete {{ (sticker.requiredTasks ? sticker.requiredTasks : \'all\') }}\n                                of these tasks to earn the sticker:</h3>\n                        </li>\n\n                        <li class="ng-hide" ng-show="sticker.isOnToDoList && sticker.tasks.length > 0">\n                            <span>\n                                <st-progress progress="progress"></st-progress>\n                            </span>\n                        </li>\n\n                        <li class="ng-hide text-center" ng-show=" sticker.tasks.length < 1">\n                            <span>No tasks here yet.</span>\n                        </li>\n\n                        <li ng-repeat="task in sticker.tasks" class="task" ng-class="{\n                            \'completed\': task.hasCompleted,\n                            }">\n                            <a href="/task/{{ task.slug }}">\n\n                                <span ng-if="progress && progress.pendingIds.indexOf(task.id) !== -1"\n                                      class="label label-warning">Submitted</span>\n                                <span ng-if="progress && progress.rejectedIds.indexOf(task.id) !== -1"\n                                      class="label label-danger">Rejected</span>\n                                <span ng-if="task.hasCompleted" class="label label-success">Completed</span>\n\n                                <i class="fa"\n                                   ng-class="{\'fa-circle\': !task.hasCompleted, \'fa-check-circle\': task.hasCompleted}"></i>{{\n                                task.name }}\n                            </a>\n                        </li>\n\n                        <li class="text-right">\n                            <span>\n                                <a\n                                        class="btn btn-labeled no-block"\n                                        ng-class="{\n                                            \'btn-block\': sticker.tasks.length < 1,\n                                        }"\n                                        ng-click="addTask($event)" href="#">\n                                    <span class="btn-label"><i class="fa fa-plus-circle"></i></span>\n                                    Add {{ (sticker.tasks.length < 1 ? \'A\' : \'Another\') }} Task\n                                </a>\n                            </span>\n                        </li>\n\n\n                        <li ng-hide="sticker.isOnToDoList" class="text-center">\n                            <span>\n                                <h3>Want this sticker?</h3>\n                                <a class="btn btn-primary btn-block btn-labeled todo-btn" ng-click="toggleToDo()">\n                                    <span class="btn-label"><i class="fa fa-plus-circle"></i></span>\n                                    Add To Your To Do List\n                                </a>\n                            </span>\n                        </li>\n\n                        <li class="hidden-sm hidden-xs" ng-repeat="n in [] | range:taskPadding"></li>\n                    </ul>\n\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n    <div class="white-bg">\n        <div class="container">\n            <div class="row">\n\n                <div class="col-lg-6">\n\n                    <h2 ng-if="earners.users.length > 0"><i class="fa fa-trophy"></i> Who\'s Got It</h2>\n\n                    <st-users ng-if="earners.users.length > 0" data="earners" like="likeEarner"></st-users>\n\n                    <div style="margin-bottom:30px;"></div>\n\n                    <a class="btn btn-labeled pull-right no-block todo-btn"\n                           href="#"\n                           ng-click="toggleToDo()"\n                           ng-class="{\'btn-success\': sticker.isOnToDoList, \'btn-primary\': !sticker.isOnToDoList}"\n                           >\n                            <span class="btn-label"><i class="fa fa-fw" ng-class="{\'fa-check\': sticker.isOnToDoList, \'fa-plus-circle\': !sticker.isOnToDoList}"></i></span>\n                            To Do\n                        </a>\n\n                    <h2 style="margin-top:0;"><i class="fa fa-users"></i> Working On It</h2>\n\n                    <st-users data="doers" like="likeDoer"></st-users>\n\n                    <div ng-if="doers.users.length < 1" class="text-center text-muted">\n                        Nobody has this on their to do list yet.\n                    </div>\n\n                </div>\n\n                <div class="col-lg-6">\n\n                    <h2><i class="fa fa-folder-open"></i> Similar Stickers</h2>\n\n                    <ul class="small-sticker-list">\n                        <li\n                                ng-repeat="catSticker in sticker.category.stickers"\n                                ng-if="catSticker.id != sticker.id">\n                            <a href="/sticker/{{ catSticker.slug }}">\n                                <st-sticker sticker="catSticker"></st-sticker>\n                                <br/>{{ catSticker.name }}\n                            </a>\n                        </li>\n                    </ul>\n\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n</div>\n'),$templateCache.put("views/pages/stickers.html",'<div class="content">\n    <div class="container">\n        <div class="alert alert-info">\n            This will be a list of stickers sorted by most popular.\n        </div>\n    </div>\n</div>\n'),$templateCache.put("views/pages/task/submit.html","@extends('layouts.main')\n\n@section('breadcrumbs')\n{!! Breadcrumbs::render('task', $task) !!}\n@stop\n\n@section('content')\n<div class=\"container\">\n    <h1>{{ $task->name }}</h1>\n\n    <h2>Add Your Submission</h2>\n\n    <p><strong>To complete this task you must:</strong><br/>\n        {{ $task->submission }}\n    </p>\n\n    <form class=\"form-horizontal well\" method=\"post\" action=\"submit\">\n        {!! csrf_field() !!}\n\n        <div class=\"form-group <?=($errors->get('picture') ? 'has-error' : '')?>\">\n"+'            <label class="col-md-4 control-label">Picture <i class="fa fa-picture"></i></label>\n\n            <div class="col-md-8">\n                <input type="hidden"\n                       class="form-control"\n                       name="picture"\n                       value="{{ old(\'picture\') ? old(\'picture\') : \'\' }}"\n                       required/>\n                <?php\n                foreach ($errors->get(\'picture\') as $error) {\n                echo \'<span class="help-block">\' . $error . \'</span>\';\n                }\n                ?>\n                <a href="#" class="btn" id="task-submit-upload-picture-btn"><i class="fa fa-camera"></i> Upload a\n                    picture</a>\n\n                <img src="{{ old(\'picture\') ? old(\'picture\') : \'\' }}" id="task-submit-picture"/>\n\n            </div>\n        </div>\n\n        <div class="form-group">\n            <div class="col-md-8 col-md-offset-4">\n                <button type="submit" class="btn btn-success">Submit</button>\n            </div>\n        </div>\n\n    </form>\n</div>\n@endsection\n'),$templateCache.put("views/pages/task/view.html",'<div class="content dark-page">\n    <div class="container task-page" ng-if="task" ng-class="{\'post-page\': !!post}">\n\n\n        <div class="titlecrumbs task-title" ng-if="!post">\n            <h2 class="sticker-name" ng-if="task.sticker">\n                <a href="/sticker/{{ task.sticker.slug }}">\n                    <st-sticker sticker="task.sticker"></st-sticker>\n                    {{task.sticker.name }}\n                </a>\n            </h2>\n\n            <h1 class="task-name">\n                <i class="fa fa-check-square"></i> {{ task.name }}\n            </h1>\n        </div>\n\n        <div class="row clear">\n\n            <div class="content-col" ng-class="{\'col-md-6\': !post, \'col-md-8\': !!post}">\n\n                <div class="titlecrumbs post-title" ng-if="post">\n                    <h3 class="sticker-name">\n                        <a href="/sticker/{{ task.sticker.slug }}">\n                            <st-sticker sticker="task.sticker"></st-sticker>\n                            {{ task.sticker.name }}\n                        </a>\n                    </h3>\n\n                    <h2 class="task-name">\n                        <a href="/task/{{task.slug}}" ng-click="goToTask($event, task)">\n                            <i class="fa fa-check-square"></i> {{ task.name }}\n                        </a>\n                    </h2>\n\n                    <h1 class="post-name">\n                        <i class="fa fa-file-text-o"></i> {{ post.title }}\n                    </h1>\n                </div>\n\n                <div ng-if="post" class="clear">\n\n                    <div class="post single-post"\n                         ng-controller="PostsController"\n                         ng-class="{\'liked\': !!post.liked, \'like-clicked\': !!post.likeClicked}">\n\n                        <a class="like-btn" ng-click="likePost($event, post)" href="#">\n                            <span>{{ post.likeCount | suppressZero }} <i class="fa fa-heart-o"></i></span>\n                        </a>\n\n                        <ul class="post-info">\n                            <li>\n                                <a href="/user/{{post.user.username}}">\n                                    <img ng-if="post.user.image" ng-src="{{post.user.imageThumbUrl}}" class="user-image" />\n                                    <i ng-if="!post.user.image" class="fa fa-user"></i> {{post.user.username}}</a>\n                            </li>\n                            <li><a href="/task/{{post.task.slug}}/{{post.slug}}"><i class="fa fa-clock-o"></i> <span\n                                    am-time-ago="post.createdAt"></span></a></li>\n                        </ul>\n\n                        <p ng-bind-html="post.text | markdown"></p>\n\n                    </div>\n\n                    <div\n                        class="single-post-images"\n                        ng-if="post.images"\n                        masonry=\'{\n                            "transitionDuration": 0,\n                            "itemSelector": "div"\n                            }\'>\n                        <div ng-repeat="image in post.images">\n                            <a href="{{image.url}}" target="_blank">\n                                <img ng-src="{{image.url}}" masonry-image />\n                            </a>\n                        </div>\n                    </div>\n\n\n                    <a class="btn btn-block btn-labeled add-comment-btn"\n                       href="#"\n                       ng-click="showCommentForm($event)"\n                       ng-hide="commentFormVisible">\n                        <span class="btn-label"><i class="fa fa-comment"></i></span>\n                        Add A Comment\n                    </a>\n\n                    <h2 class="hidden-sm hidden-xs">Comments</h2>\n\n                    <div class="comments" id="comment-form-container">\n                        <div ng-include="\'views/partials/comment-form.html\'" id="comment-form-include"></div>\n                    </div>\n\n                    <st-comments class="comments" comments="comments.comments" show-comment-form="showCommentForm"></st-comments>\n\n                </div>\n\n                <div ng-if="!post">\n\n                    <div class="trans-box text-center">\n                        <h2>To Complete This Task</h2>\n\n                        <p>{{ task.submission }}</p>\n\n                        <p>\n                            <a class="btn btn-block btn-labeled" ng-click="showSubmissionForm()">\n                                <span class="btn-label"><i class="fa fa-check-circle"></i></span>\n                                Done It! Add Submission\n                            </a>\n                        </p>\n                    </div>\n\n                    <div class="padded-box" ng-if="task.description || task.time || task.cost || task.rating">\n                        <p class="white" ng-if="task.description">{{ task.description }}</p>\n                        <ul class="task-ratings white" ng-if="task.time || task.cost || task.rating">\n                            <li ng-if="task.time"><strong>Time Needed</strong> <i class="fa fa-fw fa-clock-o" ng-repeat="n in [] | range:task.time"></i> <small>{{ times[(task.time - 1)] }}</small></li>\n                            <li ng-if="task.cost"><strong>Cost</strong> <i class="fa fa-fw fa-usd" ng-repeat="n in [] | range:task.cost"></i> <small>{{ costs[(task.cost - 1)] }}</small></li>\n                            <li ng-if="task.rating"><strong>Rating</strong> <i class="fa fa-fw fa-star" ng-repeat="n in [] | range:task.rating"></i> <small>{{ ratings[(task.rating - 1)] }}</small></li>\n                            <li ng-if="task.ratings"><small>Based on {{ task.ratings }} {{\'rating\'|plural:task.ratings}}</small></li>\n                        </ul>\n                    </div>\n\n                    <div class="trans-box task-doers">\n\n                        <a class="btn btn-labeled pull-right no-block todo-btn"\n                           href="#"\n                           ng-click="toggleToDo()"\n                           ng-class="{\'btn-success\': task.isOnToDoList, \'btn-primary\': !task.isOnToDoList}"\n                           >\n                            <span class="btn-label"><i class="fa fa-fw" ng-class="{\'fa-check\': task.isOnToDoList, \'fa-plus-circle\': !task.isOnToDoList}"></i></span>\n                            To Do\n                        </a>\n\n                        <h2><i class="fa fa-users fa-fw"></i> Working On It</h2>\n\n                        <st-users ng-if="doers.users.length > 0" data="doers" like="likeDoer"></st-users>\n\n                        <p class="text-center" ng-if="!(doers.users.length > 0)">\n                            Nobody has this on their to do list yet.\n                        </p>\n                    </div>\n\n                </div>\n\n            </div>\n\n            <div class="posts-col" ng-class="{\'col-md-6\': !post, \'col-md-4\': !!post}">\n                <div class="posts-container">\n\n                    <a ng-click="showPostForm()" class="new-post-btn btn btn-labeled btn-block">\n                        <span class="btn-label"><i class="fa fa-plus-circle"></i></span>\n                        Post A Tip or Question\n                    </a>\n\n                    <div ng-if="posts.posts.length > 0" ng-include="\'views/partials/post-list.html\'" ng-controller="PostsController"></div>\n                    <div ng-if="posts.posts.length < 1" class="text-center trans-box">\n                        <p>No posts yet.</p>\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n\n    </div>\n\n</div>\n'),
$templateCache.put("views/pages/user/planner.html",'<div class="content">\n    <div class="container">\n\n        <h1 class="white">{{ user.possessiveName }} Planner</h1>\n\n        <div class="row">\n\n            <div class="todo-list col-md-6">\n\n                <h2 class="white">To Do List</h2>\n\n                <div ng-repeat="sticker in stickers" class="todo-item">\n                    <div class="media">\n\n                        <ul class="task-list">\n\n                            <li class="header">\n                                <a href="/sticker/{{sticker.slug}}">\n                                <span class="media-left">\n                                    <st-sticker sticker="sticker"></st-sticker>\n                                </span>\n\n                                <span class="media-body">\n                                    <h3>{{ sticker.name }}</h3>\n                                    <span class="sticker-progress" progress="sticker.progress"></span>\n                                </span>\n                                </a>\n                            </li>\n\n                            <li ng-repeat="task in sticker.todoTasks" class="task" ng-class="{\n                                \'completed\': task.hasCompleted,\n                                }">\n                                <a href="/task/{{ task.slug }}">\n\n                                    <span ng-if="progress && progress.pendingIds.indexOf(task.id) !== -1" class="label label-warning">Submitted</span>\n                                    <span ng-if="progress && progress.rejectedIds.indexOf(task.id) !== -1" class="label label-danger">Rejected</span>\n                                    <span ng-if="task.hasCompleted" class="label label-success">Completed</span>\n\n                                    <i class="fa" ng-class="{\'fa-circle\': !task.hasCompleted, \'fa-check-circle\': task.hasCompleted}"></i>{{ task.name }}\n                                </a>\n                            </li>\n                        </ul>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n            <div class="submission-list col-md-6">\n\n                <h2 class="white">Submissions</h2>\n\n                 <ng-include src="\'views/partials/post-list.html\'" ng-controller="PostsController"></ng-include>\n\n            </div>\n\n\n        </div>\n\n    </div>\n</div>\n'),$templateCache.put("views/pages/user/stickers.html",'<div class="content">\n<div class="container">\n\n    <h1>{{ user.username }}\'s Stickers</h1>\n\n    <a ng-repeat="sticker in stickers" href="/sticker/{{ sticker.slug }}">\n        <st-sticker sticker="sticker"></st-sticker>\n    </a>\n\n</div>\n</div>\n'),$templateCache.put("views/pages/user/submissions.html",'<div class="container">\n    <h1>{{ user.username }}\'s Submissions</h1>\n\n    <ul>\n        <li ng-repeat="submission in submissions">\n            {{ submission | json }}\n        </li>\n    </ul>\n\n</div>\n'),$templateCache.put("views/pages/user/view.html",'<div class="content">\n<div class="container">\n    <h1><img class="user-image" ng-src="{{user.imageThumbUrl}}" ng-if="user.imageThumbUrl" />{{ user.username }}</h1>\n\n    <h2 ng-if="user.profile.about">About {{ user.username }}</h2>\n    <p ng-if="user.profile.about">{{ user.profile.about }}</p>\n\n    <h2>Stickers</h2>\n    <a ng-repeat="sticker in stickers.stickers" href="/sticker/{{sticker.slug}}">\n        <st-sticker sticker="sticker"></st-sticker>\n    </a>\n\n    <h2>Posts</h2>\n    <ng-include src="\'views/partials/post-list.html\'" ng-controller="PostsController"></ng-include>\n</div>\n</div>\n'),$templateCache.put("views/partials/comment-form.html",'<form ng-submit="addComment()" class="comment comment-form" ng-if="commentFormVisible">\n    <div class="inner">\n        <textarea id="comment-text" class="form-control" ng-model="commentFormData.comment"></textarea>\n    </div>\n\n    <span class="author">\n        <i class="fa fa-user"></i> {{ currentUser.username }}\n    </span>\n\n    <span class="actions">\n        <a class="btn btn-sm btn-danger icn-btn" ng-click="hideCommentForm()">\n            <i class="fa fa-times"></i>\n        </a>\n\n        <button type="submit" class="btn btn-sm btn-primary">\n           <i class="fa fa-plus-circle"></i> Add\n        </button>\n    </span>\n</form>\n'),$templateCache.put("views/partials/comment.html",'<div class="comment" ng-class="{\'liked\': !!comment.liked, \'like-clicked\': !!comment.likeClicked}" data-commentid="{{comment.id}}">\n    <div class="inner">\n        <a class="like-btn" ng-click="likeComment($event, comment)" href="#">\n            <span>{{ comment.likeCount | suppressZero }} <i class="fa fa-heart-o"></i></span>\n        </a>\n\n        <div ng-bind-html="comment.comment | markdown"></div>\n    </div>\n\n    <span class="author">\n        <a href="/user/{{ comment.user.username }}">\n            <img ng-if="comment.user.image" ng-src="{{comment.user.imageThumbUrl}}" class="user-image" />\n            <i ng-if="!comment.user.image" class="fa fa-user"></i> {{ comment.user.username }}\n        </a>\n\n        <!-- TODO: Permalink -->\n        <a href="#"><i class="fa fa-clock-o"></i> <span am-time-ago="comment.createdAt"></span></a>\n    </span>\n\n    <span class="actions">\n\n        <!--{{ comment.replies.length }} loaded / {{ comment.replyCount }} replies-->\n\n        <a class="btn btn-sm btn-danger icn-btn" ng-if="$root.currentUser && $root.currentUser.id === comment.userId" ng-click="deleteComment($event, index, comment)" href="#"><i class="fa fa-trash"></i></a>\n\n        <span ng-switch on="(comment.replyCount > 0 && !comment.replies) || comment.replies.length < comment.replyCount">\n\n            <a class="btn btn-sm btn-primary" ng-switch-when="true" href="#" ng-click="loadCommentReplies($event, comment)">\n                <i class="fa fa-comments"></i> Load {{ comment.replyCount - (comment.replies ? comment.replies.length : 0) }} more replies\n            </a>\n\n            <a class="btn btn-sm" ng-switch-default href="#" ng-click="showCommentForm($event, comment)"><i class="fa fa-commenting"></i> Reply</a>\n\n        </span>\n\n    </span>\n\n    <st-comments class="comments replies comment-replies-{{comment.depth}}" comments="comment.replies" show-comment-form="showCommentForm"></st-comments>\n\n</div>\n'),$templateCache.put("views/partials/event-text.html",'<ng-switch on="event.type">\n\n    <span ng-switch-when="NEW_USER"><a href="/user/{{event.user.username}}">{{event.user.username}}</a> joined Stickable</span>\n\n    <span ng-switch-when="NEW_STICKER">\n        <span ng-if="event.user">\n            {{event.user.username}} created the sticker <a href="/sticker/{{event.sticker.slug}}">{{event.sticker.name}}</a>\n        </span>\n        <span ng-if="!event.user">\n            A new sticker, <a href="/sticker/{{event.sticker.slug}}">{{event.sticker.name}}</a>, was created.\n        </span>\n    </span>\n\n    <span ng-switch-when="NEW_TASK">\n        <span ng-if="event.user">\n            {{event.user.username}} created the task <a href="/task/{{event.task.slug}}">{{event.task.name}}</a>\n        </span>\n        <span ng-if="!event.user">\n            A new task, <a href="/task/{{event.task.slug}}">{{event.task.name}}</a>, was created.\n        </span>\n    </span>\n\n    <span ng-switch-when="NEW_POST">{{event.user.username}} posted <a href="/task/{{event.task.slug}}/{{event.post.slug}}">{{event.post.title}}</a> about {{event.task.name}}</span>\n\n    <span ng-switch-when="NEW_COMMENT">{{event.user.username}} <a href="/task/{{event.task.slug}}/{{event.post.slug}}#comment-{{event.commentId}}">commented on the post {{event.post.title}}</a></span>\n\n    <span ng-switch-when="STICKER_EARNT">{{event.user.username}} earnt the sticker <a href="/sticker/{{event.sticker.slug}}">{{event.sticker.name}}</a></span>\n\n    <span ng-switch-when="SUBMISSION_APPROVED">{{event.user.username}} completed the task <a href="/task/{{event.task.slug}}">{{event.task.name}}</a></span>\n\n    <span ng-switch-when="NEW_TO_DO">\n        <span ng-if="event.sticker">\n            {{event.user.username}} wants the sticker <a href="/sticker/{{event.sticker.slug}}">{{event.sticker.name}}</a>\n        </span>\n        <span ng-if="event.task">\n            {{event.user.username}} wants to <a href="/task/{{event.task.slug}}">{{event.task.name}}</a>\n        </span>\n    </span>\n\n    <span ng-switch-default>{{event.type}}</span>\n\n</ng-switch>\n'),$templateCache.put("views/partials/footer.html",'<footer>\n    <div class="container-fluid">\n        <div class="pull-left">\n            &copy; Stickable.io\n        </div>\n        <div class="pull-right">\n            <a href="https://api.stickable.io/docs/" target="_blank"><i class="fa fa-code-fork"></i> API</a>\n            <a href="https://github.com/antriver/stickable-frontend"><i class="fa fa-github"></i> GitHub</a>\n            <a href="#"><i class="fa fa-book"></i> Terms of Use</a>\n            <a href="#"><i class="fa fa-lock"></i> Privacy Policy</a>\n            <a href="mailto:help@stickable.io"><i class="fa fa-envelope-o"></i> Contact Us</a>\n        </div>\n    </div>\n</footer>\n'),$templateCache.put("views/partials/header.html",'<header class="navbar" id="top-bar">\n    <div class="container-fluid">\n\n        <div class="navbar-header" ng-class="{\'has-title\':headerTitle}">\n\n            <a href="#" ng-click="back()" class="navbar-back"><i class="fa fa-chevron-left"></i></a>\n\n            <button type="button" class="navbar-toggle">\n                <span class="navbar-toggle-icon">\n                    <span></span>\n                </span>\n            </button>\n\n            <a ui-sref="home" class="navbar-brand"><img src="/assets/img/stickable.svg" alt="Stickable" /></a>\n\n            <h1>{{ headerTitle }}</h1>\n        </div>\n\n        <ul ng-if="currentUser" class="nav navbar-nav navbar-right notification-nav" ng-class="{\'has-notification\': notifications.length > 0}">\n            <li>\n                <a ng-click="toggleNotifications($event)" href="#">\n                    <span ng-show="notifications.length > 0" class="notification">{{ notifications.length }}</span>\n                    <i ng-show="notifications.length < 1" class="fa fa-envelope fa-fw"></i>\n                    <b class="caret visible-lg-inline-block"></b>\n                </a>\n            </li>\n        </ul>\n\n        <st-notifications\n                class="header-notifications"\n                ng-class="{\n                    \'notifications-preview\': !notificationsOpen && notificationsPreview\n                    }"\n                ng-if="currentUser && (notificationsOpen || notificationsPreview)"\n                notifications="notifications"\n                toggle="toggleNotifications"\n                ></st-notifications>\n\n        <nav role="navigation" id="top-bar-nav">\n\n            <ng-include src="\'views/partials/nav.html\'"></ng-include>\n\n            <form class="navbar-form navbar-right visible-lg" ng-submit="login()" ng-if="currentUser === false">\n\n                <div class="form-group">\n                    <input id="header-username"\n                           type="text"\n                           class="form-control input-sm"\n                           name="username"\n                           placeholder="Username"\n                           ng-model="loginFormData.username"/>\n                </div>\n                <div class="form-group">\n                    <input id="header-password"\n                           type="password"\n                           class="form-control input-sm"\n                           name="password"\n                           placeholder="Password"\n                           ng-model="loginFormData.password"/>\n                </div>\n                <button id="header-login-btn" type="submit" class="btn btn-labeled btn-primary" ng-class="{\'btn-loading\': loginFormData.loading}">\n                    <i class="fa fa-key fa-fw"></i>\n                    Login\n                </button>\n                <a class="btn" href="/signup"><i class="fa fa-user fa-fw"></i> Signup</a>\n            </form>\n\n        </nav>\n\n\n    </div>\n</header>\n'),$templateCache.put("views/partials/nav.html",'<ul class="nav navbar-nav">\n    <li class="hidden-lg hidden-md"><a href="/"><i class="fa fa-home fa-fw"></i> Front Page</a></li>\n    <li><a href="/bot"><i class="fa fa-search fa-fw"></i> Ideas</a></li>\n    <li><a href="/browse"><i class="fa fa-folder fa-fw"></i> Categories</a></li>\n    <li><a href="/stickers"><i class="fa fa-trophy fa-fw"></i> Popular</a></li>\n    <li><a href="/help"><i class="fa fa-question fa-fw"></i> Help</a></li>\n</ul>\n\n<ul class="nav navbar-nav navbar-right nav-logged-in" ng-if="currentUser">\n\n    <li><a href="/user/{{ currentUser.username }}/planner"><i class="fa fa-bookmark fa-fw"></i> Planner</a></li>\n    <li><a href="/user/{{ currentUser.username }}/stickers"><i class="fa fa-trophy fa-fw"></i> Sticker Book</a>\n    </li>\n\n    <li class="dropdown">\n        <a class="dropdown-toggle" href="#" data-toggle="dropdown">\n            <img class="user-image" ng-src="{{ currentUser.imageThumbUrl}}" />\n            {{ currentUser.username }} <b class="caret"></b>\n        </a>\n        <ul class="dropdown-menu">\n            <li><a href="/user/{{ currentUser.username }}"><i class="fa fa-user fa-fw"></i> Profile</a></li>\n            <li><a href="/settings"><i class="fa fa-cog fa-fw"></i> Settings</a></li>\n            <li><a href="#" ng-click="logout()"><i class="fa fa-unlock-alt fa-fw"></i> Logout</a></li>\n        </ul>\n    </li>\n</ul>\n\n<ul class="nav navbar-nav navbar-right nav-logged-out hidden-lg" ng-if="currentUser === false">\n    <li><a href="/login"><i class="fa fa-key fa-fw"></i> Login</a></li>\n    <li><a href="/signup"><i class="fa fa-user fa-fw"></i> Signup</a></li>\n</ul>\n'),$templateCache.put("views/partials/post-list.html",'<ul class="posts media-list to-edge">\n\n    <li class="post media"\n        ng-repeat="thisPost in posts.posts"\n        ng-class="{\'with-task\': !!showPostTasks, \'liked\': !!thisPost.liked, \'like-clicked\': !!thisPost.likeClicked}"\n            ng-if="!post || post.id != thisPost.id">\n\n        <span class="media-left media-middle" ng-if="thisPost.image">\n            <a href="/task/{{ (thisPost.task ? thisPost.task.slug : (task ? task.slug : \'\'))}}/{{ thisPost.slug }}"\n               ng-click="goToPost($event, thisPost)">\n                <img class="media-object" ng-src="{{ thisPost.image.thumbUrl }}"/>\n            </a>\n        </span>\n        <span class="media-body media-middle">\n\n            <a class="like-btn" ng-click="likePost($event, thisPost)" href="#">\n                <span>{{ thisPost.likeCount | suppressZero }} <i class="fa fa-heart-o"></i></span>\n            </a>\n\n            <a class="title"\n               href="/task/{{ (thisPost.task ? thisPost.task.slug : (task ? task.slug : \'\'))}}/{{ thisPost.slug }}"\n               ng-click="goToPost($event, thisPost)">{{ thisPost.title }}</a>\n\n            <span class="details">\n\n                <span ng-if="showPostTasks">\n                    <a href="/task/{{thisPost.task.slug}}">\n                        <i class="fa fa-check-square-o"></i> {{ thisPost.task.name }}\n                    </a>\n                    <br/>\n                </span>\n\n                <span ng-if="showPostApproval && thisPost.submission.approved === true" class="green">\n                    <i class="fa fa-check-circle"></i> Approved Submission\n                </span>\n\n                <span ng-if="showPostApproval && thisPost.submission.approved === null" class="yellow">\n                    <i class="fa fa-pause-circle"></i> Pending Submission\n                </span>\n\n                <span ng-if="showPostApproval && thisPost.submission.approved === false" class="red">\n                    <i class="fa fa-times-circle"></i> Rejected Submission\n                </span>\n\n                <!--<span ng-if="!showPostApproval && thisPost.type === \'SUBMISSION\'">\n                    <i class="fa"\n'+"                   ng-class=\"{'fa-check-circle': thisPost.type === 'SUBMISSION', 'fa-question-circle' : thisPost.type === 'QUESTION', 'fa-info-circle' : thisPost.type === 'TIP'}\"></i>\n                    {{ thisPost.type.capitalizeFirstLetter() }}\n                </span>-->\n\n                <span ng-if=\"showPostUser !== false\"><i class=\"fa fa-user\"></i> {{ thisPost.user.username }}</span>\n                <i class=\"fa fa-comment\"></i> {{ thisPost.commentCount }}\n\n            </span>\n        </span>\n\n    </li>\n\n</ul>\n"),$templateCache.put("views/partials/sidenav.html",'<nav role="navigation" id="sidenav">\n\n    <ng-include src="\'views/partials/nav.html\'"></ng-include>\n\n</nav>\n\n<div id="sidenav-closer"></div>\n'),$templateCache.put("views/partials/submission-forms/image.html",'\n<div class="dropzone needsclick" id="post-file">\n    <div class="fallback">\n        <input name="file" type="file" multiple />\n    </div>\n\n    <a class="btn btn-lg btn-primary btn-labeled dropzone-btn needsclick no-block">\n        <i class="fa fa-camera fa-2x"></i><br/>\n        Select Photos\n    </a>\n\n    <div class="dz-message">\n        <i class="fa fa-info-circle"></i> Select photos for your submission or drag them to this box.\n    </div>\n</div>\n\n<p class="submission-help submission-photo-help"><i class="fa fa-info-circle"></i> You can either show yourself in the photo or your username should be in the photo (on a piece of paper for example, not added with Photoshop). Our moderators will check the photo to ensure it meets the requirements of this task.</p>\n'),$templateCache.put("views/partials/submission-forms/text.html",'<textarea placeholder="Write stuff here." ng-model="submissionFormData.text"></textarea>\n')}]),Messenger.options={extraClasses:"messenger-fixed messenger-on-top messenger-on-center",theme:"flat"},app.controller("BotController",function($element,$scope,$rootScope,TaskResource){$rootScope.pageTitle="What To Do";var skipMessages=["No thanks","Screw that","That Sucks","I don't want to","Pass","Nope","Something better","Something else"],goMessages=["Sounds good","Sure","Let's do it","I'm in"];$scope.skipMessage=null,$scope.goMessage=null,$scope.task=null,$scope.loading=!1,$scope.formData={cost:null,time:null},$scope.findTask=function(){return $scope.loading?!1:($scope.loading=!0,$scope.task=null,void TaskResource.query($scope.formData,function(task){console.log(task),$scope.loading=!1,$scope.task=task,clearBg(),task.bgUrl&&setBg($element,task.bgUrl),skipMessages.shuffle(),$scope.skipMessage=skipMessages[0],goMessages.shuffle(),$scope.goMessage=goMessages[0]},function(response){$scope.loading=!1,$scope.task=!1}))},$scope.findTask(),$scope.$watch("formData.cost",function(){$scope.findTask()}),$scope.$watch("formData.time",function(){$scope.findTask()})}),app.controller("BrowseController",function($element,$scope,$rootScope,CategoryResource){$rootScope.pageTitle="Categories",$scope.categories=CategoryResource.query(),setBg($element,"/assets/img/bg/cats.jpg")}),app.controller("CategoryController",function($scope,$rootScope,$state,$stateParams,$element,CategoryResource){$rootScope.loading=!0,$scope.category=null,$scope.hasSubcategories=!1,$scope.hasStickers=!1,CategoryResource.get({slug:$stateParams.slug},function(category){$scope.category=category,$rootScope.headerTitle=category.name,$rootScope.pageTitle=category.name,$scope.hasSubcategories=category.subcategories.length>0,$scope.hasStickers=category.stickers.length>0,setBg($element,category.bgUrl)})}),app.controller("HelpController",function($element,$scope,$rootScope){$rootScope.pageTitle="Help",setBg($element,"/assets/img/bg/about.jpg")}),app.controller("HomeController",function($element,$state,$scope,$rootScope,$filter,CategoryResource,PostResource,StickerResource,ModalService,debounce,ToDoResource,EventLogResource){var splashImages=["aurora","field","girl","hiking","stars","surfboard","trees"];splashImages.shuffle(),$scope.splashImage="/assets/img/splash/"+splashImages[0]+".jpg",$scope.setBg=function(){setBg($element,$scope.splashImage)},$scope.setBg(),$scope.eventLog=EventLogResource.query(),$scope.searchData={value:""},$scope.searchResults=[],$scope.searchLoading=!1;var debouncedSearch=debounce(300,function(){$scope.searchData.value&&($scope.searchOpen=!0,$scope.searchLoading=!0,StickerResource.search({q:$scope.searchData.value},function(results){for(var i=0;i<results.length;i++){var result=results[i];"task"===result.type?result.isOnToDoList=result.task.isOnToDoList:result.isOnToDoList=result.sticker.isOnToDoList}$scope.searchLoading=!1,$scope.searchResults=results}))});$scope.search=function(){debouncedSearch()},$scope.searchFocus=function(){$rootScope.searchOpen=!0,$scope.setBg(),window.scrollTo(0,0),document.body.scrollTop=0},$scope.closeSearch=function(){$scope.searchData.value="",$scope.searchResults=[],$rootScope.searchOpen=!1},$scope.searchBlur=function(){$(".close-search-btn:visible").length<1&&($scope.searchData.value||($rootScope.searchOpen=!1))},$scope.newSticker=function(name){name=$filter("titlecase")(name),ModalService.showModal({templateUrl:"views/modals/sticker-form.html",controller:"StickerFormController",inputs:{name:name}}).then(function(modal){modal.close.then(function(sticker){sticker&&$state.go("sticker",{slug:sticker.slug})})})},$scope.toggleToDo=function($event,result){preventDefault($event);var data={},name="";"task"===result.type?(data.taskId=result.task.id,name=result.task.name):(data.stickerId=result.sticker.id,name=result.sticker.name),result.isOnToDoList?(result.isOnToDoList=!1,result.people-=1,ToDoResource["delete"]({username:$rootScope.currentUser.username},data,function(result){alertSuccess("Removed "+name+" from your To Do List")},function(result){alertError(result.data.message)})):(result.isOnToDoList=!0,result.people+=1,ToDoResource.save({username:$rootScope.currentUser.username},data,function(result){alertSuccess("Added "+name+" to your To Do List")},function(result){alertError(result.data.message)}))},$scope.showPostTasks=!0,$scope.posts=PostResource.query()}),app.controller("NotificationsController",function($scope,$rootScope,UserNotificationsResource){$rootScope.pageTitle="Notifications",$scope.init=function(){return $rootScope.currentUser?void UserNotificationsResource.query({username:$rootScope.currentUser.username},function(results){$rootScope.notifications=results}):!1},$rootScope.$on("login",function(){$scope.init()}),$scope.init()}),app.controller("SettingsController",function($scope,$rootScope,$state,$stateParams,AuthService,UserResource,$timeout){$rootScope.pageTitle="Settings",$scope.hasNewImage=!1;var dropzone;$timeout(function(){dropzone=new Dropzone("#settings-image",{acceptedFiles:"image/*",maxFiles:1,autoProcessQueue:!1,url:"/api/images?sessionToken="+AuthService.getSessionToken(),clickable:".dropzone-btn",thumbnailWidth:100}),dropzone.on("addedfile",function(){null!=dropzone.files[1]&&dropzone.removeFile(dropzone.files[0]),$scope.hasNewImage=dropzone.files.length>0,$scope.$apply()}),dropzone.on("success",function(file){console.log(file);var response=JSON.parse(file.xhr.response);console.log("response"),response&&response.hasOwnProperty("image")&&($scope.formData.imageId=response.image.id),console.log("$scope.formData",$scope.formData),$scope.finishSubmit()}),dropzone.on("error",function(file,errorMessage){alertError("Unable to save avatar. "+errorMessage.message)}),dropzone.on("removedfile",function(){$scope.hasNewImage=dropzone.files.length>0,$scope.formData.imageId=!1;try{$scope.$$phase||$scope.$apply()}catch(e){}})},10),$scope.formData={about:"",imageId:""},$scope.user=null,$scope.init=function(){return $rootScope.currentUser?void UserResource.get({username:$rootScope.currentUser.username},function(user){console.log(user),$scope.user=user,$scope.formData.about=user.profile.about}):!1},$rootScope.$on("login",function(){$scope.init()}),$scope.init(),$scope.submit=function(){$scope.hasNewImage?dropzone.processQueue():$scope.finishSubmit()},$scope.finishSubmit=function(){UserResource.update({username:$rootScope.currentUser.username},$scope.formData,function(response){$scope.formData.loading=!1,$scope.user=response.user,$scope.hasNewImage=!1,dropzone.removeAllFiles(),alertSuccess("Changes saved")},function(response){$scope.formData.loading=!1,response.data.messages&&(response.data.messages.hasOwnProperty("picture")||response.data.messages.hasOwnProperty("about"))?$scope.formData.errors=response.data.messages:alertError(response.data.message)})},$scope.generatingAvatar=!1,$scope.generateAvatar=function($event){return preventDefault($event),$scope.generatingAvatar?!1:($scope.generatingAvatar=!0,void UserResource.generateAvatar({username:$rootScope.currentUser.username},{},function(response){$scope.generatingAvatar=!1,$scope.user=response.user,$scope.hasNewImage=!1,dropzone.removeAllFiles(),alertSuccess("Changes saved")},function(response){$scope.generatingAvatar=!1,alertError(response.data.message)}))}}),app.controller("StickerController",function($scope,$rootScope,$state,$stateParams,StickerResource,ToDoResource,ProgressService,ModalService){$rootScope.loading=!0,$scope.sticker=null,$scope.progress=null,$scope.taskPadding=0,StickerResource.get({slug:$stateParams.slug},function(sticker){$rootScope.loading=!1,$rootScope.pageTitle=sticker.name,$scope.sticker=sticker,sticker.progress&&($scope.progress=ProgressService.getProgress(sticker)),setBg($(".sticker-splash"),sticker.bgUrl),$scope.loadDoers(),$scope.earners=StickerResource.getEarners({slug:sticker.slug}),$scope.taskPadding=Math.max(0,6-sticker.tasks.length)}),$scope.loadDoers=function(){StickerResource.getDoers({slug:$scope.sticker.slug},function(result){$scope.doers=result})},$scope.toggleToDo=function(){$scope.sticker.isOnToDoList?($scope.sticker.isOnToDoList=!1,ToDoResource["delete"]({username:$rootScope.currentUser.username},{stickerId:$scope.sticker.id},function(result){alertSuccess("Removed "+$scope.sticker.name+" from your To Do List"),$scope.loadDoers()},function(result){alertError(result.data.message)})):($scope.sticker.isOnToDoList=!0,ToDoResource.save({username:$rootScope.currentUser.username},{stickerId:$scope.sticker.id},function(result){alertSuccess("Added "+$scope.sticker.name+" to your To Do List"),$scope.loadDoers()},function(result){alertError(result.data.message)}))},$scope.likeEarner=function($event,earner){preventDefault($event),earner.likeClicked=!0,earner.pivot.liked=earner.pivot.liked?!1:!0,earner.pivot.liked?(earner.likeCount=earner.pivot.likeCount=parseInt(earner.pivot.likeCount)+1,StickerResource.likeEarner({slug:$scope.sticker.slug,earntId:earner.pivot.id})):(earner.likeCount=earner.pivot.likeCount=parseInt(earner.pivot.likeCount)-1,StickerResource.unlikeEarner({slug:$scope.sticker.slug,earntId:earner.pivot.id})),earner.likeCount=earner.pivot.likeCount},$scope.likeDoer=function($event,doer){preventDefault($event),doer.likeClicked=!0,doer.pivot.liked=doer.pivot.liked?!1:!0,doer.pivot.liked?(doer.pivot.likeCount=parseInt(doer.pivot.likeCount)+1,ToDoResource.likeDoer({toDoId:doer.pivot.id})):(doer.pivot.likeCount=parseInt(doer.pivot.likeCount)-1,ToDoResource.unlikeDoer({toDoId:doer.pivot.id})),doer.likeCount=doer.pivot.likeCount},$scope.addTask=function($event){preventDefault($event),ModalService.showModal({templateUrl:"views/modals/task-form.html",controller:"TaskFormController",inputs:{sticker:$scope.sticker}}).then(function(modal){modal.close.then(function(task){task&&$state.go("task",{slug:task.slug})})})}}),app.controller("StickersController",function($element,$scope,$rootScope){$rootScope.pageTitle="Popular Stickers",setBg($element,"/assets/img/bg/about.jpg")}),app.controller("TaskController",function($scope,$rootScope,$element,$state,$stateParams,$timeout,ModalService,TaskResource,SubmissionResource,ToDoResource,PostResource,CommentResource){function onTaskLoad(task){$scope.task=task,setBg($element,task.bgUrl)}$rootScope.loading=!0,$scope.task=null,$scope.doers=null,$scope.showPostTasks=!1,$scope.postsOrder="featured",$scope.posts=PostResource.getTaskPosts({taskSlug:$stateParams.slug},{type:$scope.postType}),$scope.post=null,$scope.comments=null,$stateParams.postSlug?PostResource.get({postSlug:$stateParams.postSlug},function(response){$rootScope.loading=!1,$rootScope.pageTitle=response.post.title,$scope.post=response.post,onTaskLoad(response.post.task),response.post&&($scope.comments=CommentResource.getPostsComments({postId:response.post.id}))}):TaskResource.get({slug:$stateParams.slug},function(task){$rootScope.loading=!1,$rootScope.pageTitle=task.name,onTaskLoad(task),$scope.loadDoers()}),$scope.loadDoers=function(){TaskResource.getDoers({slug:$scope.task.slug},function(result){$scope.doers=result})},$scope.likeDoer=function($event,doer){preventDefault($event),doer.likeClicked=!0,doer.pivot.liked=doer.pivot.liked?!1:!0,doer.pivot.liked?(doer.pivot.likeCount=parseInt(doer.pivot.likeCount)+1,ToDoResource.likeDoer({toDoId:doer.pivot.id})):(doer.pivot.likeCount=parseInt(doer.pivot.likeCount)-1,ToDoResource.unlikeDoer({toDoId:doer.pivot.id})),doer.likeCount=doer.pivot.likeCount},$scope.goToTask=function($event,task){},$scope.setPostsOrder=function(order){$scope.postsOrder=order},$scope.showSubmissionForm=function(){ModalService.showModal({templateUrl:"views/modals/submission-form.html",controller:"SubmissionFormController",inputs:{task:$scope.task}}).then(function(modal){modal.close.then(function(post){post&&$scope.posts.posts.unshift(post)})})},$scope.showPostForm=function(type){ModalService.showModal({templateUrl:"views/modals/post-form.html",controller:"PostFormController",inputs:{task:$scope.task,postType:type}}).then(function(modal){modal.close.then(function(post){post&&$scope.posts.posts.unshift(post)})})},$scope.toggleToDo=function(){$scope.task.isOnToDoList?($scope.task.isOnToDoList=!1,ToDoResource["delete"]({username:$rootScope.currentUser.username},{taskId:$scope.task.id},function(result){alertSuccess("Removed "+$scope.task.name+" from your To Do List"),$scope.loadDoers()},function(result){alertError(result.data.message)})):($scope.task.isOnToDoList=!0,ToDoResource.save({username:$rootScope.currentUser.username},{taskId:$scope.task.id},function(result){alertSuccess("Added "+$scope.task.name+" to your To Do List"),$scope.loadDoers()},function(result){alertError(result.data.message)}))},$scope.submissionFormData={loading:!1,text:"",image:""},$scope.addSubmission=function(){$scope.submissionFormData.loading=!0,SubmissionResource.save({taskId:$scope.task.id,text:$scope.submissionFormData.text,image:$scope.submissionFormData.image},function(response){},function(response){alertError(response.data.message)})},$scope.commentFormVisible=!1,$scope.showCommentForm=function($event,replyToComment){preventDefault($event),$scope.commentFormVisible=!0,replyToComment?($scope.commentFormData.replyTo=replyToComment,$(".comment[data-commentid="+replyToComment.id+"] > .replies").prepend($("#comment-form-include"))):($scope.commentFormData.replyTo=null,$("#comment-form-container").prepend($("#comment-form-include")))},$scope.hideCommentForm=function(clear){clear&&($scope.commentFormData.comment=""),$scope.commentFormVisible=!1,$("#comment-form-container").prepend($("#comment-form-include"))},$scope.commentFormData={loading:!1,replyTo:null,comment:""},$scope.addComment=function(){$scope.commentFormData.loading=!0,$scope.commentFormData.replyTo?CommentResource.saveReply({commentId:$scope.commentFormData.replyTo.id,comment:$scope.commentFormData.comment},function(response){$scope.commentFormData.replyTo.replies||($scope.commentFormData.replyTo.replies=[]),$scope.commentFormData.replyTo.replies.unshift(response.comment),
$scope.commentFormData.replyTo.replyCount+=1,$scope.hideCommentForm(!0)},function(response){alertError(response.data.message)}):CommentResource.save({postId:$scope.post.id,comment:$scope.commentFormData.comment},function(response){$scope.comments.comments.unshift(response.comment),$scope.hideCommentForm(!0)},function(response){alertError(response.data.message)})}}),app.controller("ForgotController",function($element,$scope,$rootScope,$state,$stateParams,UserResource){$rootScope.pageTitle="Forgotten Login Details",setBg($element,"/assets/img/bg/login.jpg"),$scope.forgotFormData={loading:!1,email:"",errors:{}},$scope.success=!1,$scope.submit=function(){return $scope.forgotFormData.loading=!0,UserResource.forgot({},{email:$scope.forgotFormData.email},function(response){$scope.forgotFormData.loading=!1,$scope.success=!0},function(response){$scope.forgotFormData.loading=!1,response.data.messages&&response.data.messages.hasOwnProperty("email")?$scope.forgotFormData.errors=response.data.messages:alertError(response.data.message)}),!1}}),app.controller("LoginController",function($element,$scope,$rootScope,$state,$stateParams,AuthService){$rootScope.pageTitle="Login",setBg($element,"/assets/img/bg/login.jpg"),$scope.loginFormData={loading:!1,username:"",password:"",errors:{}},$scope.login=function(){return $scope.loginFormData.loading=!0,AuthService.login($scope.loginFormData.username,$scope.loginFormData.password).then(function(response){$scope.loginFormData.loading=!1,$state.go("home")},function(response){$scope.loginFormData.loading=!1,$scope.sortLoginErrors(response)}),!1},$scope.sortLoginErrors=function(response){response.messages&&(response.messages.hasOwnProperty("username")||response.messages.hasOwnProperty("password"))?$scope.loginFormData.errors=response.messages:$scope.loginFormData.errors={general:response.message}},$stateParams.loginFormData&&($scope.loginFormData=$stateParams.loginFormData),$stateParams.response&&$scope.sortLoginErrors($stateParams.response)}),app.controller("ResetController",function($element,$scope,$state,$stateParams,UserResource){$rootScope.pageTitle="Reset Password",setBg($element,"/assets/img/bg/login.jpg"),$scope.resetFormData={loading:!1,token:$stateParams.token,password:"",confirmPassword:"",errors:{}},$scope.success=!1,$scope.submit=function(){return $scope.resetFormData.password!=$scope.resetFormData.confirmPassword?($scope.resetFormData.errors={confirmPassword:["Passwords do not match."]},!1):($scope.resetFormData.loading=!0,UserResource.reset({},{token:$scope.resetFormData.token,password:$scope.resetFormData.password},function(response){$scope.resetFormData.loading=!1,$scope.success=!0},function(response){$scope.resetFormData.loading=!1,response.data.messages&&response.data.messages.hasOwnProperty("password")?$scope.resetFormData.errors=response.data.messages:alertError(response.data.message)}),!1)}}),app.controller("SignupController",function($element,$scope,$rootScope,$state,AuthService,UserResource){$rootScope.pageTitle="Signup",setBg($element,"/assets/img/bg/register.jpg"),$scope.signupFormData={loading:!1,username:"",password:"",email:"",errors:{}},$scope.signup=function(){return $scope.signupFormData.loading?!1:($scope.signupFormData.errors={},$scope.signupFormData.loading=!0,void UserResource.save({username:$scope.signupFormData.username,password:$scope.signupFormData.password,email:$scope.signupFormData.email},function(response){AuthService.login($scope.signupFormData.username,$scope.signupFormData.password).then(function(response){$scope.signupFormData.loading=!1,$state.go("home")},function(response){$scope.signupFormData.loading=!1,$scope.signupFormData.errors={general:response.message}})},function(response){$scope.signupFormData.loading=!1,response=response.data,response.messages&&(response.messages.hasOwnProperty("username")||response.messages.hasOwnProperty("password")||response.messages.hasOwnProperty("email"))?$scope.signupFormData.errors=response.messages:$scope.signupFormData.errors={general:response.message}}))}}),app.controller("PostFormController",function($scope,PostResource,task,postType,close){$scope.task=task,$scope.postType=postType?postType:"tip",$scope.close=close,$scope.formData={title:"",text:""},$scope.setPostType=function($event,postType){preventDefault($event),$scope.postType=postType===$scope.postType?"":postType},$scope.submit=function(){PostResource.saveTaskPost({taskSlug:$scope.task.slug},{title:$scope.formData.title,text:$scope.formData.text,type:$scope.postType},function(response){console.log(response),alertSuccess("Post saved"),close(response.post)},function(response){alertError(response.data.message)})}}),app.controller("StickerFormController",function($scope,CategoryResource,name,close,StickerResource){$scope.categories=CategoryResource.getList(),$scope.close=close,$scope.formData={name:name,categoryId:null},$scope.errors={},$scope.submitting=!1,$scope.submit=function(){if($scope.submitting)return!1;var errors=!1;return $scope.errors={},$scope.formData.name||($scope.errors.name=["Please enter a name."],errors=!0),$scope.formData.categoryId||($scope.errors.categoryId=["Please pick a category."],errors=!0),errors?!1:($scope.submitting=!0,void StickerResource.save($scope.formData,function(response){$scope.submitting=!1,console.log(response),alertSuccess("Sticker saved"),close(response.sticker)},function(response){$scope.submitting=!1,response.data.messages&&(response.data.messages.hasOwnProperty("name")||response.data.messages.hasOwnProperty("categoryId"))?$scope.errors=response.data.messages:alertError(response.data.message)}))}}),app.controller("SubmissionFormController",function($scope,SubmissionResource,task,close,$timeout,AuthService){function getImageIds(){for(var ids=[],files=dropzone.getFilesWithStatus("success"),i=0;i<files.length;i++){var file=files[i],response=JSON.parse(file.xhr.response);response&&response.hasOwnProperty("image")&&ids.push(response.image.id)}return ids}$scope.task=task,$scope.submissionType=task.submissionType.toLowerCase(),$scope.close=close,$scope.hasFirstStage="image"===$scope.submissionType,$scope.stage=$scope.hasFirstStage?1:2,$scope.nextEnabled=$scope.hasFirstStage?!1:!0,$scope.errors={},$scope.formData={imageIds:[],title:"",text:"","private":0,cost:null,time:null,rating:null};var dropzone;"image"===$scope.submissionType&&$timeout(function(){dropzone=new Dropzone("#post-file",{acceptedFiles:"image/*",addRemoveLinks:!0,url:"/api/images?sessionToken="+AuthService.getSessionToken(),clickable:".dropzone-btn",thumbnailWidth:96}),dropzone.on("sending",function(){$scope.nextEnabled=!1,$scope.$apply()}),dropzone.on("complete",function(){console.log("getFilesWithStatus",dropzone.getFilesWithStatus("success")),$scope.nextEnabled=dropzone.getFilesWithStatus("success").length>0,$scope.$apply()}),dropzone.on("removedfile",function(){$scope.nextEnabled=dropzone.getFilesWithStatus("success").length>0,$scope.$apply()})},10),$scope.toStage=function(stage){$scope.stage=stage},$scope.nextStage=function(){switch($scope.stage){case 1:"image"===$scope.submissionType&&(dropzone.processQueue(),$scope.formData.imageIds=getImageIds());break;case 2:}$scope.stage++},$scope.setPrivate=function($event,val){preventDefault($event),$scope.formData["private"]=val},$scope.submitting=!1,$scope.submit=function(){if($scope.submitting)return!1;var errors=!1;return $scope.errors={},$scope.formData.title||($scope.errors.title=["Please enter a title."],$scope.stage=2,errors=!0),$scope.formData.text||($scope.errors.text=["Please enter some content."],$scope.stage=2,errors=!0),errors?!1:($scope.submitting=!0,void SubmissionResource.save({taskSlug:$scope.task.slug},$scope.formData,function(response){$scope.submitting=!1,console.log(response),alertSuccess("Submission saved")},function(response){$scope.submitting=!1,response.data.messages&&(response.data.messages.hasOwnProperty("title")||response.data.messages.hasOwnProperty("text"))?$scope.errors=response.data.messages:alertError(response.data.message)}))}}),app.controller("TaskFormController",function($scope,sticker,close,TaskResource){$scope.close=close,$scope.formData={stickerId:sticker.id,name:"",submission:"",submissionType:"IMAGE"},$scope.errors={},$scope.submissionTypes=[{value:"IMAGE",icon:"camera",label:"Take A Picture"},{value:"TEXT",icon:"pencil",label:"Write Something"}],$scope.submitting=!1,$scope.submit=function(){if($scope.submitting)return!1;var errors=!1;return $scope.errors={},$scope.formData.name||($scope.errors.name=["Please enter a name."],errors=!0),$scope.formData.submission||($scope.errors.submission=["Please fill this out."],errors=!0),errors?!1:($scope.submitting=!0,void TaskResource.save($scope.formData,function(response){$scope.submitting=!1,alertSuccess("Task saved"),close(response.task)},function(response){$scope.submitting=!1,$scope.submitting=!1,response.data.messages&&(response.data.messages.hasOwnProperty("name")||response.data.messages.hasOwnProperty("submission"))?$scope.errors=response.data.messages:alertError(response.data.message)}))}}),app.controller("CommentFormController",function($scope,$rootScope,$state,$stateParams,CommentResource){console.log("commentformcontroller",$scope),$scope.task=$scope.$parent.task}),app.controller("EventsController",function($scope,$state,EventLogResource){$scope.likeEvent=function($event,event){preventDefault($event),event.liked=event.liked?!1:!0,event.likeClicked=!0,event.liked?(EventLogResource.likeEvent({id:event.id}),event.likeCount=parseInt(event.likeCount)+1):(EventLogResource.unlikeEvent({id:event.id}),event.likeCount=parseInt(event.likeCount)-1)}}),app.controller("HeaderController",function($scope,$rootScope,$state,ModalService,AuthService){$scope.loginFormData={loading:!1,username:"",password:"",errors:{}},$scope.login=function(){return $scope.loginFormData.loading=!0,console.log($scope),AuthService.login($scope.loginFormData.username,$scope.loginFormData.password).then(function(response){$scope.loginFormData.loading=!1},function(response){$scope.loginFormData.loading=!1,console.log("passing to login",{loginFormData:$scope.loginFormData,response:response}),$state.go("login",{loginFormData:$scope.loginFormData,response:response})}),!1},$scope.logout=function(){AuthService.logout()},$scope.back=function(){window.history.go(-1)},$scope.toggleNotifications=function($event){preventDefault($event),$rootScope.notificationsOpen=!$rootScope.notificationsOpen}}),app.controller("PostsController",function($scope,$state,PostResource){console.log("PostsController",$scope),$scope.likePost=function($event,post){preventDefault($event),post.liked=post.liked?!1:!0,post.likeClicked=!0,post.liked?(PostResource.likePost({id:post.id}),post.likeCount=parseInt(post.likeCount)+1):(PostResource.unlikePost({id:post.id}),post.likeCount=parseInt(post.likeCount)-1)},$scope.goToPost=function($event,post){}}),app.controller("UserPlannerController",function($element,$scope,$rootScope,$state,$stateParams,UserResource,ToDoResource,ProgressService){$rootScope.loading=!0,setBg($element,"/assets/img/bg/planner.jpg"),$scope.stickers=[],$scope.submissions=[],$scope.showPostTasks=!0,$scope.showPostUser=!1,$scope.showPostApproval=!0,$scope.posts=[],$scope.user=null,$scope.username=$stateParams.username,ToDoResource.query({username:$scope.username},function(result){$scope.user=result.user,$scope.stickers=result.stickers,$rootScope.pageTitle=result.user.possessiveName+" Planner";for(var i in result.stickers)result.stickers.hasOwnProperty(i)&&(result.stickers[i].progress=ProgressService.getProgress(result.stickers[i]));UserResource.getPosts({username:$scope.username,type:"submission"},function(response){$scope.posts=response})})}),app.controller("UserProfileController",function($scope,$rootScope,$state,$stateParams,AuthService,UserResource,ToDoResource){$rootScope.loading=!0,$scope.username=$stateParams.username,$scope.user=null,$scope.stickers=null,$scope.todo=null,$scope.posts=null,UserResource.get({username:$scope.username},function(user){$scope.user=user,$rootScope.pageTitle=user.username,$scope.stickers=UserResource.getStickers({username:$scope.username}),$scope.posts=UserResource.getPosts({username:$scope.username}),ToDoResource.query({username:$scope.username},function(result){$scope.todo=result.tasks})})}),app.controller("UserStickersController",function($scope,$rootScope,$state,$stateParams,UserResource){$rootScope.loading=!0,$scope.user=null,$scope.username=$stateParams.username,$scope.stickers=[],UserResource.getStickers({username:$scope.username},function(result){$scope.user=result.user,$scope.stickers=result.stickers,$rootScope.pageTitle=result.user.possessiveName+" Stickers"})}),function(angular,factory){return"function"==typeof define&&define.amd?void define(["angular","ckeditor"],function(angular){return factory(angular)}):factory(angular)}(angular||null,function(angular){var $defer,app=angular.module("ngCkeditor",[]),loaded=!1;return app.run(["$q","$timeout",function($q,$timeout){function checkLoaded(){if("loaded"==CKEDITOR.status){for(var localPlugins=["uploadimage","uploadwidget","widget","filetools","notificationaggregator","lineutils","notification"],i=0;i<localPlugins.length;i++)CKEDITOR.plugins.addExternal(localPlugins[i],"/assets/bower_components/ckeditor/plugins/"+localPlugins[i]+"/");CKEDITOR.plugins.addExternal("markdown","/assets/bower_components/ckeditor-markdown-plugin/markdown/"),CKEDITOR.plugins.addExternal("imagebutton","/assets/bower_components/ckeditor-image-button/"),loaded=!0,$defer.resolve()}else checkLoaded()}if($defer=$q.defer(),angular.isUndefined(CKEDITOR))throw new Error("CKEDITOR not found");CKEDITOR.disableAutoInline=!0,CKEDITOR.on("loaded",checkLoaded),CKEDITOR.on("dialogDefinition",function(e){var dd=e.data.definition;if("link"===e.data.name){dd.minHeight=30,dd.removeContents("advanced"),dd.removeContents("target"),dd.removeContents("upload");for(var tabInfo=dd.getContents("info");tabInfo.elements.length>0;)tabInfo.remove(tabInfo.elements[0].id);tabInfo.add({type:"text",id:"urlNew",label:"URL",setup:function(data){var value="";data.url?(data.url.protocol&&(value+=data.url.protocol),data.url.url&&(value+=data.url.url)):data.email&&data.email.address&&(value="mailto:"+data.email.address),this.setValue(value)},commit:function(data){data.url={protocol:"",url:this.getValue()}}})}}),$timeout(checkLoaded,100)}]),app.directive("ckeditor",["$timeout","$q",function($timeout,$q){return{restrict:"AC",require:["ngModel","^?form"],scope:!1,link:function(scope,element,attrs,ctrls){var ngModel=ctrls[0],form=ctrls[1]||null,EMPTY_HTML="<p></p>",isTextarea="textarea"==element[0].tagName.toLowerCase(),data=[],isReady=!1;isTextarea||element.attr("contenteditable",!0);var onLoad=function(){var options={contentsCss:["https://fonts.googleapis.com/css?family=Roboto+Slab|Roboto:300|Rancho","/assets/build/"+assetVersion+"/css/stickable.min.css"],extraPlugins:"uploadimage,markdown,imagebutton",disableObjectResizing:!0,linkShowAdvancedTab:!1,linkShowTargetTab:!1,selectMultiple:!0,imageUploadUrl:"/api/images",removePlugins:"elementspath,magicline,contextmenu,liststyle,tabletools",resize_enabled:!1,height:300,width:"100%",toolbar:[{items:["Bold","Italic","Strike","Underline"]},{items:["BulletedList","NumberedList"]},{items:["Link","Image","imagebutton"]},{items:["Markdown"]}],disableNativeSpellChecker:!1,uiColor:"#FAFAFA"};attrs.ckeditor&&(options=angular.extend(options,scope[attrs.ckeditor]));var instance=isTextarea?CKEDITOR.replace(element[0],options):CKEDITOR.inline(element[0],options),configLoaderDef=$q.defer();element.bind("$destroy",function(){console.log("destroy"),instance.removeAllListeners(),CKEDITOR.remove(instance)});var setModelData=function(setPristine){var data=instance.getData();data=data?toMarkdown(data):null,$timeout(function(){(setPristine!==!0||data!=ngModel.$viewValue)&&ngModel.$setViewValue(data),setPristine===!0&&form&&form.$setPristine()},0)},onUpdateModelData=function(setPristine){if(data.length){var item=data.pop()||EMPTY_HTML;isReady=!1,instance.setData(item,function(){setModelData(setPristine),isReady=!0})}};instance.on("change",setModelData),instance.on("blur",setModelData),instance.on("instanceReady",function(){scope.$broadcast("ckeditor.ready"),scope.$apply(function(){onUpdateModelData(!0)}),instance.document.on("keyup",setModelData)}),instance.on("customConfigLoaded",function(){configLoaderDef.resolve()}),ngModel.$render=function(){data.push(ngModel.$viewValue),isReady&&onUpdateModelData()}};"loaded"==CKEDITOR.status&&(loaded=!0),loaded?onLoad():$defer.promise.then(onLoad)}}}]),app}),app.directive("dropzone",function(){return function(scope,element,attrs){var config,dropzone;config=scope[attrs.dropzone],dropzone=new Dropzone(element[0],config.options),angular.forEach(config.eventHandlers,function(handler,event){dropzone.on(event,handler)})}}),function(){angular.module("masonry",["ng"]).directive("masonry",function($timeout){return{restrict:"AC",link:function(scope,elem,attrs){var container=elem[0],options=angular.extend({itemSelector:".item"},angular.fromJson(attrs.masonry)),masonry=scope.masonry=new Masonry(container,options),debounceTimeout=0;scope.update=function(){debounceTimeout&&$timeout.cancel(debounceTimeout),debounceTimeout=$timeout(function(){debounceTimeout=0,masonry.reloadItems(),masonry.layout(),elem.find("*[masonry-image]").css("visibility","visible")},120)},scope.removeBrick=function(){$timeout(function(){masonry.reloadItems(),masonry.layout()},500)},scope.appendBricks=function(ele){masonry.appended(ele)},scope.$on("masonry.layout",function(){masonry.layout()}),scope.update()}}}).directive("masonryImage",function(){return{restrict:"AC",link:function(scope,elem){elem.css("visibility","hidden");var master=elem.closest("*[masonry]").scope(),update=master.update,removeBrick=master.removeBrick,appendBricks=master.appendBricks;update&&(imagesLoaded(elem.get(0),update),elem.ready(update)),appendBricks&&imagesLoaded(elem.get(0),appendBricks(elem)),scope.$on("$destroy",function(){removeBrick&&removeBrick()})}}})}(),app.directive("stComments",function(){return{restrict:"E",scope:{comments:"=",showCommentForm:"="},controller:function($scope,CommentResource){$scope.likeComment=function($event,comment){preventDefault($event),comment.liked=comment.liked?!1:!0,comment.likeClicked=!0,comment.liked?(CommentResource.likeComment({commentId:comment.id}),comment.likeCount=parseInt(comment.likeCount)+1):(CommentResource.unlikeComment({commentId:comment.id}),comment.likeCount=parseInt(comment.likeCount)-1)},$scope.loadCommentReplies=function($event,comment){preventDefault($event),CommentResource.getCommentReplies({commentId:comment.id},function(response){comment.replies=response.comments},function(response){alertError(response.data.message)})},$scope.deleteComment=function($event,index,comment){preventDefault($event),confirm("Are you sure you want to delete this comment?")&&(CommentResource["delete"]({commentId:comment.id}),$scope.comments.splice(index,1))}},template:function($scope){return'<div class="comment-include" ng-repeat="(index, comment) in comments" ng-include="\'views/partials/comment.html\'"></div>'}}}),app.directive("stNotifications",function(){return{templateUrl:"views/directives/st-notifications.html",scope:{notifications:"=",toggle:"="},controller:function($scope,$rootScope,$state,UserNotificationsResource){$scope.clear=function($event,index){preventDefault($event);var notification=$scope.notifications[index];$scope.notifications.splice(index,1),$scope.notifications.length<1&&($rootScope.notificationsOpen=!1),console.log("$scope.notifications",$scope.notifications,$scope.notifications.length,$rootScope.notificationsOpen),UserNotificationsResource["delete"]({username:$rootScope.currentUser.username,id:notification.id})},$scope.goTo=function($event,index){preventDefault($event);var notification=$scope.notifications[index];switch($scope.clear($event,index),$scope.toggle($event),notification.destination.type){case"comment":$state.go("post",{slug:notification.destination.task.slug,postSlug:notification.destination.post.slug,commentId:notification.commentId});break;case"post":$state.go("post",{slug:notification.destination.task.slug,postSlug:notification.destination.post.slug});break;case"task":$state.go("task",{slug:notification.destination.task.slug});break;case"sticker":$state.go("sticker",{slug:notification.destination.sticker.slug})}}}}}),app.directive("stProgress",function(){return{restrict:"E",scope:{progress:"="},templateUrl:"views/directives/st-progress.html"}}),app.directive("stRating",function(){return{restrict:"E",controller:function($scope){$scope.setValue=function(val){$scope.model=val}},scope:{model:"=",values:"="},template:function(){for(var t='<ul class="rating">',i=5;i>0;i--)t+="<li ng-class=\"{'active': model === "+i+'}" ng-click="setValue('+i+')">{{ values['+(i-1)+"] }}</li>";return t+="</ul>"}}}),app.directive("stSticker",function(){return{restrict:"E",link:function($scope,$element){function getInitials(string){return string.match(/\b\w/g).join("")}$scope.$watch("sticker",function(newSticker){if(newSticker)if($element.children("div").remove(),newSticker.design&&newSticker.design.imageUrl)$element.html('<span class="sticker" data-sticker-img="'+newSticker.design.imageUrl+'"></span>'),Sticker.init($element.children(".sticker")[0]);else{var initials=getInitials(newSticker.name);$element.html('<span class="sticker sticker-initials"><span>'+initials+"</span></span>")}})},scope:{sticker:"="}}}),app.directive("stTabs",function(){return{restrict:"E",controller:function($scope){$scope.onChange=function($event,value){preventDefault($event),$scope.model=value}},scope:{model:"=",values:"="},templateUrl:"views/directives/st-tabs.html"}}),app.directive("stUsers",function(){return{restrict:"E",scope:{data:"=",like:"="},templateUrl:"views/directives/st-users.html"}}),angular.module("markdown",[]).filter("markdown",function(){return function(text){return marked(text||"")}}),app.filter("plural",function(){return function(word,count){return 1===count?word:word+"s"}}),app.filter("range",function(){return function(val,range){range=parseInt(range);for(var i=0;range>i;i++)val.push(i);return val}}),app.filter("suppressZero",function(){return function(value){return parseInt(value)?value:void 0}}),app.filter("titlecase",function(){return function(input){if(!input)return"";var smallWords=/^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i;return input=input.toLowerCase(),input.replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g,function(match,index,title){return index>0&&index+match.length!==title.length&&match.search(smallWords)>-1&&":"!==title.charAt(index-2)&&("-"!==title.charAt(index+match.length)||"-"===title.charAt(index-1))&&title.charAt(index-1).search(/[^\s-]/)<0?match.toLowerCase():match.substr(1).search(/[A-Z]|\../)>-1?match:match.charAt(0).toUpperCase()+match.substr(1)})}}),Array.prototype.shuffle=function(){var j,temp,i=this.length;if(0===i)return this;for(;--i;)j=Math.floor(Math.random()*(i+1)),temp=this[i],this[i]=this[j],this[j]=temp;return this},String.prototype.capitalizeFirstLetter=function(){return this.charAt(0).toUpperCase()+this.slice(1).toLowerCase()},app.factory("CategoryResource",function($resource,AuthService){return $resource(apiUrl+"categories/:slug",{slug:"@slug",sessionToken:function(){return AuthService.getSessionToken()||null}},{get:{cache:!0,transformResponse:function(data){return data=angular.fromJson(data),data.category}},getList:{cache:!0,url:apiUrl+"categories/list",transformResponse:function(data){return data=angular.fromJson(data),data.categories}},query:{cache:!0,isArray:!0,transformResponse:function(data){return data=angular.fromJson(data),data.categories}}})}),app.factory("CommentResource",function($resource,AuthService){return $resource(apiUrl+"comments/:commentId",{commentId:"@commentId",postId:"@postId",sessionToken:function(){return AuthService.getSessionToken()||null}},{save:{method:"POST",url:apiUrl+"posts/:postId/comments"},saveReply:{method:"POST",url:apiUrl+"comments/:commentId/replies"},getPostsComments:{method:"GET",url:apiUrl+"posts/:postId/comments"},getCommentReplies:{method:"GET",url:apiUrl+"comments/:commentId/replies"},getLikes:{url:apiUrl+"comments/:commentId/likes",method:"GET"},likeComment:{url:apiUrl+"comments/:commentId/likes",method:"POST"},unlikeComment:{url:apiUrl+"comments/:commentId/likes",method:"DELETE"}})}),app.factory("EventLogResource",function($resource,AuthService){return $resource(apiUrl+"event-logs",{id:"@id",sessionToken:function(){return AuthService.getSessionToken()||null}},{query:{isArray:!0,transformResponse:function(data){return data=angular.fromJson(data),data.events}},likeEvent:{url:apiUrl+"event-logs/:id/likes",method:"POST"},unlikeEvent:{url:apiUrl+"event-logs/:id/likes",method:"DELETE"}})}),app.factory("PostResource",function($resource,AuthService){return $resource(apiUrl+"posts/:id",{id:"@id",postSlug:"@postSlug",taskSlug:"@taskSlug",sessionToken:function(){return AuthService.getSessionToken()||null}},{query:{},getTaskPosts:{method:"GET",url:apiUrl+"tasks/:taskSlug/posts"},saveTaskPost:{method:"POST",url:apiUrl+"tasks/:taskSlug/posts"},get:{url:apiUrl+"posts/:postSlug",cache:!0},likePost:{url:apiUrl+"posts/:id/likes",method:"POST"},unlikePost:{url:apiUrl+"posts/:id/likes",method:"DELETE"}})}),app.factory("SessionResource",function($resource){return $resource(apiUrl+"sessions",{sessionToken:"@sessionToken"},{get:{transformResponse:function(data){return data=angular.fromJson(data),data.session}}})}),app.factory("StickerResource",function($resource,AuthService){return $resource(apiUrl+"stickers/:slug",{slug:"@slug",earntId:"@earntId",sessionToken:function(){return AuthService.getSessionToken()||null}},{get:{transformResponse:function(data){return data=angular.fromJson(data),data.sticker}},search:{cache:!0,isArray:!0,url:apiUrl+"stickers/search",transformResponse:function(data){return data=angular.fromJson(data),data.results}},getDoers:{method:"GET",url:apiUrl+"stickers/:slug/doers"},getEarners:{method:"GET",url:apiUrl+"stickers/:slug/earners"},likeEarner:{method:"POST",url:apiUrl+"stickers/:slug/earners/:earntId/likes"},unlikeEarner:{method:"DELETE",url:apiUrl+"stickers/:slug/earners/:earntId/likes"}})}),app.factory("SubmissionResource",function($resource,AuthService){return $resource(apiUrl+"submissions/:submissionId",{submissionId:"@submissionId",taskSlug:"@taskSlug",sessionToken:function(){return AuthService.getSessionToken()||null}},{save:{method:"POST",url:apiUrl+"tasks/:taskSlug/submissions"}})}),app.factory("TaskResource",function($resource,AuthService){return $resource(apiUrl+"tasks/:slug",{slug:"@slug",sessionToken:function(){return AuthService.getSessionToken()||null}},{query:{isArray:!1,transformResponse:function(data){return data=angular.fromJson(data),data.task}},get:{cache:!0,transformResponse:function(data){return data=angular.fromJson(data),data.task}},getDoers:{method:"GET",url:apiUrl+"tasks/:slug/doers"}})}),app.factory("ToDoResource",function($resource,AuthService){return $resource(apiUrl+"users/:username/todo",{username:"@username",slug:"@slug",taskId:"@taskId",stickerId:"@stickerId",toDoId:"@toDoId",sessionToken:function(){return AuthService.getSessionToken()||null}},{query:{method:"GET"},"delete":{method:"DELETE",url:apiUrl+"users/:username/todo"},getLikes:{method:"GET",url:apiUrl+"todo/:toDoId/likes"},likeDoer:{method:"POST",url:apiUrl+"todo/:toDoId/likes"},unlikeDoer:{method:"DELETE",url:apiUrl+"todo/:toDoId/likes"}})}),app.factory("UserNotificationsResource",function($resource,AuthService){return $resource(apiUrl+"users/:username/notifications/:id",{username:"@username",sessionToken:function(){return AuthService.getSessionToken()||null}},{query:{method:"GET",isArray:!0,transformResponse:function(data){var data=angular.fromJson(data);return data.notifications}}})}),app.factory("UserResource",function($resource,AuthService){return $resource(apiUrl+"users",{username:"@username",sessionToken:function(){return AuthService.getSessionToken()||null}},{get:{url:apiUrl+"users/:username",cache:!0,transformResponse:function(data){var data=angular.fromJson(data);return data.user}},update:{method:"PUT",url:apiUrl+"users/:username"},generateAvatar:{method:"POST",url:apiUrl+"users/:username/generate-avatar"},save:{method:"POST"},forgot:{method:"POST",url:apiUrl+"users/forgot"},reset:{method:"POST",url:apiUrl+"users/reset"},getStickers:{method:"GET",url:apiUrl+"users/:username/stickers"},getPosts:{method:"GET",url:apiUrl+"users/:username/posts"},getSubmissions:{method:"GET",url:apiUrl+"users/:username/submissions"}})}),app.service("AuthService",function(localStorageService,SessionResource,$q,$rootScope){var session=null,sessionToken=null;return{checkSession:function(){var self=this;(sessionToken=localStorageService.get("sessionToken"))?SessionResource.get({sessionToken:sessionToken},function(session){self.onLogin(session,sessionToken)},function(response){400===response.status?self.onLogout():alertError("There was an error logging in to Stickable. Please refresh to try again.")}):self.onLogout()},login:function(username,password){var self=this;return $q(function(resolve,reject){SessionResource.save({username:username,password:password},function(response){self.onLogin(response.session,response.sessionToken),resolve(response.session.user)},function(response){reject(response.data)})})},onLogin:function(newSession,newSessionToken){session=newSession,sessionToken=newSessionToken,localStorageService.set("sessionToken",newSessionToken),console.log("onLogin",newSession),$rootScope.$broadcast("login",{user:newSession.user,token:newSessionToken})},logout:function(){var self=this;SessionResource["delete"]({sessionToken:sessionToken}),self.onLogout()},onLogout:function(){session=!1,sessionToken=!1,localStorageService.remove("sessionToken"),$rootScope.$broadcast("logout")},getSessionToken:function(){return sessionToken},getUser:function(){return null===session?null:session&&session.user?session.user:!1}}}),app.service("NotificationService",function($rootScope,$timeout,AuthService,UserNotificationsResource){console.log("NotificationService");var socket=null,connected=!1;return{getNotifications:function(user){$rootScope.notifications=UserNotificationsResource.query({username:user.username})},onLogin:function(user){this.getNotifications(user),this.initSocket()},initSocket:function(){var self=this;return null!==socket?(connected&&self.setUser(),socket):(socket=io(socketUrl),socket.on("connect",function(){connected=!0,self.setUser()}),socket.on("new-notification",function(message){self.addNewNotification(message.notification)}),socket)},setUser:function(){socket.emit("set-user",{token:AuthService.getSessionToken()})},addNewNotification:function(notification){notification["new"]=!0,$rootScope.notifications.unshift(notification),$rootScope.notificationsPreview+=1,$rootScope.$digest(),$timeout(function(){notification["new"]=!1,$rootScope.notificationsPreview-=1},3e3)}}}),app.service("ProgressService",function(){return{getProgress:function(sticker){var progress={completed:0,completedIds:[],pending:0,pendingIds:[],rejected:0,rejectedIds:[],remaining:0,percent:0},taskIds=[];progress.completed=sticker.progress.completed.length;for(var i=0;i<sticker.progress.completed.length;i++){var taskId=sticker.progress.completed[i].id;progress.completedIds.push(taskId),taskIds.push(taskId)}for(var i=0;i<sticker.progress.pending.length;i++){var taskId=sticker.progress.pending[i].id;-1===taskIds.indexOf(taskId)&&(progress.pendingIds.push(taskId),taskIds.push(taskId))}for(var i=0;i<sticker.progress.rejected.length;i++){var taskId=sticker.progress.rejected[i].id;-1===taskIds.indexOf(taskId)&&(progress.rejectedIds.push(taskId),taskIds.push(taskId))}progress.pending=sticker.progress.pending.length,progress.rejected=sticker.progress.rejected.length;var required=sticker.requiredTasks;return required||(required=sticker.tasks.length),
progress.remaining=Math.max(0,required-progress.completed),progress.percent=Math.ceil(Math.min(progress.completed,required)/required*100),progress}}});
//# sourceMappingURL=stickable.min.js.map